{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1","program":"C:\\Users\\tweek\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"sync\"","-C","metadata=35051941edf143e3","-C","extra-filename=-35051941edf143e3","--out-dir","c:\\Users\\tweek\\Desktop\\Rust_The_Complete_Guide\\chat\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\tweek\\Desktop\\Rust_The_Complete_Guide\\chat\\target\\rls\\debug\\deps","--extern","pin_project_lite=c:\\Users\\tweek\\Desktop\\Rust_The_Complete_Guide\\chat\\target\\rls\\debug\\deps\\libpin_project_lite-5abec1ffd5ee3eb9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\tweek\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\tweek\\Desktop\\Rust_The_Complete_Guide\\chat\\target\\rls\\debug\\deps\\libtokio-35051941edf143e3.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[16269243201531182605,0]},"crate_root":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src","external_crates":[{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\wake_list.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}}],"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":0,"byte_end":19217,"line_start":1,"line_end":537,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12715},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\support.rs","byte_start":33412,"byte_end":33418,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":2,"index":43552},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\support.rs","byte_start":33438,"byte_end":33441,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":2,"index":46178},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\support.rs","byte_start":33462,"byte_end":33466,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42493,"byte_end":42505,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42550,"byte_end":42559,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42604,"byte_end":42613,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42660,"byte_end":42670,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42711,"byte_end":42718,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":3803},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42888,"byte_end":42893,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":9799},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42895,"byte_end":42904,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":3801},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42906,"byte_end":42912,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":9932},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42914,"byte_end":42922,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":82133,"byte_end":82146,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":350}},{"kind":"Use","ref_id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620518,"byte_end":12620526,"line_start":433,"line_end":433,"column_start":32,"column_end":40},"alias_span":null,"name":"Notified","value":"","parent":{"krate":0,"index":1132}},{"kind":"Use","ref_id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620574,"byte_end":12620581,"line_start":437,"line_end":437,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620583,"byte_end":12620600,"line_start":437,"line_end":437,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668308,"byte_end":12668315,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668317,"byte_end":12668328,"line_start":93,"line_end":93,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668330,"byte_end":12668336,"line_start":93,"line_end":93,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668338,"byte_end":12668346,"line_start":93,"line_end":93,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668348,"byte_end":12668354,"line_start":93,"line_end":93,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668432,"byte_end":12668449,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668451,"byte_end":12668468,"line_start":100,"line_end":100,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668470,"byte_end":12668485,"line_start":100,"line_end":100,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620682,"byte_end":12620687,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620689,"byte_end":12620699,"line_start":444,"line_end":444,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620701,"byte_end":12620713,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620701,"byte_end":12620713,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620715,"byte_end":12620730,"line_start":444,"line_end":444,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620732,"byte_end":12620748,"line_start":444,"line_end":444,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620799,"byte_end":12620805,"line_start":447,"line_end":447,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620896,"byte_end":12620908,"line_start":452,"line_end":452,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620910,"byte_end":12620925,"line_start":452,"line_end":452,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620972,"byte_end":12620981,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620983,"byte_end":12620998,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621000,"byte_end":12621020,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621060,"byte_end":12621066,"line_start":458,"line_end":458,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621106,"byte_end":12621126,"line_start":459,"line_end":459,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621167,"byte_end":12621188,"line_start":460,"line_end":460,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621236,"byte_end":12621263,"line_start":461,"line_end":461,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621297,"byte_end":12621312,"line_start":462,"line_end":462,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621347,"byte_end":12621363,"line_start":463,"line_end":463,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621405,"byte_end":12621427,"line_start":464,"line_end":464,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621532,"byte_end":12621540,"line_start":470,"line_end":470,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621542,"byte_end":12621550,"line_start":470,"line_end":470,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":1131}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":0,"byte_end":19217,"line_start":1,"line_end":537,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":65},{"krate":0,"index":102},{"krate":0,"index":350},{"krate":0,"index":441},{"krate":0,"index":719},{"krate":0,"index":851},{"krate":0,"index":1131},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_must_use)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":220,"byte_end":245,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":450,"byte_end":533,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":534,"byte_end":537,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":538,"byte_end":618,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":619,"byte_end":691,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":692,"byte_end":728,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":729,"byte_end":732,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":733,"byte_end":800,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":801,"byte_end":881,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":882,"byte_end":905,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":906,"byte_end":993,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":994,"byte_end":1067,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1068,"byte_end":1146,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1147,"byte_end":1227,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1228,"byte_end":1278,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1279,"byte_end":1282,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1283,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1340,"byte_end":1343,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1344,"byte_end":1376,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1377,"byte_end":1400,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1401,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1425,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1452,"byte_end":1473,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1474,"byte_end":1493,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1494,"byte_end":1523,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1524,"byte_end":1551,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1552,"byte_end":1571,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1572,"byte_end":1601,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1602,"byte_end":1648,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1649,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1653,"byte_end":1674,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1675,"byte_end":1678,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1679,"byte_end":1758,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1759,"byte_end":1832,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1833,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1913,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1929,"byte_end":1932,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":1933,"byte_end":2005,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2006,"byte_end":2043,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2044,"byte_end":2047,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2048,"byte_end":2059,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2060,"byte_end":2110,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2111,"byte_end":2118,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2119,"byte_end":2122,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2123,"byte_end":2153,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2154,"byte_end":2157,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2158,"byte_end":2239,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2240,"byte_end":2325,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2326,"byte_end":2410,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2411,"byte_end":2441,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2442,"byte_end":2445,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2446,"byte_end":2462,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2463,"byte_end":2466,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2467,"byte_end":2533,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2534,"byte_end":2537,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2538,"byte_end":2549,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2550,"byte_end":2600,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2601,"byte_end":2608,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2609,"byte_end":2612,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2613,"byte_end":2640,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2641,"byte_end":2644,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2645,"byte_end":2725,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2726,"byte_end":2808,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2809,"byte_end":2890,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2891,"byte_end":2926,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2927,"byte_end":2930,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2931,"byte_end":2947,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2948,"byte_end":2951,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":2952,"byte_end":3034,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3035,"byte_end":3085,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3086,"byte_end":3089,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3090,"byte_end":3101,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3102,"byte_end":3157,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3158,"byte_end":3165,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3166,"byte_end":3169,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3170,"byte_end":3195,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3196,"byte_end":3199,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3200,"byte_end":3276,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3277,"byte_end":3360,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3361,"byte_end":3404,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3405,"byte_end":3408,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3409,"byte_end":3488,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3489,"byte_end":3572,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3573,"byte_end":3651,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3652,"byte_end":3671,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3672,"byte_end":3675,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3676,"byte_end":3749,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3750,"byte_end":3765,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3766,"byte_end":3769,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3770,"byte_end":3813,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3814,"byte_end":3846,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3847,"byte_end":3882,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3883,"byte_end":3926,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3927,"byte_end":3980,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3981,"byte_end":3984,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":3985,"byte_end":4063,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4064,"byte_end":4120,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4121,"byte_end":4124,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4125,"byte_end":4198,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4199,"byte_end":4219,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4220,"byte_end":4295,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4296,"byte_end":4308,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4309,"byte_end":4389,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4390,"byte_end":4420,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4421,"byte_end":4424,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4425,"byte_end":4501,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4502,"byte_end":4514,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4515,"byte_end":4518,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4519,"byte_end":4551,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4552,"byte_end":4585,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4586,"byte_end":4623,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4624,"byte_end":4661,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4662,"byte_end":4693,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4694,"byte_end":4727,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4728,"byte_end":4731,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4732,"byte_end":4803,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4804,"byte_end":4884,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4885,"byte_end":4973,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4974,"byte_end":4998,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":4999,"byte_end":5002,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5003,"byte_end":5078,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5079,"byte_end":5082,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5083,"byte_end":5115,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5116,"byte_end":5149,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5150,"byte_end":5189,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5190,"byte_end":5227,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5228,"byte_end":5231,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5232,"byte_end":5310,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5311,"byte_end":5395,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5396,"byte_end":5480,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5481,"byte_end":5574,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5575,"byte_end":5666,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5667,"byte_end":5706,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5707,"byte_end":5710,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5711,"byte_end":5789,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5790,"byte_end":5863,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5864,"byte_end":5936,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":5937,"byte_end":6015,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6016,"byte_end":6086,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6087,"byte_end":6090,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6091,"byte_end":6117,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6118,"byte_end":6156,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6157,"byte_end":6197,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6198,"byte_end":6238,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#current-thread-scheduler","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6239,"byte_end":6292,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/ [rt-multi-thread]: runtime/index.html#multi-thread-scheduler","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6293,"byte_end":6357,"line_start":164,"line_end":164,"column_start":1,"column_end":65}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6358,"byte_end":6413,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6414,"byte_end":6417,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6418,"byte_end":6458,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6459,"byte_end":6462,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6463,"byte_end":6542,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6543,"byte_end":6620,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6621,"byte_end":6701,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6702,"byte_end":6776,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6777,"byte_end":6856,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6857,"byte_end":6934,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":6935,"byte_end":7008,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7009,"byte_end":7085,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7086,"byte_end":7167,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7168,"byte_end":7238,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7239,"byte_end":7313,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7314,"byte_end":7390,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7391,"byte_end":7468,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7469,"byte_end":7472,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7473,"byte_end":7550,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7551,"byte_end":7554,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7555,"byte_end":7595,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7596,"byte_end":7649,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7650,"byte_end":7721,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7722,"byte_end":7725,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7726,"byte_end":7733,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7734,"byte_end":7752,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7753,"byte_end":7774,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7775,"byte_end":7819,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7820,"byte_end":7823,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7824,"byte_end":7884,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7885,"byte_end":7937,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7938,"byte_end":7973,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7974,"byte_end":7985,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7986,"byte_end":7989,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":7990,"byte_end":8045,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8046,"byte_end":8121,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8122,"byte_end":8139,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8140,"byte_end":8177,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8178,"byte_end":8183,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8184,"byte_end":8191,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8192,"byte_end":8195,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8196,"byte_end":8274,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should use a separate thread pool dedicated to CPU bound tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8275,"byte_end":8357,"line_start":207,"line_end":207,"column_start":1,"column_end":83}},{"value":"/ For example, you could consider using the [rayon] library for CPU-bound","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8358,"byte_end":8433,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ tasks. It is also possible to create an extra Tokio runtime dedicated to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8434,"byte_end":8510,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ CPU-bound tasks, but if you do this, you should be careful that the extra","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8511,"byte_end":8588,"line_start":210,"line_end":210,"column_start":1,"column_end":78}},{"value":"/ runtime runs _only_ CPU-bound tasks, as IO-bound tasks on that runtime","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8589,"byte_end":8663,"line_start":211,"line_end":211,"column_start":1,"column_end":75}},{"value":"/ will behave poorly.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8664,"byte_end":8687,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8688,"byte_end":8691,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Hint: If using rayon, you can use a [`oneshot`] channel to send the result back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8692,"byte_end":8775,"line_start":214,"line_end":214,"column_start":1,"column_end":84}},{"value":"/ to Tokio when the rayon task finishes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8776,"byte_end":8818,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8819,"byte_end":8822,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8823,"byte_end":8857,"line_start":217,"line_end":217,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8858,"byte_end":8895,"line_start":218,"line_end":218,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8896,"byte_end":8899,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8900,"byte_end":8922,"line_start":220,"line_end":220,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8923,"byte_end":8926,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":8927,"byte_end":9006,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9007,"byte_end":9054,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9055,"byte_end":9058,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9059,"byte_end":9138,"line_start":225,"line_end":225,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9139,"byte_end":9219,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9220,"byte_end":9300,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9301,"byte_end":9372,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9373,"byte_end":9404,"line_start":229,"line_end":229,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9405,"byte_end":9408,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9409,"byte_end":9489,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9490,"byte_end":9550,"line_start":232,"line_end":232,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9551,"byte_end":9554,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9555,"byte_end":9634,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9635,"byte_end":9704,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9705,"byte_end":9782,"line_start":236,"line_end":236,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9783,"byte_end":9839,"line_start":237,"line_end":237,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9840,"byte_end":9920,"line_start":238,"line_end":238,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9921,"byte_end":9966,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":9967,"byte_end":10046,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10047,"byte_end":10081,"line_start":241,"line_end":241,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10082,"byte_end":10085,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10086,"byte_end":10114,"line_start":243,"line_end":243,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10115,"byte_end":10154,"line_start":244,"line_end":244,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10155,"byte_end":10196,"line_start":245,"line_end":245,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10197,"byte_end":10242,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10243,"byte_end":10267,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10268,"byte_end":10298,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10299,"byte_end":10325,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10326,"byte_end":10358,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10359,"byte_end":10386,"line_start":251,"line_end":251,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10387,"byte_end":10415,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10416,"byte_end":10440,"line_start":253,"line_end":253,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10441,"byte_end":10477,"line_start":254,"line_end":254,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10478,"byte_end":10516,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10517,"byte_end":10520,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10521,"byte_end":10535,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10536,"byte_end":10539,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10540,"byte_end":10569,"line_start":259,"line_end":259,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10570,"byte_end":10573,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10574,"byte_end":10587,"line_start":261,"line_end":261,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10588,"byte_end":10620,"line_start":262,"line_end":262,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10621,"byte_end":10670,"line_start":263,"line_end":263,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10671,"byte_end":10674,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10675,"byte_end":10693,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10694,"byte_end":10757,"line_start":266,"line_end":266,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10758,"byte_end":10824,"line_start":267,"line_end":267,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10825,"byte_end":10828,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10829,"byte_end":10843,"line_start":269,"line_end":269,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10844,"byte_end":10903,"line_start":270,"line_end":270,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10904,"byte_end":10907,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10908,"byte_end":10945,"line_start":272,"line_end":272,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10946,"byte_end":10986,"line_start":273,"line_end":273,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10987,"byte_end":10990,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":10991,"byte_end":11071,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11072,"byte_end":11094,"line_start":276,"line_end":276,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11095,"byte_end":11158,"line_start":277,"line_end":277,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11159,"byte_end":11199,"line_start":278,"line_end":278,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11200,"byte_end":11250,"line_start":279,"line_end":279,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11251,"byte_end":11286,"line_start":280,"line_end":280,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11287,"byte_end":11322,"line_start":281,"line_end":281,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11323,"byte_end":11406,"line_start":282,"line_end":282,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11407,"byte_end":11442,"line_start":283,"line_end":283,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11443,"byte_end":11468,"line_start":284,"line_end":284,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11469,"byte_end":11491,"line_start":285,"line_end":285,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11492,"byte_end":11495,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11496,"byte_end":11538,"line_start":287,"line_end":287,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11539,"byte_end":11611,"line_start":288,"line_end":288,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11612,"byte_end":11690,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11691,"byte_end":11722,"line_start":290,"line_end":290,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11723,"byte_end":11744,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11745,"byte_end":11762,"line_start":292,"line_end":292,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11763,"byte_end":11778,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11779,"byte_end":11788,"line_start":294,"line_end":294,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11789,"byte_end":11794,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11795,"byte_end":11802,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11803,"byte_end":11806,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11807,"byte_end":11827,"line_start":298,"line_end":298,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11828,"byte_end":11831,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11832,"byte_end":11913,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11914,"byte_end":11992,"line_start":301,"line_end":301,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":11993,"byte_end":12073,"line_start":302,"line_end":302,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12074,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12152,"byte_end":12235,"line_start":304,"line_end":304,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12236,"byte_end":12313,"line_start":305,"line_end":305,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12314,"byte_end":12401,"line_start":306,"line_end":306,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12402,"byte_end":12483,"line_start":307,"line_end":307,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12484,"byte_end":12493,"line_start":308,"line_end":308,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12494,"byte_end":12497,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all features listed below except `test-util` and `tracing`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12498,"byte_end":12579,"line_start":310,"line_end":310,"column_start":1,"column_end":82}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12580,"byte_end":12653,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12654,"byte_end":12694,"line_start":312,"line_end":312,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12695,"byte_end":12781,"line_start":313,"line_end":313,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12782,"byte_end":12833,"line_start":314,"line_end":314,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12834,"byte_end":12894,"line_start":315,"line_end":315,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12895,"byte_end":12972,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/          `UdpSocket`, as well as (on Unix-like systems) `AsyncFd` and (on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":12973,"byte_end":13050,"line_start":317,"line_end":317,"column_start":1,"column_end":78}},{"value":"/          FreeBSD) `PollAio`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13051,"byte_end":13083,"line_start":318,"line_end":318,"column_start":1,"column_end":33}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13084,"byte_end":13161,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13162,"byte_end":13195,"line_start":320,"line_end":320,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13196,"byte_end":13244,"line_start":321,"line_end":321,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13245,"byte_end":13314,"line_start":322,"line_end":322,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13315,"byte_end":13361,"line_start":323,"line_end":323,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13362,"byte_end":13412,"line_start":324,"line_end":324,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13413,"byte_end":13451,"line_start":325,"line_end":325,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13452,"byte_end":13530,"line_start":326,"line_end":326,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13531,"byte_end":13534,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13535,"byte_end":13617,"line_start":328,"line_end":328,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13618,"byte_end":13640,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13641,"byte_end":13644,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13645,"byte_end":13670,"line_start":331,"line_end":331,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13671,"byte_end":13674,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13675,"byte_end":13743,"line_start":333,"line_end":333,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13744,"byte_end":13807,"line_start":334,"line_end":334,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13808,"byte_end":13825,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13826,"byte_end":13829,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13830,"byte_end":13909,"line_start":337,"line_end":337,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13910,"byte_end":13987,"line_start":338,"line_end":338,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":13988,"byte_end":14021,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14022,"byte_end":14025,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14026,"byte_end":14051,"line_start":341,"line_end":341,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14052,"byte_end":14055,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14056,"byte_end":14141,"line_start":343,"line_end":343,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14142,"byte_end":14226,"line_start":344,"line_end":344,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14227,"byte_end":14311,"line_start":345,"line_end":345,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14312,"byte_end":14351,"line_start":346,"line_end":346,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14352,"byte_end":14355,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14356,"byte_end":14396,"line_start":348,"line_end":348,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14397,"byte_end":14400,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":14401,"byte_end":14498,"line_start":350,"line_end":350,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15131,"byte_end":15143,"line_start":369,"line_end":369,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\mod.rs","byte_start":19254,"byte_end":19274,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604617,"byte_end":12604622,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604388,"byte_end":12604429,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604430,"byte_end":12604433,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604434,"byte_end":12604511,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604580,"byte_end":12604605,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":34945,"byte_end":35022,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35023,"byte_end":35026,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35027,"byte_end":35098,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35099,"byte_end":35179,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35180,"byte_end":35254,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35255,"byte_end":35258,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35259,"byte_end":35289,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35290,"byte_end":35293,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35294,"byte_end":35374,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35375,"byte_end":35452,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35453,"byte_end":35530,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35531,"byte_end":35611,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35612,"byte_end":35690,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35691,"byte_end":35756,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35757,"byte_end":35760,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35761,"byte_end":35833,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35834,"byte_end":35901,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35902,"byte_end":35981,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":35982,"byte_end":36056,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36057,"byte_end":36131,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36132,"byte_end":36149,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36150,"byte_end":36153,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36154,"byte_end":36218,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36219,"byte_end":36294,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36295,"byte_end":36370,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36371,"byte_end":36448,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36449,"byte_end":36452,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36453,"byte_end":36529,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36530,"byte_end":36605,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36606,"byte_end":36686,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36687,"byte_end":36758,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36759,"byte_end":36828,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36829,"byte_end":36832,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36833,"byte_end":36905,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36906,"byte_end":36986,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":36987,"byte_end":37040,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37041,"byte_end":37044,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37045,"byte_end":37058,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37059,"byte_end":37099,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37100,"byte_end":37124,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37125,"byte_end":37128,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37129,"byte_end":37147,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37148,"byte_end":37187,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37188,"byte_end":37237,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37238,"byte_end":37271,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37272,"byte_end":37275,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37276,"byte_end":37306,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37307,"byte_end":37350,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37351,"byte_end":37354,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37355,"byte_end":37405,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37406,"byte_end":37420,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37421,"byte_end":37426,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37427,"byte_end":37434,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37435,"byte_end":37438,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37439,"byte_end":37468,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37469,"byte_end":37509,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37510,"byte_end":37546,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37547,"byte_end":37588,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37589,"byte_end":37592,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37593,"byte_end":37628,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37629,"byte_end":37632,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37633,"byte_end":37714,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37715,"byte_end":37789,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37790,"byte_end":37868,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37869,"byte_end":37913,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37914,"byte_end":37917,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37918,"byte_end":37988,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":37989,"byte_end":38067,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38068,"byte_end":38146,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38147,"byte_end":38224,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38225,"byte_end":38228,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38229,"byte_end":38304,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38305,"byte_end":38343,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38344,"byte_end":38347,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38348,"byte_end":38361,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38362,"byte_end":38416,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38417,"byte_end":38441,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38442,"byte_end":38445,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38446,"byte_end":38464,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38465,"byte_end":38504,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38505,"byte_end":38550,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38551,"byte_end":38594,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38595,"byte_end":38634,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38635,"byte_end":38638,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38639,"byte_end":38673,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38674,"byte_end":38719,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38720,"byte_end":38723,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38724,"byte_end":38755,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38756,"byte_end":38770,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38771,"byte_end":38776,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38777,"byte_end":38784,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38785,"byte_end":38788,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38789,"byte_end":38870,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38871,"byte_end":38949,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":38950,"byte_end":39012,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39013,"byte_end":39016,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39017,"byte_end":39030,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39031,"byte_end":39083,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39084,"byte_end":39108,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39109,"byte_end":39112,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39113,"byte_end":39131,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39132,"byte_end":39171,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39172,"byte_end":39219,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39220,"byte_end":39229,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39230,"byte_end":39277,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39278,"byte_end":39281,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39282,"byte_end":39324,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39325,"byte_end":39366,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39367,"byte_end":39370,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39371,"byte_end":39431,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39432,"byte_end":39466,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39467,"byte_end":39470,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39471,"byte_end":39561,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39562,"byte_end":39565,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39566,"byte_end":39580,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39581,"byte_end":39586,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39587,"byte_end":39594,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39595,"byte_end":39598,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39599,"byte_end":39644,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39645,"byte_end":39687,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39688,"byte_end":39733,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39734,"byte_end":39773,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39774,"byte_end":39813,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39814,"byte_end":39817,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39818,"byte_end":39862,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39863,"byte_end":39866,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39867,"byte_end":39949,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":39950,"byte_end":40029,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40030,"byte_end":40104,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40105,"byte_end":40178,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40179,"byte_end":40239,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40240,"byte_end":40243,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40244,"byte_end":40285,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40286,"byte_end":40289,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40290,"byte_end":40358,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40359,"byte_end":40428,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40429,"byte_end":40495,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40496,"byte_end":40559,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40560,"byte_end":40627,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40628,"byte_end":40697,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40698,"byte_end":40768,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40769,"byte_end":40847,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40848,"byte_end":40873,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40874,"byte_end":40877,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40878,"byte_end":40954,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40955,"byte_end":40958,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40959,"byte_end":40990,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40991,"byte_end":40994,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":40995,"byte_end":41075,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41076,"byte_end":41152,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41153,"byte_end":41200,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41201,"byte_end":41204,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41205,"byte_end":41278,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41279,"byte_end":41355,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41356,"byte_end":41432,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41433,"byte_end":41436,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41437,"byte_end":41458,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41459,"byte_end":41482,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41483,"byte_end":41505,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41506,"byte_end":41509,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41510,"byte_end":41532,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41533,"byte_end":41536,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41537,"byte_end":41613,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41614,"byte_end":41661,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41662,"byte_end":41665,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41666,"byte_end":41700,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41701,"byte_end":41737,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41738,"byte_end":41778,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41779,"byte_end":41821,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41822,"byte_end":41895,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41896,"byte_end":41979,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":41980,"byte_end":42063,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42064,"byte_end":42091,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42092,"byte_end":42125,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42126,"byte_end":42153,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42154,"byte_end":42181,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42182,"byte_end":42213,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42214,"byte_end":42284,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42285,"byte_end":42361,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\mod.rs","byte_start":42362,"byte_end":42391,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45236,"byte_end":45248,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44559,"byte_end":44590,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44591,"byte_end":44594,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44595,"byte_end":44667,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44668,"byte_end":44746,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44747,"byte_end":44833,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44834,"byte_end":44911,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44912,"byte_end":44923,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44924,"byte_end":44927,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44928,"byte_end":44996,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":44997,"byte_end":45021,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45022,"byte_end":45025,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45026,"byte_end":45068,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45069,"byte_end":45119,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45120,"byte_end":45173,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45174,"byte_end":45225,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46346,"byte_end":46359,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45266,"byte_end":45351,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45356,"byte_end":45397,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45402,"byte_end":45405,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45410,"byte_end":45457,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45462,"byte_end":45465,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45470,"byte_end":45529,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45534,"byte_end":45592,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45597,"byte_end":45678,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45683,"byte_end":45709,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45714,"byte_end":45717,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45722,"byte_end":45793,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45798,"byte_end":45860,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45865,"byte_end":45936,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45941,"byte_end":46022,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46027,"byte_end":46103,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46108,"byte_end":46159,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46164,"byte_end":46167,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46172,"byte_end":46243,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46248,"byte_end":46251,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46256,"byte_end":46295,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46300,"byte_end":46338,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47262,"byte_end":47269,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46437,"byte_end":46511,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46516,"byte_end":46583,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46588,"byte_end":46591,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46596,"byte_end":46667,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46672,"byte_end":46741,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46746,"byte_end":46820,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46825,"byte_end":46902,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46907,"byte_end":46977,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":46982,"byte_end":47035,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47040,"byte_end":47043,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47048,"byte_end":47120,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47125,"byte_end":47147,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47152,"byte_end":47155,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47160,"byte_end":47199,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47204,"byte_end":47254,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50583,"byte_end":50592,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":48896,"byte_end":48926,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":48927,"byte_end":48930,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":48931,"byte_end":49010,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49011,"byte_end":49085,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49086,"byte_end":49165,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49166,"byte_end":49243,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49244,"byte_end":49255,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49256,"byte_end":49259,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49260,"byte_end":49337,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49338,"byte_end":49356,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49357,"byte_end":49360,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49361,"byte_end":49441,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49442,"byte_end":49515,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49516,"byte_end":49595,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49596,"byte_end":49640,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49641,"byte_end":49644,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49645,"byte_end":49710,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49711,"byte_end":49791,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49792,"byte_end":49871,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49872,"byte_end":49945,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":49946,"byte_end":50019,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50020,"byte_end":50041,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50042,"byte_end":50045,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50046,"byte_end":50130,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50131,"byte_end":50155,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50156,"byte_end":50159,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50160,"byte_end":50233,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50234,"byte_end":50313,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50314,"byte_end":50317,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50318,"byte_end":50383,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50384,"byte_end":50405,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50406,"byte_end":50409,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50410,"byte_end":50449,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50450,"byte_end":50486,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50487,"byte_end":50526,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50527,"byte_end":50572,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51109,"byte_end":51118,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50599,"byte_end":50652,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50657,"byte_end":50660,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50665,"byte_end":50733,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50738,"byte_end":50813,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50818,"byte_end":50871,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50876,"byte_end":50879,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50884,"byte_end":50959,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":50964,"byte_end":51033,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51038,"byte_end":51101,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53714,"byte_end":53723,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53232,"byte_end":53262,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53263,"byte_end":53266,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53267,"byte_end":53341,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53342,"byte_end":53412,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53413,"byte_end":53482,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53483,"byte_end":53486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53487,"byte_end":53552,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53553,"byte_end":53574,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53575,"byte_end":53578,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53579,"byte_end":53615,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53616,"byte_end":53657,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53658,"byte_end":53703,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54365,"byte_end":54375,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53730,"byte_end":53787,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53792,"byte_end":53795,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53800,"byte_end":53873,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53878,"byte_end":53904,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53909,"byte_end":53912,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53917,"byte_end":53992,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":53997,"byte_end":54053,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54058,"byte_end":54061,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54066,"byte_end":54078,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54083,"byte_end":54086,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54091,"byte_end":54161,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54166,"byte_end":54240,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54245,"byte_end":54319,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54324,"byte_end":54357,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54898,"byte_end":54911,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54442,"byte_end":54485,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54490,"byte_end":54493,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54498,"byte_end":54547,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54552,"byte_end":54622,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54627,"byte_end":54699,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54704,"byte_end":54775,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54780,"byte_end":54796,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54801,"byte_end":54804,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54809,"byte_end":54821,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54826,"byte_end":54829,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":54834,"byte_end":54890,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58202,"byte_end":58212,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56339,"byte_end":56371,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56372,"byte_end":56375,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56376,"byte_end":56458,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56459,"byte_end":56534,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56535,"byte_end":56602,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56603,"byte_end":56606,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56607,"byte_end":56687,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56688,"byte_end":56706,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56707,"byte_end":56710,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56711,"byte_end":56782,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56783,"byte_end":56797,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56798,"byte_end":56801,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56802,"byte_end":56870,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56871,"byte_end":56951,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":56952,"byte_end":57031,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57032,"byte_end":57105,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57106,"byte_end":57179,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57180,"byte_end":57201,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57202,"byte_end":57205,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57206,"byte_end":57290,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57291,"byte_end":57315,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57316,"byte_end":57319,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57320,"byte_end":57402,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57403,"byte_end":57486,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57487,"byte_end":57490,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57491,"byte_end":57575,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57576,"byte_end":57660,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57661,"byte_end":57739,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57740,"byte_end":57819,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57820,"byte_end":57881,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57882,"byte_end":57885,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57886,"byte_end":57952,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57953,"byte_end":57975,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57976,"byte_end":57979,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":57980,"byte_end":58018,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58019,"byte_end":58063,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58064,"byte_end":58103,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58104,"byte_end":58143,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58144,"byte_end":58191,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58884,"byte_end":58894,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58219,"byte_end":58273,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58278,"byte_end":58281,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58286,"byte_end":58362,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58367,"byte_end":58442,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58447,"byte_end":58521,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58526,"byte_end":58601,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58606,"byte_end":58635,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58640,"byte_end":58643,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58648,"byte_end":58710,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58715,"byte_end":58773,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58778,"byte_end":58845,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":58850,"byte_end":58876,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59435,"byte_end":59445,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59022,"byte_end":59093,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59098,"byte_end":59120,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59125,"byte_end":59128,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59133,"byte_end":59179,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59184,"byte_end":59187,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59192,"byte_end":59256,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59261,"byte_end":59319,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59324,"byte_end":59392,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59397,"byte_end":59427,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62731,"byte_end":62744,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59527,"byte_end":59601,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59606,"byte_end":59654,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59659,"byte_end":59662,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59667,"byte_end":59738,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59743,"byte_end":59819,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59824,"byte_end":59900,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59905,"byte_end":59980,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":59985,"byte_end":60056,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60061,"byte_end":60137,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60142,"byte_end":60170,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60175,"byte_end":60178,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60183,"byte_end":60244,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60249,"byte_end":60320,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60325,"byte_end":60397,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60402,"byte_end":60477,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60482,"byte_end":60555,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60560,"byte_end":60635,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60640,"byte_end":60712,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60717,"byte_end":60728,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60733,"byte_end":60736,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60741,"byte_end":60815,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60820,"byte_end":60892,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60897,"byte_end":60966,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":60971,"byte_end":61039,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61044,"byte_end":61105,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61110,"byte_end":61113,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61118,"byte_end":61136,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61141,"byte_end":61144,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61149,"byte_end":61219,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61224,"byte_end":61227,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61232,"byte_end":61295,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61300,"byte_end":61369,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61374,"byte_end":61449,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61454,"byte_end":61527,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61532,"byte_end":61583,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61588,"byte_end":61591,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61596,"byte_end":61666,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61671,"byte_end":61746,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61751,"byte_end":61823,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61828,"byte_end":61898,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61903,"byte_end":61978,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61983,"byte_end":61986,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":61991,"byte_end":62072,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62077,"byte_end":62152,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62157,"byte_end":62224,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62229,"byte_end":62232,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62237,"byte_end":62249,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62254,"byte_end":62257,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62262,"byte_end":62333,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62338,"byte_end":62404,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62409,"byte_end":62483,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62488,"byte_end":62552,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62557,"byte_end":62596,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62601,"byte_end":62604,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62609,"byte_end":62621,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62626,"byte_end":62629,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62634,"byte_end":62709,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62714,"byte_end":62723,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63857,"byte_end":63876,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62826,"byte_end":62897,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62902,"byte_end":62905,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62910,"byte_end":62977,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":62982,"byte_end":63052,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63057,"byte_end":63127,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63132,"byte_end":63135,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63140,"byte_end":63222,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63227,"byte_end":63279,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63284,"byte_end":63287,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63292,"byte_end":63353,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63358,"byte_end":63361,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63366,"byte_end":63428,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63433,"byte_end":63491,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63496,"byte_end":63563,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63568,"byte_end":63594,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63599,"byte_end":63602,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63607,"byte_end":63617,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63622,"byte_end":63625,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63630,"byte_end":63702,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63707,"byte_end":63777,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63782,"byte_end":63794,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63799,"byte_end":63802,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":63807,"byte_end":63849,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64644,"byte_end":64661,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64174,"byte_end":64244,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64249,"byte_end":64268,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64273,"byte_end":64276,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64281,"byte_end":64350,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64355,"byte_end":64430,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64435,"byte_end":64503,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64508,"byte_end":64511,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64516,"byte_end":64563,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64568,"byte_end":64571,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":64576,"byte_end":64636,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71734,"byte_end":71741,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":70786,"byte_end":70866,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":70867,"byte_end":70870,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":70871,"byte_end":70945,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":70946,"byte_end":71021,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71022,"byte_end":71100,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71101,"byte_end":71177,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71178,"byte_end":71255,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71256,"byte_end":71259,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71260,"byte_end":71324,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71325,"byte_end":71328,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71329,"byte_end":71344,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71345,"byte_end":71386,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71387,"byte_end":71428,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71429,"byte_end":71470,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71471,"byte_end":71478,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71479,"byte_end":71482,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71483,"byte_end":71561,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71562,"byte_end":71640,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71641,"byte_end":71722,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71943,"byte_end":71946,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71857,"byte_end":71917,"line_start":30,"line_end":30,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71922,"byte_end":71931,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72359,"byte_end":72365,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72179,"byte_end":72241,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72246,"byte_end":72249,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72254,"byte_end":72333,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72338,"byte_end":72347,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72593,"byte_end":72601,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72522,"byte_end":72567,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72572,"byte_end":72581,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72747,"byte_end":72753,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72654,"byte_end":72721,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":72726,"byte_end":72735,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73101,"byte_end":73111,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73007,"byte_end":73075,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73080,"byte_end":73089,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73479,"byte_end":73483,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73381,"byte_end":73453,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73458,"byte_end":73467,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73889,"byte_end":73900,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73741,"byte_end":73813,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73818,"byte_end":73821,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73826,"byte_end":73863,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":73868,"byte_end":73877,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74306,"byte_end":74321,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74157,"byte_end":74230,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74235,"byte_end":74238,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74243,"byte_end":74280,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74285,"byte_end":74294,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75433,"byte_end":75442,"line_start":123,"line_end":123,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74594,"byte_end":74687,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74692,"byte_end":74708,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74713,"byte_end":74716,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74721,"byte_end":74809,"line_start":111,"line_end":111,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be converted to a `&mut [u8]`).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74814,"byte_end":74904,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74909,"byte_end":74912,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":74917,"byte_end":75012,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75017,"byte_end":75101,"line_start":115,"line_end":115,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75106,"byte_end":75182,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75187,"byte_end":75190,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75195,"byte_end":75207,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75212,"byte_end":75215,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75220,"byte_end":75316,"line_start":120,"line_end":120,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75321,"byte_end":75400,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75405,"byte_end":75414,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75888,"byte_end":75900,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75510,"byte_end":75616,"line_start":127,"line_end":127,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75621,"byte_end":75637,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75642,"byte_end":75645,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75650,"byte_end":75662,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75667,"byte_end":75670,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75675,"byte_end":75771,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75776,"byte_end":75855,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75860,"byte_end":75869,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76262,"byte_end":76281,"line_start":144,"line_end":144,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":75988,"byte_end":76089,"line_start":139,"line_end":139,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76094,"byte_end":76097,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76102,"byte_end":76213,"line_start":141,"line_end":141,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76218,"byte_end":76236,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76241,"byte_end":76250,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76619,"byte_end":76641,"line_start":155,"line_end":155,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76373,"byte_end":76478,"line_start":148,"line_end":148,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76483,"byte_end":76505,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76510,"byte_end":76513,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76518,"byte_end":76530,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76535,"byte_end":76538,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76543,"byte_end":76593,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":76598,"byte_end":76607,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77456,"byte_end":77465,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77344,"byte_end":77430,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77435,"byte_end":77444,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77732,"byte_end":77737,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77533,"byte_end":77593,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77598,"byte_end":77601,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77606,"byte_end":77706,"line_start":184,"line_end":184,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77711,"byte_end":77720,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78066,"byte_end":78073,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77787,"byte_end":77844,"line_start":190,"line_end":190,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77849,"byte_end":77852,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77857,"byte_end":77908,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77913,"byte_end":77916,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77921,"byte_end":77933,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77938,"byte_end":77941,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":77946,"byte_end":78040,"line_start":196,"line_end":196,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78045,"byte_end":78054,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78684,"byte_end":78694,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78210,"byte_end":78263,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78268,"byte_end":78271,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78276,"byte_end":78327,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78332,"byte_end":78335,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78340,"byte_end":78445,"line_start":207,"line_end":207,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78450,"byte_end":78526,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78531,"byte_end":78534,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78539,"byte_end":78551,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78556,"byte_end":78559,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78564,"byte_end":78658,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78663,"byte_end":78672,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79298,"byte_end":79309,"line_start":231,"line_end":231,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78878,"byte_end":78954,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78959,"byte_end":78962,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":78967,"byte_end":79076,"line_start":224,"line_end":224,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79081,"byte_end":79132,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79137,"byte_end":79140,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79145,"byte_end":79157,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79162,"byte_end":79165,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79170,"byte_end":79265,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79270,"byte_end":79279,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79689,"byte_end":79698,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79461,"byte_end":79567,"line_start":238,"line_end":238,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79572,"byte_end":79575,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79580,"byte_end":79592,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79597,"byte_end":79600,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79605,"byte_end":79663,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":79668,"byte_end":79677,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":438}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81172,"byte_end":81190,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81192,"byte_end":81230,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81231,"byte_end":81234,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81235,"byte_end":81318,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81319,"byte_end":81384,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81385,"byte_end":81388,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81389,"byte_end":81407,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81408,"byte_end":81411,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81412,"byte_end":81500,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81501,"byte_end":81570,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81571,"byte_end":81659,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81660,"byte_end":81718,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81719,"byte_end":81782,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81783,"byte_end":81848,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81850,"byte_end":81853,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81854,"byte_end":81886,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81887,"byte_end":81915,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81916,"byte_end":81944,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81945,"byte_end":81979,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":81980,"byte_end":82010,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\mod.rs","byte_start":82011,"byte_end":82045,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83310,"byte_end":83323,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82722,"byte_end":82799,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82800,"byte_end":82803,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82804,"byte_end":82813,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82814,"byte_end":82817,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82818,"byte_end":82895,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82896,"byte_end":82899,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82900,"byte_end":82913,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82914,"byte_end":82917,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82918,"byte_end":82995,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":82996,"byte_end":83068,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83069,"byte_end":83138,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83139,"byte_end":83142,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83143,"byte_end":83222,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83223,"byte_end":83299,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":89763,"byte_end":89780,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":89796,"byte_end":89800,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":89861,"byte_end":89867,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":89939,"byte_end":89954,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":90065,"byte_end":90073,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":90010,"byte_end":90049,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":105713,"byte_end":105719,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":105650,"byte_end":105703,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":105773,"byte_end":105778,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Error returned by `park`.\n","sig":null,"attributes":[{"value":"/ Error returned by `park`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":105734,"byte_end":105763,"line_start":53,"line_end":53,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1136},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1361},{"krate":0,"index":1981},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2404},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3259}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605460,"byte_end":12605524,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605525,"byte_end":12605528,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605529,"byte_end":12605604,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605605,"byte_end":12605685,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605686,"byte_end":12605765,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605766,"byte_end":12605800,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605801,"byte_end":12605804,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605805,"byte_end":12605829,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605830,"byte_end":12605833,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605834,"byte_end":12605855,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605856,"byte_end":12605859,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605860,"byte_end":12605933,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12605934,"byte_end":12606013,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606014,"byte_end":12606083,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606084,"byte_end":12606087,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606088,"byte_end":12606167,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606168,"byte_end":12606245,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606246,"byte_end":12606321,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606322,"byte_end":12606394,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606395,"byte_end":12606467,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606468,"byte_end":12606546,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606547,"byte_end":12606560,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606561,"byte_end":12606564,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606565,"byte_end":12606643,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606644,"byte_end":12606705,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606706,"byte_end":12606709,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606710,"byte_end":12606734,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606735,"byte_end":12606738,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606739,"byte_end":12606818,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606819,"byte_end":12606897,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606898,"byte_end":12606942,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606943,"byte_end":12606946,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12606947,"byte_end":12607027,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607028,"byte_end":12607044,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607045,"byte_end":12607048,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607049,"byte_end":12607056,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607057,"byte_end":12607086,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607087,"byte_end":12607090,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607091,"byte_end":12607134,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607135,"byte_end":12607197,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607198,"byte_end":12607203,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607204,"byte_end":12607207,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607208,"byte_end":12607226,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607227,"byte_end":12607248,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607249,"byte_end":12607291,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607292,"byte_end":12607295,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607296,"byte_end":12607329,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607330,"byte_end":12607377,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607378,"byte_end":12607412,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607413,"byte_end":12607424,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607425,"byte_end":12607428,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607429,"byte_end":12607506,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607507,"byte_end":12607510,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607511,"byte_end":12607553,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607554,"byte_end":12607590,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607591,"byte_end":12607596,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607597,"byte_end":12607604,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607605,"byte_end":12607608,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607609,"byte_end":12607673,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607674,"byte_end":12607738,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607739,"byte_end":12607801,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607802,"byte_end":12607872,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607873,"byte_end":12607938,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607939,"byte_end":12607949,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607950,"byte_end":12607953,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607954,"byte_end":12607970,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607971,"byte_end":12607974,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607975,"byte_end":12607982,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12607983,"byte_end":12608026,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608027,"byte_end":12608078,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608079,"byte_end":12608084,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608085,"byte_end":12608088,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608089,"byte_end":12608107,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608108,"byte_end":12608129,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608130,"byte_end":12608181,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608182,"byte_end":12608218,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608219,"byte_end":12608230,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608231,"byte_end":12608234,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608235,"byte_end":12608312,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608313,"byte_end":12608316,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608317,"byte_end":12608359,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608360,"byte_end":12608405,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608406,"byte_end":12608411,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608412,"byte_end":12608419,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608420,"byte_end":12608423,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608424,"byte_end":12608446,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608447,"byte_end":12608490,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608491,"byte_end":12608494,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608495,"byte_end":12608516,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608517,"byte_end":12608520,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608521,"byte_end":12608598,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608599,"byte_end":12608679,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608680,"byte_end":12608735,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608736,"byte_end":12608739,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608740,"byte_end":12608818,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608819,"byte_end":12608839,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608840,"byte_end":12608843,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608844,"byte_end":12608851,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608852,"byte_end":12608878,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608879,"byte_end":12608882,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608883,"byte_end":12608936,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608937,"byte_end":12608991,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608992,"byte_end":12608997,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12608998,"byte_end":12609001,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609002,"byte_end":12609020,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609021,"byte_end":12609042,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609043,"byte_end":12609089,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609090,"byte_end":12609093,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609094,"byte_end":12609127,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609128,"byte_end":12609156,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609157,"byte_end":12609209,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609210,"byte_end":12609254,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609255,"byte_end":12609268,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609269,"byte_end":12609280,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609281,"byte_end":12609284,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609285,"byte_end":12609332,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609333,"byte_end":12609371,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609372,"byte_end":12609381,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609382,"byte_end":12609387,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609388,"byte_end":12609395,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609396,"byte_end":12609399,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609400,"byte_end":12609480,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609481,"byte_end":12609558,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609559,"byte_end":12609632,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609633,"byte_end":12609708,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609709,"byte_end":12609722,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609723,"byte_end":12609726,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609727,"byte_end":12609802,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609803,"byte_end":12609882,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609883,"byte_end":12609961,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12609962,"byte_end":12610041,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610042,"byte_end":12610122,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610123,"byte_end":12610188,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610189,"byte_end":12610192,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610193,"byte_end":12610273,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610274,"byte_end":12610286,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610287,"byte_end":12610290,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610291,"byte_end":12610304,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610305,"byte_end":12610346,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610347,"byte_end":12610377,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610378,"byte_end":12610404,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610405,"byte_end":12610408,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610409,"byte_end":12610427,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610428,"byte_end":12610467,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610468,"byte_end":12610543,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610544,"byte_end":12610590,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610591,"byte_end":12610594,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610595,"byte_end":12610619,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610620,"byte_end":12610699,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610700,"byte_end":12610731,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610732,"byte_end":12610764,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610765,"byte_end":12610768,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610769,"byte_end":12610806,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610807,"byte_end":12610869,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610870,"byte_end":12610885,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610886,"byte_end":12610895,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610896,"byte_end":12610899,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610900,"byte_end":12610979,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12610980,"byte_end":12611055,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611056,"byte_end":12611134,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611135,"byte_end":12611182,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611183,"byte_end":12611200,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611201,"byte_end":12611204,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611205,"byte_end":12611252,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611253,"byte_end":12611294,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611295,"byte_end":12611304,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611305,"byte_end":12611308,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611309,"byte_end":12611323,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611324,"byte_end":12611329,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611330,"byte_end":12611337,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611338,"byte_end":12611341,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611342,"byte_end":12611417,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611418,"byte_end":12611493,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611494,"byte_end":12611573,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611574,"byte_end":12611639,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611640,"byte_end":12611717,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611718,"byte_end":12611721,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611722,"byte_end":12611800,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611801,"byte_end":12611881,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611882,"byte_end":12611927,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611928,"byte_end":12611931,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611932,"byte_end":12611939,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611940,"byte_end":12611977,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12611978,"byte_end":12612005,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612006,"byte_end":12612009,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612010,"byte_end":12612028,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612029,"byte_end":12612047,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612048,"byte_end":12612091,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612092,"byte_end":12612097,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612098,"byte_end":12612101,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612102,"byte_end":12612120,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612121,"byte_end":12612142,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612143,"byte_end":12612232,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612233,"byte_end":12612236,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612237,"byte_end":12612282,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612283,"byte_end":12612316,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612317,"byte_end":12612354,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612355,"byte_end":12612358,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612359,"byte_end":12612426,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612427,"byte_end":12612454,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612455,"byte_end":12612489,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612490,"byte_end":12612533,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612534,"byte_end":12612571,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612572,"byte_end":12612625,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612626,"byte_end":12612647,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612648,"byte_end":12612665,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612666,"byte_end":12612679,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612680,"byte_end":12612691,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612692,"byte_end":12612695,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612696,"byte_end":12612734,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612735,"byte_end":12612738,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612739,"byte_end":12612799,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612800,"byte_end":12612824,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612825,"byte_end":12612865,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612866,"byte_end":12612869,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612870,"byte_end":12612925,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612926,"byte_end":12612986,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612987,"byte_end":12612990,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12612991,"byte_end":12613061,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613062,"byte_end":12613111,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613112,"byte_end":12613115,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613116,"byte_end":12613169,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613170,"byte_end":12613186,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613187,"byte_end":12613196,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613197,"byte_end":12613200,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613201,"byte_end":12613242,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613243,"byte_end":12613294,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613295,"byte_end":12613334,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613335,"byte_end":12613344,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613345,"byte_end":12613350,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613351,"byte_end":12613358,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613359,"byte_end":12613362,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613363,"byte_end":12613379,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613380,"byte_end":12613383,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613384,"byte_end":12613410,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613411,"byte_end":12613414,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613415,"byte_end":12613482,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613483,"byte_end":12613555,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613556,"byte_end":12613629,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613630,"byte_end":12613683,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613684,"byte_end":12613687,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613688,"byte_end":12613768,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613769,"byte_end":12613791,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613792,"byte_end":12613795,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613796,"byte_end":12613811,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613812,"byte_end":12613815,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613816,"byte_end":12613823,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613824,"byte_end":12613855,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613856,"byte_end":12613859,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613860,"byte_end":12613878,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613879,"byte_end":12613900,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613901,"byte_end":12613952,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613953,"byte_end":12613990,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613991,"byte_end":12613994,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12613995,"byte_end":12614028,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614029,"byte_end":12614083,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614084,"byte_end":12614138,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614139,"byte_end":12614150,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614151,"byte_end":12614154,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614155,"byte_end":12614188,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614189,"byte_end":12614243,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614244,"byte_end":12614298,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614299,"byte_end":12614310,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614311,"byte_end":12614314,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614315,"byte_end":12614344,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614345,"byte_end":12614374,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614375,"byte_end":12614380,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614381,"byte_end":12614388,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614389,"byte_end":12614392,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614393,"byte_end":12614442,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614443,"byte_end":12614446,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614447,"byte_end":12614469,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614470,"byte_end":12614473,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614474,"byte_end":12614550,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614551,"byte_end":12614629,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614630,"byte_end":12614709,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614710,"byte_end":12614775,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614776,"byte_end":12614779,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614780,"byte_end":12614860,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614861,"byte_end":12614864,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614865,"byte_end":12614939,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12614940,"byte_end":12615013,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615014,"byte_end":12615027,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615028,"byte_end":12615031,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615032,"byte_end":12615105,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615106,"byte_end":12615186,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615187,"byte_end":12615262,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615263,"byte_end":12615266,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615267,"byte_end":12615274,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615275,"byte_end":12615302,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615303,"byte_end":12615350,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615351,"byte_end":12615354,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615355,"byte_end":12615371,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615372,"byte_end":12615375,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615376,"byte_end":12615418,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615419,"byte_end":12615438,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615439,"byte_end":12615465,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615466,"byte_end":12615471,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615472,"byte_end":12615475,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615476,"byte_end":12615493,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615494,"byte_end":12615551,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615552,"byte_end":12615610,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615611,"byte_end":12615663,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615664,"byte_end":12615673,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615674,"byte_end":12615679,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615680,"byte_end":12615683,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615684,"byte_end":12615719,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615720,"byte_end":12615748,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615749,"byte_end":12615754,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615755,"byte_end":12615758,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615759,"byte_end":12615777,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615778,"byte_end":12615799,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615800,"byte_end":12615843,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615844,"byte_end":12615909,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615910,"byte_end":12615913,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615914,"byte_end":12615992,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12615993,"byte_end":12616047,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616048,"byte_end":12616051,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616052,"byte_end":12616096,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616097,"byte_end":12616130,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616131,"byte_end":12616149,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616150,"byte_end":12616199,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616200,"byte_end":12616259,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616260,"byte_end":12616263,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616264,"byte_end":12616310,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616311,"byte_end":12616384,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616385,"byte_end":12616388,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616389,"byte_end":12616463,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616464,"byte_end":12616504,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616505,"byte_end":12616546,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616547,"byte_end":12616604,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616605,"byte_end":12616645,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616646,"byte_end":12616663,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616664,"byte_end":12616677,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616678,"byte_end":12616689,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616690,"byte_end":12616693,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616694,"byte_end":12616727,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616728,"byte_end":12616731,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616732,"byte_end":12616810,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616811,"byte_end":12616865,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616866,"byte_end":12616876,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616877,"byte_end":12616954,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12616955,"byte_end":12617033,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617034,"byte_end":12617069,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617070,"byte_end":12617093,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617094,"byte_end":12617157,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617158,"byte_end":12617194,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617195,"byte_end":12617198,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617199,"byte_end":12617249,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617250,"byte_end":12617329,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617330,"byte_end":12617405,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617406,"byte_end":12617459,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617460,"byte_end":12617506,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617507,"byte_end":12617539,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617540,"byte_end":12617543,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617544,"byte_end":12617591,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617592,"byte_end":12617643,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617644,"byte_end":12617647,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617648,"byte_end":12617698,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617699,"byte_end":12617770,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617771,"byte_end":12617806,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617807,"byte_end":12617810,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617811,"byte_end":12617833,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617834,"byte_end":12617870,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617871,"byte_end":12617914,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617915,"byte_end":12617979,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12617980,"byte_end":12618037,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618038,"byte_end":12618041,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618042,"byte_end":12618097,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618098,"byte_end":12618152,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618153,"byte_end":12618156,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618157,"byte_end":12618207,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618208,"byte_end":12618290,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618291,"byte_end":12618316,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618317,"byte_end":12618362,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618363,"byte_end":12618418,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618419,"byte_end":12618422,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618423,"byte_end":12618500,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618501,"byte_end":12618570,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618571,"byte_end":12618645,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618646,"byte_end":12618671,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618672,"byte_end":12618712,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618713,"byte_end":12618768,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618769,"byte_end":12618803,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618804,"byte_end":12618829,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618830,"byte_end":12618851,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618852,"byte_end":12618869,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618870,"byte_end":12618885,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618886,"byte_end":12618889,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618890,"byte_end":12618923,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618924,"byte_end":12618933,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618934,"byte_end":12618937,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618938,"byte_end":12618979,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12618980,"byte_end":12619014,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619015,"byte_end":12619024,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619025,"byte_end":12619030,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619031,"byte_end":12619038,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619039,"byte_end":12619042,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619043,"byte_end":12619088,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619089,"byte_end":12619142,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619143,"byte_end":12619146,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619147,"byte_end":12619174,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619175,"byte_end":12619178,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619179,"byte_end":12619253,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619254,"byte_end":12619328,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619329,"byte_end":12619399,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619400,"byte_end":12619450,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619451,"byte_end":12619454,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619455,"byte_end":12619532,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619533,"byte_end":12619610,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619611,"byte_end":12619614,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619615,"byte_end":12619692,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619693,"byte_end":12619748,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619749,"byte_end":12619752,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619753,"byte_end":12619832,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619833,"byte_end":12619911,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619912,"byte_end":12619937,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619938,"byte_end":12619941,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12619942,"byte_end":12620017,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620018,"byte_end":12620094,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620095,"byte_end":12620162,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620163,"byte_end":12620166,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620167,"byte_end":12620243,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620244,"byte_end":12620320,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620321,"byte_end":12620395,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620396,"byte_end":12620423,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620477,"byte_end":12620484,"line_start":432,"line_end":432,"column_start":13,"column_end":20},"name":"futures","qualname":"::sync::futures","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":1133}],"decl_id":null,"docs":" Named future types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623339,"byte_end":12623346,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622278,"byte_end":12622364,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622365,"byte_end":12622368,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622369,"byte_end":12622376,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622377,"byte_end":12622397,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622398,"byte_end":12622421,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622422,"byte_end":12622451,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622452,"byte_end":12622475,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622476,"byte_end":12622479,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622480,"byte_end":12622525,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622526,"byte_end":12622571,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622572,"byte_end":12622592,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622593,"byte_end":12622625,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622626,"byte_end":12622680,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622681,"byte_end":12622726,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622727,"byte_end":12622773,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622774,"byte_end":12622810,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622811,"byte_end":12622856,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622857,"byte_end":12622892,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622893,"byte_end":12622916,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622917,"byte_end":12622929,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622930,"byte_end":12622935,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622936,"byte_end":12622939,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12622940,"byte_end":12623013,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623014,"byte_end":12623042,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623043,"byte_end":12623070,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623071,"byte_end":12623119,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623120,"byte_end":12623156,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623157,"byte_end":12623186,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623187,"byte_end":12623196,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623197,"byte_end":12623202,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623203,"byte_end":12623206,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623207,"byte_end":12623262,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623263,"byte_end":12623294,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623295,"byte_end":12623302,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623303,"byte_end":12623310,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623908,"byte_end":12623911,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623656,"byte_end":12623721,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623726,"byte_end":12623729,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623734,"byte_end":12623820,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623825,"byte_end":12623876,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623881,"byte_end":12623896,"line_start":62,"line_end":62,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625929,"byte_end":12625933,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625459,"byte_end":12625519,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625524,"byte_end":12625527,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625532,"byte_end":12625606,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625611,"byte_end":12625636,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625641,"byte_end":12625644,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625649,"byte_end":12625742,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625747,"byte_end":12625838,"line_start":118,"line_end":118,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12625843,"byte_end":12625911,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12628940,"byte_end":12628957,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12628806,"byte_end":12628904,"line_start":194,"line_end":194,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12629197,"byte_end":12629206,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12628995,"byte_end":12629058,"line_start":199,"line_end":199,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12629063,"byte_end":12629066,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12629071,"byte_end":12629159,"line_start":201,"line_end":201,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12629164,"byte_end":12629185,"line_start":202,"line_end":202,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1225},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1247},{"krate":0,"index":1252},{"krate":0,"index":1258},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1326},{"krate":0,"index":1331},{"krate":0,"index":1337},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1354},{"krate":0,"index":1359}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629248,"byte_end":12629328,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629329,"byte_end":12629347,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629348,"byte_end":12629351,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629352,"byte_end":12629430,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629431,"byte_end":12629506,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629507,"byte_end":12629585,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629586,"byte_end":12629640,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629641,"byte_end":12629644,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629645,"byte_end":12629721,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629722,"byte_end":12629802,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629803,"byte_end":12629880,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629881,"byte_end":12629931,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629932,"byte_end":12629935,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12629936,"byte_end":12630014,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630015,"byte_end":12630072,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630073,"byte_end":12630076,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630077,"byte_end":12630155,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630156,"byte_end":12630228,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630229,"byte_end":12630245,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630246,"byte_end":12630249,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630250,"byte_end":12630264,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630265,"byte_end":12630268,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630269,"byte_end":12630349,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630350,"byte_end":12630429,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630430,"byte_end":12630507,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630508,"byte_end":12630586,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630587,"byte_end":12630594,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630595,"byte_end":12630598,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630599,"byte_end":12630676,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630677,"byte_end":12630752,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630753,"byte_end":12630833,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630834,"byte_end":12630837,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630838,"byte_end":12630910,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630911,"byte_end":12630989,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12630990,"byte_end":12631066,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631067,"byte_end":12631126,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631127,"byte_end":12631130,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631131,"byte_end":12631209,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631210,"byte_end":12631284,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631285,"byte_end":12631321,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631322,"byte_end":12631325,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631326,"byte_end":12631405,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631406,"byte_end":12631483,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631484,"byte_end":12631559,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631560,"byte_end":12631591,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631592,"byte_end":12631595,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631596,"byte_end":12631610,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631611,"byte_end":12631614,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631615,"byte_end":12631690,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631691,"byte_end":12631769,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631770,"byte_end":12631847,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631848,"byte_end":12631879,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631880,"byte_end":12631883,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631884,"byte_end":12631930,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12631931,"byte_end":12631999,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632000,"byte_end":12632050,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632051,"byte_end":12632099,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632100,"byte_end":12632175,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632176,"byte_end":12632251,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632252,"byte_end":12632304,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632305,"byte_end":12632308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632309,"byte_end":12632323,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632324,"byte_end":12632327,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632328,"byte_end":12632343,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632344,"byte_end":12632347,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632348,"byte_end":12632355,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632356,"byte_end":12632387,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632388,"byte_end":12632391,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632392,"byte_end":12632410,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632411,"byte_end":12632432,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632433,"byte_end":12632484,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632485,"byte_end":12632522,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632523,"byte_end":12632526,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632527,"byte_end":12632560,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632561,"byte_end":12632615,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632616,"byte_end":12632670,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632671,"byte_end":12632682,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632683,"byte_end":12632686,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632687,"byte_end":12632720,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632721,"byte_end":12632775,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632776,"byte_end":12632830,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632831,"byte_end":12632842,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632843,"byte_end":12632846,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632847,"byte_end":12632876,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632877,"byte_end":12632906,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632907,"byte_end":12632912,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632913,"byte_end":12632920,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632921,"byte_end":12632924,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632925,"byte_end":12632941,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632942,"byte_end":12632945,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632946,"byte_end":12632953,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632954,"byte_end":12632985,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632986,"byte_end":12632989,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12632990,"byte_end":12633008,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633009,"byte_end":12633030,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633031,"byte_end":12633080,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633081,"byte_end":12633084,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633085,"byte_end":12633114,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633115,"byte_end":12633144,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633145,"byte_end":12633174,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633175,"byte_end":12633178,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633179,"byte_end":12633216,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633217,"byte_end":12633259,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633260,"byte_end":12633263,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633264,"byte_end":12633333,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633334,"byte_end":12633337,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633338,"byte_end":12633387,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633388,"byte_end":12633437,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633438,"byte_end":12633443,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633444,"byte_end":12633451,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634648,"byte_end":12634654,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1220}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633855,"byte_end":12633901,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633902,"byte_end":12633905,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633906,"byte_end":12633966,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633967,"byte_end":12633994,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633995,"byte_end":12633998,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12633999,"byte_end":12634013,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634014,"byte_end":12634017,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634018,"byte_end":12634025,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634026,"byte_end":12634057,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634058,"byte_end":12634061,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634062,"byte_end":12634080,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634081,"byte_end":12634102,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634103,"byte_end":12634154,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634155,"byte_end":12634192,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634193,"byte_end":12634196,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634197,"byte_end":12634230,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634231,"byte_end":12634285,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634286,"byte_end":12634340,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634341,"byte_end":12634352,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634353,"byte_end":12634356,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634357,"byte_end":12634390,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634391,"byte_end":12634445,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634446,"byte_end":12634500,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634501,"byte_end":12634512,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634513,"byte_end":12634516,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634517,"byte_end":12634546,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634547,"byte_end":12634576,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634577,"byte_end":12634582,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634583,"byte_end":12634590,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634591,"byte_end":12634594,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634595,"byte_end":12634636,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635702,"byte_end":12635710,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634691,"byte_end":12634739,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634740,"byte_end":12634743,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634744,"byte_end":12634810,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634811,"byte_end":12634840,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634841,"byte_end":12634844,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634845,"byte_end":12634923,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634924,"byte_end":12634936,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634937,"byte_end":12634940,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12634941,"byte_end":12635048,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635049,"byte_end":12635052,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635053,"byte_end":12635067,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635068,"byte_end":12635071,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635072,"byte_end":12635079,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635080,"byte_end":12635111,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635112,"byte_end":12635115,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635116,"byte_end":12635134,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635135,"byte_end":12635156,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635157,"byte_end":12635208,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635209,"byte_end":12635246,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635247,"byte_end":12635250,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635251,"byte_end":12635284,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635285,"byte_end":12635339,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635340,"byte_end":12635394,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635395,"byte_end":12635406,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635407,"byte_end":12635410,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635411,"byte_end":12635444,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635445,"byte_end":12635499,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635500,"byte_end":12635554,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635555,"byte_end":12635566,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635567,"byte_end":12635570,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635571,"byte_end":12635600,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635601,"byte_end":12635630,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635631,"byte_end":12635636,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635637,"byte_end":12635644,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635645,"byte_end":12635648,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635649,"byte_end":12635690,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635859,"byte_end":12635864,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":3378},{"krate":0,"index":3382},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":3385},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":3397},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":1237},{"krate":0,"index":1239}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635871,"byte_end":12635896,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636368,"byte_end":12636377,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635921,"byte_end":12635986,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635991,"byte_end":12635994,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12635999,"byte_end":12636071,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636076,"byte_end":12636153,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636158,"byte_end":12636217,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636222,"byte_end":12636225,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636230,"byte_end":12636280,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636285,"byte_end":12636331,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636381,"byte_end":12636386,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636983,"byte_end":12636989,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636878,"byte_end":12636953,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636962,"byte_end":12636974,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637215,"byte_end":12637221,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637000,"byte_end":12637072,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637081,"byte_end":12637141,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637150,"byte_end":12637153,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637162,"byte_end":12637206,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636858,"byte_end":12636867,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3388}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636625,"byte_end":12636692,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636697,"byte_end":12636700,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636705,"byte_end":12636757,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636762,"byte_end":12636812,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638061,"byte_end":12638066,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3397},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637861,"byte_end":12637919,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637928,"byte_end":12637985,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637994,"byte_end":12637997,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638006,"byte_end":12638052,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638182,"byte_end":12638188,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3397},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638077,"byte_end":12638152,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638161,"byte_end":12638173,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638461,"byte_end":12638467,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":3397},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638199,"byte_end":12638273,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638282,"byte_end":12638350,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638359,"byte_end":12638387,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638396,"byte_end":12638399,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638408,"byte_end":12638452,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637838,"byte_end":12637850,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3402}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637593,"byte_end":12637664,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637669,"byte_end":12637672,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637677,"byte_end":12637737,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637742,"byte_end":12637792,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642678,"byte_end":12642685,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641052,"byte_end":12641128,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641129,"byte_end":12641178,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641179,"byte_end":12641182,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641183,"byte_end":12641252,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641253,"byte_end":12641303,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641304,"byte_end":12641307,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641308,"byte_end":12641382,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641383,"byte_end":12641458,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641459,"byte_end":12641527,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641528,"byte_end":12641531,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641532,"byte_end":12641608,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641609,"byte_end":12641690,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641691,"byte_end":12641730,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641731,"byte_end":12641734,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641735,"byte_end":12641781,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641782,"byte_end":12641850,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641851,"byte_end":12641901,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641902,"byte_end":12641954,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12641955,"byte_end":12642014,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642015,"byte_end":12642074,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642075,"byte_end":12642078,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642079,"byte_end":12642093,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642094,"byte_end":12642097,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642098,"byte_end":12642105,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642106,"byte_end":12642137,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642138,"byte_end":12642141,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642142,"byte_end":12642160,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642161,"byte_end":12642182,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642183,"byte_end":12642234,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642235,"byte_end":12642272,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642273,"byte_end":12642276,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642277,"byte_end":12642310,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642311,"byte_end":12642365,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642366,"byte_end":12642420,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642421,"byte_end":12642432,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642433,"byte_end":12642436,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642437,"byte_end":12642470,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642471,"byte_end":12642525,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642526,"byte_end":12642580,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642581,"byte_end":12642592,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642593,"byte_end":12642596,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642597,"byte_end":12642626,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642627,"byte_end":12642656,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642657,"byte_end":12642662,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12642663,"byte_end":12642670,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645737,"byte_end":12645741,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643887,"byte_end":12643961,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643966,"byte_end":12644002,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644007,"byte_end":12644010,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644015,"byte_end":12644090,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644095,"byte_end":12644161,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644166,"byte_end":12644217,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644222,"byte_end":12644225,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644230,"byte_end":12644242,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644247,"byte_end":12644250,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644255,"byte_end":12644329,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644334,"byte_end":12644410,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644415,"byte_end":12644468,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644473,"byte_end":12644476,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644481,"byte_end":12644491,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644496,"byte_end":12644499,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644504,"byte_end":12644576,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644581,"byte_end":12644656,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644661,"byte_end":12644722,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644727,"byte_end":12644730,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644735,"byte_end":12644808,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644813,"byte_end":12644878,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644883,"byte_end":12644901,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644906,"byte_end":12644909,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644914,"byte_end":12644964,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12644969,"byte_end":12645029,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645034,"byte_end":12645037,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645042,"byte_end":12645056,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645061,"byte_end":12645064,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645069,"byte_end":12645076,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645081,"byte_end":12645112,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645117,"byte_end":12645120,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645125,"byte_end":12645143,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645148,"byte_end":12645169,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645174,"byte_end":12645225,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645230,"byte_end":12645267,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645272,"byte_end":12645275,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645280,"byte_end":12645313,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645318,"byte_end":12645372,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645377,"byte_end":12645431,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645436,"byte_end":12645447,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645452,"byte_end":12645455,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645460,"byte_end":12645493,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645498,"byte_end":12645552,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645557,"byte_end":12645611,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645616,"byte_end":12645627,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645632,"byte_end":12645635,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645640,"byte_end":12645669,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645674,"byte_end":12645703,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645708,"byte_end":12645713,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645718,"byte_end":12645725,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646501,"byte_end":12646510,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645906,"byte_end":12645983,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12645988,"byte_end":12646017,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646022,"byte_end":12646025,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646030,"byte_end":12646044,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646049,"byte_end":12646052,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646057,"byte_end":12646064,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646069,"byte_end":12646100,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646105,"byte_end":12646108,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646113,"byte_end":12646131,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646136,"byte_end":12646157,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646162,"byte_end":12646209,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646214,"byte_end":12646217,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646222,"byte_end":12646249,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646254,"byte_end":12646283,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646288,"byte_end":12646291,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646296,"byte_end":12646332,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646337,"byte_end":12646340,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646345,"byte_end":12646374,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646379,"byte_end":12646382,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646387,"byte_end":12646432,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646437,"byte_end":12646467,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646472,"byte_end":12646477,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646482,"byte_end":12646489,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647769,"byte_end":12647783,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646617,"byte_end":12646659,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646664,"byte_end":12646667,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646672,"byte_end":12646748,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646753,"byte_end":12646826,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646831,"byte_end":12646851,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646856,"byte_end":12646859,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646864,"byte_end":12646874,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646879,"byte_end":12646882,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646887,"byte_end":12646957,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12646962,"byte_end":12647030,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647035,"byte_end":12647048,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647053,"byte_end":12647056,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647061,"byte_end":12647113,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647118,"byte_end":12647168,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647173,"byte_end":12647219,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647224,"byte_end":12647284,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647289,"byte_end":12647337,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647342,"byte_end":12647345,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647350,"byte_end":12647364,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647369,"byte_end":12647372,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647377,"byte_end":12647384,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647389,"byte_end":12647420,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647425,"byte_end":12647428,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647433,"byte_end":12647451,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647456,"byte_end":12647477,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647482,"byte_end":12647530,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647535,"byte_end":12647538,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647543,"byte_end":12647586,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647591,"byte_end":12647594,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647599,"byte_end":12647637,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647642,"byte_end":12647645,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647650,"byte_end":12647693,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647698,"byte_end":12647701,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647706,"byte_end":12647735,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647740,"byte_end":12647745,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12647750,"byte_end":12647757,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657630,"byte_end":12657634,"line_start":884,"line_end":884,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655118,"byte_end":12655164,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655169,"byte_end":12655172,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655177,"byte_end":12655245,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655250,"byte_end":12655282,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655287,"byte_end":12655290,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655295,"byte_end":12655365,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655370,"byte_end":12655444,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655449,"byte_end":12655452,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655457,"byte_end":12655533,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655538,"byte_end":12655614,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655619,"byte_end":12655687,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655692,"byte_end":12655765,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655770,"byte_end":12655839,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655844,"byte_end":12655889,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655894,"byte_end":12655897,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655902,"byte_end":12655921,"line_start":827,"line_end":827,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655926,"byte_end":12655929,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655934,"byte_end":12656001,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656006,"byte_end":12656075,"line_start":830,"line_end":830,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656080,"byte_end":12656156,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656161,"byte_end":12656173,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656178,"byte_end":12656181,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656186,"byte_end":12656236,"line_start":834,"line_end":834,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656241,"byte_end":12656293,"line_start":835,"line_end":835,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656298,"byte_end":12656301,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656306,"byte_end":12656320,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656325,"byte_end":12656328,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656333,"byte_end":12656340,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656345,"byte_end":12656376,"line_start":840,"line_end":840,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656381,"byte_end":12656384,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656389,"byte_end":12656407,"line_start":842,"line_end":842,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656412,"byte_end":12656433,"line_start":843,"line_end":843,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656438,"byte_end":12656489,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656494,"byte_end":12656531,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656536,"byte_end":12656539,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656544,"byte_end":12656577,"line_start":847,"line_end":847,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656582,"byte_end":12656636,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656641,"byte_end":12656695,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656700,"byte_end":12656711,"line_start":850,"line_end":850,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656716,"byte_end":12656719,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656724,"byte_end":12656757,"line_start":852,"line_end":852,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656762,"byte_end":12656816,"line_start":853,"line_end":853,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656821,"byte_end":12656875,"line_start":854,"line_end":854,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656880,"byte_end":12656891,"line_start":855,"line_end":855,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656896,"byte_end":12656899,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656904,"byte_end":12656933,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656938,"byte_end":12656967,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656972,"byte_end":12656977,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656982,"byte_end":12656989,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12656994,"byte_end":12656997,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657002,"byte_end":12657018,"line_start":862,"line_end":862,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657023,"byte_end":12657026,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657031,"byte_end":12657038,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657043,"byte_end":12657074,"line_start":865,"line_end":865,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657079,"byte_end":12657082,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657087,"byte_end":12657105,"line_start":867,"line_end":867,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657110,"byte_end":12657131,"line_start":868,"line_end":868,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657136,"byte_end":12657185,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657190,"byte_end":12657193,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657198,"byte_end":12657227,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657232,"byte_end":12657261,"line_start":872,"line_end":872,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657266,"byte_end":12657295,"line_start":873,"line_end":873,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657300,"byte_end":12657303,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657308,"byte_end":12657345,"line_start":875,"line_end":875,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657350,"byte_end":12657392,"line_start":876,"line_end":876,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657397,"byte_end":12657400,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657405,"byte_end":12657474,"line_start":878,"line_end":878,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657479,"byte_end":12657482,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657487,"byte_end":12657536,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657541,"byte_end":12657590,"line_start":881,"line_end":881,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657595,"byte_end":12657600,"line_start":882,"line_end":882,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657605,"byte_end":12657612,"line_start":883,"line_end":883,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659395,"byte_end":12659403,"line_start":929,"line_end":929,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657736,"byte_end":12657809,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657814,"byte_end":12657817,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657822,"byte_end":12657894,"line_start":891,"line_end":891,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657899,"byte_end":12657923,"line_start":892,"line_end":892,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657928,"byte_end":12657931,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12657936,"byte_end":12658016,"line_start":894,"line_end":894,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658021,"byte_end":12658095,"line_start":895,"line_end":895,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658100,"byte_end":12658103,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658108,"byte_end":12658181,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658186,"byte_end":12658260,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658265,"byte_end":12658268,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658273,"byte_end":12658349,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658354,"byte_end":12658430,"line_start":901,"line_end":901,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658435,"byte_end":12658506,"line_start":902,"line_end":902,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658511,"byte_end":12658584,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658589,"byte_end":12658662,"line_start":904,"line_end":904,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658667,"byte_end":12658738,"line_start":905,"line_end":905,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658743,"byte_end":12658795,"line_start":906,"line_end":906,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658800,"byte_end":12658803,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658808,"byte_end":12658860,"line_start":908,"line_end":908,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658865,"byte_end":12658925,"line_start":909,"line_end":909,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658930,"byte_end":12658980,"line_start":910,"line_end":910,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658985,"byte_end":12658988,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12658993,"byte_end":12659007,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659012,"byte_end":12659015,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659020,"byte_end":12659027,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659032,"byte_end":12659063,"line_start":915,"line_end":915,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659068,"byte_end":12659071,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659076,"byte_end":12659094,"line_start":917,"line_end":917,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659099,"byte_end":12659120,"line_start":918,"line_end":918,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659125,"byte_end":12659175,"line_start":919,"line_end":919,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659180,"byte_end":12659183,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659188,"byte_end":12659228,"line_start":921,"line_end":921,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659233,"byte_end":12659236,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659241,"byte_end":12659270,"line_start":923,"line_end":923,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659275,"byte_end":12659278,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659283,"byte_end":12659326,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659331,"byte_end":12659361,"line_start":926,"line_end":926,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659366,"byte_end":12659371,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659376,"byte_end":12659383,"line_start":928,"line_end":928,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1459},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1789},{"krate":0,"index":1868},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1980}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663676,"byte_end":12663746,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663747,"byte_end":12663770,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663771,"byte_end":12663774,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663775,"byte_end":12663855,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663856,"byte_end":12663934,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12663935,"byte_end":12664011,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664012,"byte_end":12664091,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664092,"byte_end":12664172,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664173,"byte_end":12664244,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664245,"byte_end":12664267,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664268,"byte_end":12664271,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664272,"byte_end":12664349,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664350,"byte_end":12664421,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664422,"byte_end":12664487,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664488,"byte_end":12664572,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664573,"byte_end":12664651,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664652,"byte_end":12664729,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664730,"byte_end":12664808,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664809,"byte_end":12664888,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664889,"byte_end":12664906,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664907,"byte_end":12664910,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664911,"byte_end":12664914,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664915,"byte_end":12664934,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664935,"byte_end":12664938,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12664939,"byte_end":12665005,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665006,"byte_end":12665086,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665087,"byte_end":12665164,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665165,"byte_end":12665168,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665169,"byte_end":12665239,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665240,"byte_end":12665319,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665320,"byte_end":12665343,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665344,"byte_end":12665347,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665348,"byte_end":12665368,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665369,"byte_end":12665372,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665373,"byte_end":12665453,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665454,"byte_end":12665534,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665535,"byte_end":12665613,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665614,"byte_end":12665686,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665687,"byte_end":12665761,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665762,"byte_end":12665774,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665775,"byte_end":12665778,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665779,"byte_end":12665826,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665827,"byte_end":12665830,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665831,"byte_end":12665912,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665913,"byte_end":12665948,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665949,"byte_end":12665952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12665953,"byte_end":12666033,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666034,"byte_end":12666115,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666116,"byte_end":12666190,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666191,"byte_end":12666272,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666273,"byte_end":12666318,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666319,"byte_end":12666322,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666323,"byte_end":12666403,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666404,"byte_end":12666482,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666483,"byte_end":12666549,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666550,"byte_end":12666632,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666633,"byte_end":12666697,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666698,"byte_end":12666701,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Please be aware that the above remarks were written with the `mpsc` channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666702,"byte_end":12666781,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ in mind, but they can also be generalized to other kinds of channels. In","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666782,"byte_end":12666858,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ general, any channel method that isn't marked async can be called anywhere,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666859,"byte_end":12666938,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ including outside of the runtime. For example, sending a message on a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12666939,"byte_end":12667012,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ oneshot channel from outside the runtime is perfectly fine.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667013,"byte_end":12667076,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667077,"byte_end":12667080,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Multiple runtimes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667081,"byte_end":12667104,"line_start":67,"line_end":67,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667105,"byte_end":12667108,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The mpsc channel does not care about which runtime you use it in, and can be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667109,"byte_end":12667189,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ used to send messages from one runtime to another. It can also be used in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667190,"byte_end":12667267,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ non-Tokio runtimes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667268,"byte_end":12667291,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667292,"byte_end":12667295,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ There is one exception to the above: the [`send_timeout`] must be used from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667296,"byte_end":12667375,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ within a Tokio runtime, however it is still not tied to one specific Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667376,"byte_end":12667454,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ runtime, and the sender may be moved from one Tokio runtime to another.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667455,"byte_end":12667530,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667531,"byte_end":12667534,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667535,"byte_end":12667576,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667577,"byte_end":12667622,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667623,"byte_end":12667676,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667677,"byte_end":12667732,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667733,"byte_end":12667796,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667797,"byte_end":12667862,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667863,"byte_end":12667922,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667923,"byte_end":12667986,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12667987,"byte_end":12668047,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668048,"byte_end":12668093,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668094,"byte_end":12668184,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/ [`send_timeout`]: crate::sync::mpsc::Sender::send_timeout","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668185,"byte_end":12668246,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682412,"byte_end":12682418,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1492}],"decl_id":null,"docs":" Sends values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682072,"byte_end":12682118,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682119,"byte_end":12682122,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682123,"byte_end":12682186,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682187,"byte_end":12682190,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To convert the `Sender` into a `Sink` or use it in a poll function, you can","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682191,"byte_end":12682270,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ use the [`PollSender`] utility.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682271,"byte_end":12682306,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682307,"byte_end":12682310,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682311,"byte_end":12682400,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682794,"byte_end":12682800,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":1496}],"decl_id":null,"docs":" Permits to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permits to send one value into the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682461,"byte_end":12682508,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682509,"byte_end":12682512,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682513,"byte_end":12682600,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682601,"byte_end":12682684,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682685,"byte_end":12682688,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682689,"byte_end":12682731,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682732,"byte_end":12682782,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683369,"byte_end":12683380,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":1499}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682851,"byte_end":12682903,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682904,"byte_end":12682907,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682908,"byte_end":12682985,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12682986,"byte_end":12683015,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683016,"byte_end":12683019,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683020,"byte_end":12683092,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683093,"byte_end":12683171,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683172,"byte_end":12683212,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683213,"byte_end":12683216,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683217,"byte_end":12683239,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683240,"byte_end":12683294,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683295,"byte_end":12683357,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683748,"byte_end":12683756,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1502}],"decl_id":null,"docs":" Receives values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receives values from the associated `Sender`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683431,"byte_end":12683480,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683481,"byte_end":12683484,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683485,"byte_end":12683548,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683549,"byte_end":12683552,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683553,"byte_end":12683626,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683627,"byte_end":12683630,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683631,"byte_end":12683736,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685206,"byte_end":12685213,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683829,"byte_end":12683908,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683909,"byte_end":12683931,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683932,"byte_end":12683935,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12683936,"byte_end":12684012,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to send new messages will wait until a message is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684013,"byte_end":12684091,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684092,"byte_end":12684171,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684172,"byte_end":12684175,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684176,"byte_end":12684253,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684254,"byte_end":12684279,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684280,"byte_end":12684283,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684284,"byte_end":12684363,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684364,"byte_end":12684412,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684413,"byte_end":12684416,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684417,"byte_end":12684496,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684497,"byte_end":12684572,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684573,"byte_end":12684632,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684633,"byte_end":12684636,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684637,"byte_end":12684649,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684650,"byte_end":12684653,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684654,"byte_end":12684693,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684694,"byte_end":12684697,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684698,"byte_end":12684712,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684713,"byte_end":12684716,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684717,"byte_end":12684728,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684729,"byte_end":12684755,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684756,"byte_end":12684759,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684760,"byte_end":12684778,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684779,"byte_end":12684800,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684801,"byte_end":12684847,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684848,"byte_end":12684851,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684852,"byte_end":12684885,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684886,"byte_end":12684914,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684915,"byte_end":12684965,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12684966,"byte_end":12685015,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685016,"byte_end":12685043,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685044,"byte_end":12685061,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685062,"byte_end":12685075,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685076,"byte_end":12685087,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685088,"byte_end":12685091,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685092,"byte_end":12685137,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685138,"byte_end":12685174,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685175,"byte_end":12685184,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685185,"byte_end":12685190,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685191,"byte_end":12685198,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687844,"byte_end":12687848,"line_start":185,"line_end":185,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685813,"byte_end":12685859,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685864,"byte_end":12685867,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685872,"byte_end":12685947,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685952,"byte_end":12686025,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686030,"byte_end":12686106,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686111,"byte_end":12686186,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686191,"byte_end":12686194,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686199,"byte_end":12686272,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686277,"byte_end":12686351,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.  Note that if [`close`] is called, but there are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686356,"byte_end":12686431,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ still outstanding [`Permits`] from before it was closed, the channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686436,"byte_end":12686511,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ not considered closed by `recv` until the permits are released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686516,"byte_end":12686583,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686588,"byte_end":12686591,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686596,"byte_end":12686615,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686620,"byte_end":12686623,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686628,"byte_end":12686695,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686700,"byte_end":12686769,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686774,"byte_end":12686850,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686855,"byte_end":12686867,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686872,"byte_end":12686875,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686880,"byte_end":12686906,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686911,"byte_end":12686960,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686965,"byte_end":12686968,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686973,"byte_end":12686987,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12686992,"byte_end":12686995,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687000,"byte_end":12687007,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687012,"byte_end":12687038,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687043,"byte_end":12687046,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687051,"byte_end":12687069,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687074,"byte_end":12687095,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687100,"byte_end":12687146,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687151,"byte_end":12687154,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687159,"byte_end":12687192,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687197,"byte_end":12687241,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687246,"byte_end":12687257,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687262,"byte_end":12687265,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687270,"byte_end":12687321,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687326,"byte_end":12687368,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687373,"byte_end":12687378,"line_start":166,"line_end":166,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687383,"byte_end":12687390,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687395,"byte_end":12687398,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687403,"byte_end":12687427,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687432,"byte_end":12687435,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687440,"byte_end":12687447,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687452,"byte_end":12687478,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687483,"byte_end":12687486,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687491,"byte_end":12687509,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687514,"byte_end":12687535,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687540,"byte_end":12687586,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687591,"byte_end":12687594,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687599,"byte_end":12687639,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687644,"byte_end":12687684,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687689,"byte_end":12687692,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687697,"byte_end":12687748,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687753,"byte_end":12687804,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687809,"byte_end":12687814,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687819,"byte_end":12687826,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689451,"byte_end":12689459,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12687969,"byte_end":12688023,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688028,"byte_end":12688031,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688036,"byte_end":12688107,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688112,"byte_end":12688178,"line_start":193,"line_end":193,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688183,"byte_end":12688186,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688191,"byte_end":12688259,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688264,"byte_end":12688337,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688342,"byte_end":12688345,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688350,"byte_end":12688419,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688424,"byte_end":12688455,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688460,"byte_end":12688463,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688468,"byte_end":12688528,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688533,"byte_end":12688607,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688612,"byte_end":12688646,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688651,"byte_end":12688691,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688696,"byte_end":12688736,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688741,"byte_end":12688744,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688749,"byte_end":12688763,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688768,"byte_end":12688771,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688776,"byte_end":12688783,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688788,"byte_end":12688814,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688819,"byte_end":12688866,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688871,"byte_end":12688874,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688879,"byte_end":12688897,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688902,"byte_end":12688923,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688928,"byte_end":12688974,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688979,"byte_end":12688982,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12688987,"byte_end":12689027,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689032,"byte_end":12689035,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689040,"byte_end":12689087,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689092,"byte_end":12689152,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689157,"byte_end":12689160,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689165,"byte_end":12689205,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689210,"byte_end":12689263,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689268,"byte_end":12689285,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689290,"byte_end":12689293,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689298,"byte_end":12689345,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689350,"byte_end":12689417,"line_start":227,"line_end":227,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689422,"byte_end":12689427,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689432,"byte_end":12689439,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691483,"byte_end":12691496,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689540,"byte_end":12689602,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689607,"byte_end":12689610,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689615,"byte_end":12689690,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689695,"byte_end":12689768,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689773,"byte_end":12689849,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689854,"byte_end":12689929,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689934,"byte_end":12689937,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12689942,"byte_end":12690015,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690020,"byte_end":12690094,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690099,"byte_end":12690125,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690130,"byte_end":12690133,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690138,"byte_end":12690206,"line_start":245,"line_end":245,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690211,"byte_end":12690286,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690291,"byte_end":12690346,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690351,"byte_end":12690354,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690359,"byte_end":12690428,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690433,"byte_end":12690505,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690510,"byte_end":12690571,"line_start":251,"line_end":251,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690576,"byte_end":12690579,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690584,"byte_end":12690610,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690615,"byte_end":12690664,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690669,"byte_end":12690735,"line_start":255,"line_end":255,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690740,"byte_end":12690743,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690748,"byte_end":12690760,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690765,"byte_end":12690768,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690773,"byte_end":12690840,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690845,"byte_end":12690857,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690862,"byte_end":12690865,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690870,"byte_end":12690884,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690889,"byte_end":12690892,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690897,"byte_end":12690904,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690909,"byte_end":12690929,"line_start":265,"line_end":265,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690934,"byte_end":12690966,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12690971,"byte_end":12690997,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691002,"byte_end":12691005,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691010,"byte_end":12691025,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691030,"byte_end":12691081,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691086,"byte_end":12691089,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691094,"byte_end":12691141,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691146,"byte_end":12691199,"line_start":273,"line_end":273,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691204,"byte_end":12691215,"line_start":274,"line_end":274,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691220,"byte_end":12691223,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691228,"byte_end":12691250,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691255,"byte_end":12691276,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691281,"byte_end":12691315,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691320,"byte_end":12691362,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691367,"byte_end":12691382,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691387,"byte_end":12691420,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691425,"byte_end":12691430,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691435,"byte_end":12691442,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691447,"byte_end":12691471,"line_start":284,"line_end":284,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692907,"byte_end":12692912,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691579,"byte_end":12691642,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691647,"byte_end":12691650,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691655,"byte_end":12691730,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691735,"byte_end":12691807,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691812,"byte_end":12691882,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691887,"byte_end":12691890,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691895,"byte_end":12691966,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12691971,"byte_end":12692037,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692042,"byte_end":12692118,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692123,"byte_end":12692170,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692175,"byte_end":12692178,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692183,"byte_end":12692205,"line_start":300,"line_end":300,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692210,"byte_end":12692242,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692247,"byte_end":12692250,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692255,"byte_end":12692269,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692274,"byte_end":12692277,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692282,"byte_end":12692289,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692294,"byte_end":12692320,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692325,"byte_end":12692328,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692333,"byte_end":12692351,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692356,"byte_end":12692377,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692382,"byte_end":12692427,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692432,"byte_end":12692435,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692440,"byte_end":12692473,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692478,"byte_end":12692504,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692509,"byte_end":12692564,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692569,"byte_end":12692600,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692605,"byte_end":12692628,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692633,"byte_end":12692646,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692651,"byte_end":12692662,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692667,"byte_end":12692670,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692675,"byte_end":12692694,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692699,"byte_end":12692702,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692707,"byte_end":12692754,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692759,"byte_end":12692795,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692800,"byte_end":12692809,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692814,"byte_end":12692817,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692822,"byte_end":12692873,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692878,"byte_end":12692883,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692888,"byte_end":12692895,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694136,"byte_end":12694145,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12692964,"byte_end":12693018,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693023,"byte_end":12693026,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693031,"byte_end":12693055,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693060,"byte_end":12693063,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693068,"byte_end":12693142,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693147,"byte_end":12693195,"line_start":338,"line_end":338,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693200,"byte_end":12693262,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693267,"byte_end":12693341,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693346,"byte_end":12693398,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693403,"byte_end":12693406,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693411,"byte_end":12693483,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693488,"byte_end":12693564,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693569,"byte_end":12693645,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693650,"byte_end":12693721,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693726,"byte_end":12693775,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693780,"byte_end":12693783,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693788,"byte_end":12693862,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693867,"byte_end":12693939,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12693944,"byte_end":12694017,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694022,"byte_end":12694098,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694103,"byte_end":12694124,"line_start":353,"line_end":353,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696692,"byte_end":12696696,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694601,"byte_end":12694652,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694657,"byte_end":12694660,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694665,"byte_end":12694741,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694746,"byte_end":12694822,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694827,"byte_end":12694901,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694906,"byte_end":12694981,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694986,"byte_end":12695055,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695060,"byte_end":12695132,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695137,"byte_end":12695168,"line_start":382,"line_end":382,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695173,"byte_end":12695176,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695181,"byte_end":12695193,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695198,"byte_end":12695201,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695206,"byte_end":12695279,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695284,"byte_end":12695358,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695363,"byte_end":12695423,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695428,"byte_end":12695431,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695436,"byte_end":12695466,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695471,"byte_end":12695497,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695502,"byte_end":12695505,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695510,"byte_end":12695529,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695534,"byte_end":12695537,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ If `send` is used as the event in a [`tokio::select!`](crate::select)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695542,"byte_end":12695615,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ statement and some other branch completes first, then it is guaranteed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695620,"byte_end":12695694,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ that the message was not sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695699,"byte_end":12695733,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695738,"byte_end":12695741,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695746,"byte_end":12695820,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695825,"byte_end":12695893,"line_start":400,"line_end":400,"column_start":5,"column_end":73}},{"value":"/ `send` makes you lose your place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695898,"byte_end":12695948,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695953,"byte_end":12695956,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695961,"byte_end":12695975,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695980,"byte_end":12695983,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12695988,"byte_end":12696058,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696063,"byte_end":12696102,"line_start":406,"line_end":406,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696107,"byte_end":12696110,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696115,"byte_end":12696126,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696131,"byte_end":12696157,"line_start":409,"line_end":409,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696162,"byte_end":12696165,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696170,"byte_end":12696188,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696193,"byte_end":12696214,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696219,"byte_end":12696263,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696268,"byte_end":12696271,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696276,"byte_end":12696309,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696314,"byte_end":12696342,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696347,"byte_end":12696397,"line_start":417,"line_end":417,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696402,"byte_end":12696451,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696456,"byte_end":12696483,"line_start":419,"line_end":419,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696488,"byte_end":12696505,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696510,"byte_end":12696523,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696528,"byte_end":12696539,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696544,"byte_end":12696547,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696552,"byte_end":12696597,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696602,"byte_end":12696638,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696643,"byte_end":12696652,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696657,"byte_end":12696662,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696667,"byte_end":12696674,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698023,"byte_end":12698029,"line_start":475,"line_end":475,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696948,"byte_end":12696992,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12696997,"byte_end":12697000,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697005,"byte_end":12697080,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697085,"byte_end":12697140,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697145,"byte_end":12697148,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697153,"byte_end":12697172,"line_start":444,"line_end":444,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697177,"byte_end":12697180,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697185,"byte_end":12697260,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697265,"byte_end":12697334,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697339,"byte_end":12697342,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697347,"byte_end":12697361,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697366,"byte_end":12697369,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697374,"byte_end":12697381,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697386,"byte_end":12697412,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697417,"byte_end":12697420,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697425,"byte_end":12697443,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697448,"byte_end":12697469,"line_start":455,"line_end":455,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697474,"byte_end":12697521,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697526,"byte_end":12697556,"line_start":457,"line_end":457,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697561,"byte_end":12697591,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697596,"byte_end":12697626,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697631,"byte_end":12697661,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697666,"byte_end":12697699,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697704,"byte_end":12697725,"line_start":462,"line_end":462,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697730,"byte_end":12697741,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697746,"byte_end":12697749,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697754,"byte_end":12697777,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697782,"byte_end":12697807,"line_start":466,"line_end":466,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697812,"byte_end":12697837,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697842,"byte_end":12697867,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697872,"byte_end":12697897,"line_start":469,"line_end":469,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697902,"byte_end":12697926,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697931,"byte_end":12697941,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697946,"byte_end":12697983,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697988,"byte_end":12697993,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12697998,"byte_end":12698005,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700203,"byte_end":12700211,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698083,"byte_end":12698142,"line_start":479,"line_end":479,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698147,"byte_end":12698150,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698155,"byte_end":12698234,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698239,"byte_end":12698314,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698319,"byte_end":12698397,"line_start":483,"line_end":483,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698402,"byte_end":12698444,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698449,"byte_end":12698452,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698457,"byte_end":12698469,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698474,"byte_end":12698477,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698482,"byte_end":12698553,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698558,"byte_end":12698634,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698639,"byte_end":12698661,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698666,"byte_end":12698669,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698674,"byte_end":12698747,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698752,"byte_end":12698826,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698831,"byte_end":12698891,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698896,"byte_end":12698899,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698904,"byte_end":12698930,"line_start":496,"line_end":496,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698935,"byte_end":12698959,"line_start":497,"line_end":497,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698964,"byte_end":12698994,"line_start":498,"line_end":498,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12698999,"byte_end":12699002,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699007,"byte_end":12699021,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699026,"byte_end":12699029,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699034,"byte_end":12699041,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699046,"byte_end":12699072,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699077,"byte_end":12699080,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699085,"byte_end":12699103,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699108,"byte_end":12699129,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699134,"byte_end":12699180,"line_start":507,"line_end":507,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699185,"byte_end":12699230,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699235,"byte_end":12699265,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699270,"byte_end":12699273,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699278,"byte_end":12699311,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699316,"byte_end":12699355,"line_start":512,"line_end":512,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699360,"byte_end":12699399,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699404,"byte_end":12699466,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699471,"byte_end":12699482,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699487,"byte_end":12699490,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699495,"byte_end":12699528,"line_start":517,"line_end":517,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699533,"byte_end":12699582,"line_start":518,"line_end":518,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699587,"byte_end":12699634,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699639,"byte_end":12699675,"line_start":520,"line_end":520,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699680,"byte_end":12699691,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699696,"byte_end":12699699,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699704,"byte_end":12699724,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699729,"byte_end":12699768,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699773,"byte_end":12699818,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699823,"byte_end":12699826,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699831,"byte_end":12699870,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699875,"byte_end":12699920,"line_start":528,"line_end":528,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699925,"byte_end":12699928,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699933,"byte_end":12699982,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12699987,"byte_end":12700018,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700023,"byte_end":12700085,"line_start":532,"line_end":532,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700090,"byte_end":12700155,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700160,"byte_end":12700169,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700174,"byte_end":12700179,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12700184,"byte_end":12700191,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704061,"byte_end":12704074,"line_start":654,"line_end":654,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12702989,"byte_end":12703048,"line_start":620,"line_end":620,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703053,"byte_end":12703056,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703061,"byte_end":12703129,"line_start":622,"line_end":622,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703134,"byte_end":12703202,"line_start":623,"line_end":623,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703207,"byte_end":12703274,"line_start":624,"line_end":624,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703279,"byte_end":12703282,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703287,"byte_end":12703355,"line_start":626,"line_end":626,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703360,"byte_end":12703363,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703368,"byte_end":12703380,"line_start":628,"line_end":628,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703385,"byte_end":12703388,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703393,"byte_end":12703460,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703465,"byte_end":12703477,"line_start":631,"line_end":631,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703482,"byte_end":12703485,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703490,"byte_end":12703504,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703509,"byte_end":12703512,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703517,"byte_end":12703524,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703529,"byte_end":12703549,"line_start":636,"line_end":636,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703554,"byte_end":12703586,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703591,"byte_end":12703617,"line_start":638,"line_end":638,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703622,"byte_end":12703625,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703630,"byte_end":12703645,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703650,"byte_end":12703700,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703705,"byte_end":12703708,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703713,"byte_end":12703760,"line_start":643,"line_end":643,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703765,"byte_end":12703807,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703812,"byte_end":12703823,"line_start":645,"line_end":645,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703828,"byte_end":12703831,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703836,"byte_end":12703889,"line_start":647,"line_end":647,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703894,"byte_end":12703944,"line_start":648,"line_end":648,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703949,"byte_end":12703960,"line_start":649,"line_end":649,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12703965,"byte_end":12703998,"line_start":650,"line_end":650,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704003,"byte_end":12704008,"line_start":651,"line_end":651,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704013,"byte_end":12704020,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704025,"byte_end":12704049,"line_start":653,"line_end":653,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704765,"byte_end":12704774,"line_start":676,"line_end":676,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704183,"byte_end":12704247,"line_start":658,"line_end":658,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704252,"byte_end":12704322,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704327,"byte_end":12704338,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704343,"byte_end":12704346,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704351,"byte_end":12704396,"line_start":662,"line_end":662,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704401,"byte_end":12704460,"line_start":663,"line_end":663,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704465,"byte_end":12704468,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704473,"byte_end":12704480,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704485,"byte_end":12704541,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704546,"byte_end":12704575,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704580,"byte_end":12704583,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704588,"byte_end":12704613,"line_start":669,"line_end":669,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704618,"byte_end":12704648,"line_start":670,"line_end":670,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704653,"byte_end":12704656,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704661,"byte_end":12704674,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704679,"byte_end":12704707,"line_start":673,"line_end":673,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704712,"byte_end":12704741,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704746,"byte_end":12704753,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706416,"byte_end":12706423,"line_start":724,"line_end":724,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704833,"byte_end":12704901,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704906,"byte_end":12704951,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704956,"byte_end":12704959,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12704964,"byte_end":12705039,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705044,"byte_end":12705119,"line_start":684,"line_end":684,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705124,"byte_end":12705197,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705202,"byte_end":12705277,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705282,"byte_end":12705304,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705309,"byte_end":12705312,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705317,"byte_end":12705393,"line_start":689,"line_end":689,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705398,"byte_end":12705417,"line_start":690,"line_end":690,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705422,"byte_end":12705425,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705430,"byte_end":12705452,"line_start":692,"line_end":692,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705457,"byte_end":12705483,"line_start":693,"line_end":693,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705488,"byte_end":12705491,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705496,"byte_end":12705515,"line_start":695,"line_end":695,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705520,"byte_end":12705523,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705528,"byte_end":12705602,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705607,"byte_end":12705675,"line_start":698,"line_end":698,"column_start":5,"column_end":73}},{"value":"/ `reserve` makes you lose your place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705680,"byte_end":12705733,"line_start":699,"line_end":699,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705738,"byte_end":12705741,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705746,"byte_end":12705760,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705765,"byte_end":12705768,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705773,"byte_end":12705780,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705785,"byte_end":12705811,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705816,"byte_end":12705819,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705824,"byte_end":12705842,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705847,"byte_end":12705868,"line_start":707,"line_end":707,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705873,"byte_end":12705917,"line_start":708,"line_end":708,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705922,"byte_end":12705925,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705930,"byte_end":12705957,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12705962,"byte_end":12706011,"line_start":711,"line_end":711,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706016,"byte_end":12706019,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706024,"byte_end":12706090,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706095,"byte_end":12706125,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706130,"byte_end":12706173,"line_start":715,"line_end":715,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706178,"byte_end":12706181,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706186,"byte_end":12706227,"line_start":717,"line_end":717,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706232,"byte_end":12706257,"line_start":718,"line_end":718,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706262,"byte_end":12706265,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706270,"byte_end":12706321,"line_start":720,"line_end":720,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706326,"byte_end":12706376,"line_start":721,"line_end":721,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706381,"byte_end":12706386,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706391,"byte_end":12706398,"line_start":723,"line_end":723,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709801,"byte_end":12709814,"line_start":809,"line_end":809,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706561,"byte_end":12706635,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706640,"byte_end":12706714,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706719,"byte_end":12706738,"line_start":731,"line_end":731,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706743,"byte_end":12706746,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706751,"byte_end":12706825,"line_start":733,"line_end":733,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706830,"byte_end":12706905,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706910,"byte_end":12706985,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12706990,"byte_end":12707065,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707070,"byte_end":12707145,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707150,"byte_end":12707224,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707229,"byte_end":12707290,"line_start":739,"line_end":739,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707295,"byte_end":12707298,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707303,"byte_end":12707378,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707383,"byte_end":12707458,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707463,"byte_end":12707536,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707541,"byte_end":12707614,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707619,"byte_end":12707654,"line_start":745,"line_end":745,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707659,"byte_end":12707662,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707667,"byte_end":12707738,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707743,"byte_end":12707776,"line_start":748,"line_end":748,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707781,"byte_end":12707784,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707789,"byte_end":12707808,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707813,"byte_end":12707816,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707821,"byte_end":12707895,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707900,"byte_end":12707968,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/ `reserve_owned` makes you lose your place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12707973,"byte_end":12708032,"line_start":754,"line_end":754,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708037,"byte_end":12708040,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708045,"byte_end":12708059,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708064,"byte_end":12708111,"line_start":757,"line_end":757,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708116,"byte_end":12708123,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708128,"byte_end":12708154,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708159,"byte_end":12708162,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708167,"byte_end":12708185,"line_start":761,"line_end":761,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708190,"byte_end":12708211,"line_start":762,"line_end":762,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708216,"byte_end":12708260,"line_start":763,"line_end":763,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708265,"byte_end":12708268,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708273,"byte_end":12708320,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708325,"byte_end":12708380,"line_start":766,"line_end":766,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708385,"byte_end":12708388,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708393,"byte_end":12708454,"line_start":768,"line_end":768,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708459,"byte_end":12708487,"line_start":769,"line_end":769,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708492,"byte_end":12708526,"line_start":770,"line_end":770,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708531,"byte_end":12708534,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708539,"byte_end":12708591,"line_start":772,"line_end":772,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708596,"byte_end":12708646,"line_start":773,"line_end":773,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708651,"byte_end":12708654,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708659,"byte_end":12708703,"line_start":775,"line_end":775,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708708,"byte_end":12708744,"line_start":776,"line_end":776,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708749,"byte_end":12708754,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708759,"byte_end":12708766,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708771,"byte_end":12708774,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708779,"byte_end":12708855,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708860,"byte_end":12708936,"line_start":781,"line_end":781,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708941,"byte_end":12708944,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708949,"byte_end":12708956,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708961,"byte_end":12708987,"line_start":784,"line_end":784,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12708992,"byte_end":12708995,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709000,"byte_end":12709018,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709023,"byte_end":12709044,"line_start":787,"line_end":787,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709049,"byte_end":12709093,"line_start":788,"line_end":788,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709098,"byte_end":12709101,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709106,"byte_end":12709155,"line_start":790,"line_end":790,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709160,"byte_end":12709223,"line_start":791,"line_end":791,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709228,"byte_end":12709231,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709236,"byte_end":12709302,"line_start":793,"line_end":793,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709307,"byte_end":12709337,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709342,"byte_end":12709385,"line_start":795,"line_end":795,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709390,"byte_end":12709393,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709398,"byte_end":12709440,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709445,"byte_end":12709470,"line_start":798,"line_end":798,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709475,"byte_end":12709478,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709483,"byte_end":12709534,"line_start":800,"line_end":800,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709539,"byte_end":12709589,"line_start":801,"line_end":801,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709594,"byte_end":12709599,"line_start":802,"line_end":802,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709604,"byte_end":12709611,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709616,"byte_end":12709619,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709624,"byte_end":12709664,"line_start":805,"line_end":805,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709669,"byte_end":12709701,"line_start":806,"line_end":806,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709706,"byte_end":12709737,"line_start":807,"line_end":807,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12709742,"byte_end":12709783,"line_start":808,"line_end":808,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711716,"byte_end":12711727,"line_start":866,"line_end":866,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710193,"byte_end":12710274,"line_start":823,"line_end":823,"column_start":5,"column_end":86}},{"value":"/ available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710279,"byte_end":12710293,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710298,"byte_end":12710301,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710306,"byte_end":12710386,"line_start":826,"line_end":826,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710391,"byte_end":12710476,"line_start":827,"line_end":827,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710481,"byte_end":12710563,"line_start":828,"line_end":828,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710568,"byte_end":12710642,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710647,"byte_end":12710650,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710655,"byte_end":12710731,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710736,"byte_end":12710755,"line_start":832,"line_end":832,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710760,"byte_end":12710763,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710768,"byte_end":12710790,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710795,"byte_end":12710821,"line_start":835,"line_end":835,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710826,"byte_end":12710858,"line_start":836,"line_end":836,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710863,"byte_end":12710866,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710871,"byte_end":12710885,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710890,"byte_end":12710893,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710898,"byte_end":12710905,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710910,"byte_end":12710936,"line_start":841,"line_end":841,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710941,"byte_end":12710944,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710949,"byte_end":12710967,"line_start":843,"line_end":843,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710972,"byte_end":12710993,"line_start":844,"line_end":844,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12710998,"byte_end":12711042,"line_start":845,"line_end":845,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711047,"byte_end":12711050,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711055,"byte_end":12711082,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711087,"byte_end":12711134,"line_start":848,"line_end":848,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711139,"byte_end":12711142,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711147,"byte_end":12711213,"line_start":850,"line_end":850,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711218,"byte_end":12711248,"line_start":851,"line_end":851,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711253,"byte_end":12711296,"line_start":852,"line_end":852,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711301,"byte_end":12711304,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711309,"byte_end":12711373,"line_start":854,"line_end":854,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711378,"byte_end":12711423,"line_start":855,"line_end":855,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711428,"byte_end":12711471,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711476,"byte_end":12711479,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711484,"byte_end":12711525,"line_start":858,"line_end":858,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711530,"byte_end":12711555,"line_start":859,"line_end":859,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711560,"byte_end":12711563,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711568,"byte_end":12711619,"line_start":861,"line_end":861,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711624,"byte_end":12711674,"line_start":862,"line_end":862,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711679,"byte_end":12711682,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711687,"byte_end":12711692,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12711697,"byte_end":12711704,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714468,"byte_end":12714485,"line_start":931,"line_end":931,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712086,"byte_end":12712167,"line_start":876,"line_end":876,"column_start":5,"column_end":86}},{"value":"/ available, returning an owned permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712172,"byte_end":12712213,"line_start":877,"line_end":877,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712218,"byte_end":12712221,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712226,"byte_end":12712300,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712305,"byte_end":12712384,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712389,"byte_end":12712464,"line_start":881,"line_end":881,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712469,"byte_end":12712545,"line_start":882,"line_end":882,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712550,"byte_end":12712625,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712630,"byte_end":12712704,"line_start":884,"line_end":884,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712709,"byte_end":12712774,"line_start":885,"line_end":885,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712779,"byte_end":12712782,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712787,"byte_end":12712859,"line_start":887,"line_end":887,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712864,"byte_end":12712939,"line_start":888,"line_end":888,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12712944,"byte_end":12713017,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713022,"byte_end":12713095,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713100,"byte_end":12713176,"line_start":891,"line_end":891,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713181,"byte_end":12713256,"line_start":892,"line_end":892,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713261,"byte_end":12713298,"line_start":893,"line_end":893,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713303,"byte_end":12713306,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713311,"byte_end":12713396,"line_start":895,"line_end":895,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713401,"byte_end":12713420,"line_start":896,"line_end":896,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713425,"byte_end":12713428,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713433,"byte_end":12713465,"line_start":898,"line_end":898,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713470,"byte_end":12713501,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713506,"byte_end":12713550,"line_start":900,"line_end":900,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713555,"byte_end":12713596,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713601,"byte_end":12713604,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713609,"byte_end":12713623,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713628,"byte_end":12713631,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713636,"byte_end":12713643,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713648,"byte_end":12713674,"line_start":906,"line_end":906,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713679,"byte_end":12713682,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713687,"byte_end":12713705,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713710,"byte_end":12713731,"line_start":909,"line_end":909,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713736,"byte_end":12713780,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713785,"byte_end":12713788,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713793,"byte_end":12713820,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713825,"byte_end":12713886,"line_start":913,"line_end":913,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713891,"byte_end":12713894,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713899,"byte_end":12713965,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12713970,"byte_end":12714000,"line_start":916,"line_end":916,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714005,"byte_end":12714048,"line_start":917,"line_end":917,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714053,"byte_end":12714056,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714061,"byte_end":12714125,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714130,"byte_end":12714175,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714180,"byte_end":12714223,"line_start":921,"line_end":921,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714228,"byte_end":12714231,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714236,"byte_end":12714277,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714282,"byte_end":12714307,"line_start":924,"line_end":924,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714312,"byte_end":12714315,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714320,"byte_end":12714371,"line_start":926,"line_end":926,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714376,"byte_end":12714426,"line_start":927,"line_end":927,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714431,"byte_end":12714434,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714439,"byte_end":12714444,"line_start":929,"line_end":929,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714449,"byte_end":12714456,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715252,"byte_end":12715264,"line_start":955,"line_end":955,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714881,"byte_end":12714938,"line_start":943,"line_end":943,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714943,"byte_end":12714946,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714951,"byte_end":12714965,"line_start":945,"line_end":945,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714970,"byte_end":12714973,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714978,"byte_end":12714985,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12714990,"byte_end":12715045,"line_start":948,"line_end":948,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715050,"byte_end":12715076,"line_start":949,"line_end":949,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715081,"byte_end":12715116,"line_start":950,"line_end":950,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715121,"byte_end":12715124,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715129,"byte_end":12715186,"line_start":952,"line_end":952,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715191,"byte_end":12715228,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715233,"byte_end":12715240,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716307,"byte_end":12716315,"line_start":988,"line_end":988,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715351,"byte_end":12715399,"line_start":959,"line_end":959,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715404,"byte_end":12715407,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715412,"byte_end":12715504,"line_start":961,"line_end":961,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715509,"byte_end":12715597,"line_start":962,"line_end":962,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715602,"byte_end":12715605,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715610,"byte_end":12715624,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715629,"byte_end":12715632,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715637,"byte_end":12715644,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715649,"byte_end":12715675,"line_start":967,"line_end":967,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715680,"byte_end":12715683,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715688,"byte_end":12715706,"line_start":969,"line_end":969,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715711,"byte_end":12715732,"line_start":970,"line_end":970,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715737,"byte_end":12715787,"line_start":971,"line_end":971,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715792,"byte_end":12715795,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715800,"byte_end":12715837,"line_start":973,"line_end":973,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715842,"byte_end":12715845,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715850,"byte_end":12715908,"line_start":975,"line_end":975,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715913,"byte_end":12715962,"line_start":976,"line_end":976,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12715967,"byte_end":12716004,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716009,"byte_end":12716012,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the capacity by one.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716017,"byte_end":12716088,"line_start":979,"line_end":979,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716093,"byte_end":12716117,"line_start":980,"line_end":980,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716122,"byte_end":12716155,"line_start":981,"line_end":981,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716160,"byte_end":12716197,"line_start":982,"line_end":982,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716202,"byte_end":12716207,"line_start":983,"line_end":983,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716212,"byte_end":12716219,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716224,"byte_end":12716227,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716232,"byte_end":12716258,"line_start":986,"line_end":986,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716263,"byte_end":12716295,"line_start":987,"line_end":987,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717862,"byte_end":12717866,"line_start":1044,"line_end":1044,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716789,"byte_end":12716835,"line_start":1012,"line_end":1012,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716840,"byte_end":12716843,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716848,"byte_end":12716923,"line_start":1014,"line_end":1014,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716928,"byte_end":12717002,"line_start":1015,"line_end":1015,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717007,"byte_end":12717081,"line_start":1016,"line_end":1016,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717086,"byte_end":12717134,"line_start":1017,"line_end":1017,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717139,"byte_end":12717142,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717147,"byte_end":12717187,"line_start":1019,"line_end":1019,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717192,"byte_end":12717195,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717200,"byte_end":12717214,"line_start":1021,"line_end":1021,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717219,"byte_end":12717222,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717227,"byte_end":12717234,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717239,"byte_end":12717265,"line_start":1024,"line_end":1024,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717270,"byte_end":12717273,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717278,"byte_end":12717296,"line_start":1026,"line_end":1026,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717301,"byte_end":12717322,"line_start":1027,"line_end":1027,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717327,"byte_end":12717371,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717376,"byte_end":12717379,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717384,"byte_end":12717411,"line_start":1030,"line_end":1030,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717416,"byte_end":12717465,"line_start":1031,"line_end":1031,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717470,"byte_end":12717473,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717478,"byte_end":12717544,"line_start":1033,"line_end":1033,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717549,"byte_end":12717579,"line_start":1034,"line_end":1034,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717584,"byte_end":12717627,"line_start":1035,"line_end":1035,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717632,"byte_end":12717635,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717640,"byte_end":12717679,"line_start":1037,"line_end":1037,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717684,"byte_end":12717709,"line_start":1038,"line_end":1038,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717714,"byte_end":12717717,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717722,"byte_end":12717773,"line_start":1040,"line_end":1040,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717778,"byte_end":12717828,"line_start":1041,"line_end":1041,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717833,"byte_end":12717838,"line_start":1042,"line_end":1042,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12717843,"byte_end":12717850,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719928,"byte_end":12719932,"line_start":1116,"line_end":1116,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718741,"byte_end":12718787,"line_start":1082,"line_end":1082,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718792,"byte_end":12718795,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718800,"byte_end":12718875,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718880,"byte_end":12718954,"line_start":1085,"line_end":1085,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718959,"byte_end":12719033,"line_start":1086,"line_end":1086,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719038,"byte_end":12719086,"line_start":1087,"line_end":1087,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719091,"byte_end":12719094,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719099,"byte_end":12719173,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719178,"byte_end":12719213,"line_start":1090,"line_end":1090,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719218,"byte_end":12719221,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719226,"byte_end":12719266,"line_start":1092,"line_end":1092,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719271,"byte_end":12719274,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719279,"byte_end":12719293,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719298,"byte_end":12719301,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719306,"byte_end":12719313,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719318,"byte_end":12719344,"line_start":1097,"line_end":1097,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719349,"byte_end":12719352,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719357,"byte_end":12719375,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719380,"byte_end":12719401,"line_start":1100,"line_end":1100,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719406,"byte_end":12719450,"line_start":1101,"line_end":1101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719455,"byte_end":12719458,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719463,"byte_end":12719490,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719495,"byte_end":12719550,"line_start":1104,"line_end":1104,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719555,"byte_end":12719558,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719563,"byte_end":12719625,"line_start":1106,"line_end":1106,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719630,"byte_end":12719664,"line_start":1107,"line_end":1107,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719669,"byte_end":12719672,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719677,"byte_end":12719728,"line_start":1109,"line_end":1109,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719733,"byte_end":12719783,"line_start":1110,"line_end":1110,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719788,"byte_end":12719791,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719796,"byte_end":12719853,"line_start":1112,"line_end":1112,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719858,"byte_end":12719894,"line_start":1113,"line_end":1113,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719899,"byte_end":12719904,"line_start":1114,"line_end":1114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12719909,"byte_end":12719916,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721158,"byte_end":12721165,"line_start":1155,"line_end":1155,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Releases the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Releases the reserved capacity *without* sending a message, returning the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720185,"byte_end":12720262,"line_start":1125,"line_end":1125,"column_start":5,"column_end":82}},{"value":"/ [`Sender`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720267,"byte_end":12720282,"line_start":1126,"line_end":1126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720287,"byte_end":12720290,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720295,"byte_end":12720309,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720314,"byte_end":12720317,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720322,"byte_end":12720329,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720334,"byte_end":12720360,"line_start":1131,"line_end":1131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720365,"byte_end":12720368,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720373,"byte_end":12720391,"line_start":1133,"line_end":1133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720396,"byte_end":12720417,"line_start":1134,"line_end":1134,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720422,"byte_end":12720462,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720467,"byte_end":12720470,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720475,"byte_end":12720523,"line_start":1137,"line_end":1137,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720528,"byte_end":12720591,"line_start":1138,"line_end":1138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720596,"byte_end":12720599,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720604,"byte_end":12720680,"line_start":1140,"line_end":1140,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720685,"byte_end":12720736,"line_start":1141,"line_end":1141,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720741,"byte_end":12720784,"line_start":1142,"line_end":1142,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720789,"byte_end":12720792,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720797,"byte_end":12720873,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720878,"byte_end":12720903,"line_start":1145,"line_end":1145,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720908,"byte_end":12720943,"line_start":1146,"line_end":1146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720948,"byte_end":12720951,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12720956,"byte_end":12721013,"line_start":1148,"line_end":1148,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721018,"byte_end":12721054,"line_start":1149,"line_end":1149,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721059,"byte_end":12721089,"line_start":1150,"line_end":1150,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721094,"byte_end":12721099,"line_start":1151,"line_end":1151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721104,"byte_end":12721111,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721116,"byte_end":12721119,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721124,"byte_end":12721146,"line_start":1154,"line_end":1154,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746489,"byte_end":12746504,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":1894}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746331,"byte_end":12746385,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746386,"byte_end":12746389,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746390,"byte_end":12746422,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746423,"byte_end":12746477,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747297,"byte_end":12747314,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":1903}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746921,"byte_end":12746978,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746979,"byte_end":12746982,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746983,"byte_end":12747015,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747016,"byte_end":12747070,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747071,"byte_end":12747074,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747075,"byte_end":12747157,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747158,"byte_end":12747161,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747162,"byte_end":12747285,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748146,"byte_end":12748163,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747613,"byte_end":12747689,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747690,"byte_end":12747721,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747722,"byte_end":12747725,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747726,"byte_end":12747806,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747807,"byte_end":12747886,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747887,"byte_end":12747900,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747901,"byte_end":12747904,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747905,"byte_end":12747984,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747985,"byte_end":12748061,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748062,"byte_end":12748138,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749926,"byte_end":12749930,"line_start":126,"line_end":126,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748572,"byte_end":12748618,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748623,"byte_end":12748626,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748631,"byte_end":12748703,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748708,"byte_end":12748762,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748767,"byte_end":12748770,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748775,"byte_end":12748794,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748799,"byte_end":12748802,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748807,"byte_end":12748874,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748879,"byte_end":12748948,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748953,"byte_end":12749029,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749034,"byte_end":12749046,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749051,"byte_end":12749054,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749059,"byte_end":12749073,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749078,"byte_end":12749081,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749086,"byte_end":12749093,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749098,"byte_end":12749124,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749129,"byte_end":12749132,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749137,"byte_end":12749155,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749160,"byte_end":12749181,"line_start":98,"line_end":98,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749186,"byte_end":12749239,"line_start":99,"line_end":99,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749244,"byte_end":12749247,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749252,"byte_end":12749285,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749290,"byte_end":12749328,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749333,"byte_end":12749344,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749349,"byte_end":12749352,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749357,"byte_end":12749408,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749413,"byte_end":12749455,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749460,"byte_end":12749465,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749470,"byte_end":12749477,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749482,"byte_end":12749485,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749490,"byte_end":12749514,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749519,"byte_end":12749522,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749527,"byte_end":12749534,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749539,"byte_end":12749565,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749570,"byte_end":12749573,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749578,"byte_end":12749596,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749601,"byte_end":12749622,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749627,"byte_end":12749680,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749685,"byte_end":12749688,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749693,"byte_end":12749727,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749732,"byte_end":12749766,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749771,"byte_end":12749774,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749779,"byte_end":12749830,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749835,"byte_end":12749886,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749891,"byte_end":12749896,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12749901,"byte_end":12749908,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751529,"byte_end":12751537,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750052,"byte_end":12750106,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750111,"byte_end":12750114,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750119,"byte_end":12750190,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750195,"byte_end":12750261,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750266,"byte_end":12750269,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750274,"byte_end":12750342,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750347,"byte_end":12750420,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750425,"byte_end":12750428,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750433,"byte_end":12750502,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750507,"byte_end":12750538,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750543,"byte_end":12750546,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750551,"byte_end":12750611,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750616,"byte_end":12750690,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750695,"byte_end":12750729,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750734,"byte_end":12750774,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750779,"byte_end":12750819,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750824,"byte_end":12750827,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750832,"byte_end":12750846,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750851,"byte_end":12750854,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750859,"byte_end":12750866,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750871,"byte_end":12750897,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750902,"byte_end":12750949,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750954,"byte_end":12750957,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750962,"byte_end":12750980,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12750985,"byte_end":12751006,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751011,"byte_end":12751064,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751069,"byte_end":12751072,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751077,"byte_end":12751111,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751116,"byte_end":12751119,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751124,"byte_end":12751171,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751176,"byte_end":12751236,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751241,"byte_end":12751244,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751249,"byte_end":12751283,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751288,"byte_end":12751341,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751346,"byte_end":12751363,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751368,"byte_end":12751371,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751376,"byte_end":12751423,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751428,"byte_end":12751495,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751500,"byte_end":12751505,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751510,"byte_end":12751517,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752303,"byte_end":12752316,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751618,"byte_end":12751680,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751685,"byte_end":12751688,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751693,"byte_end":12751705,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751710,"byte_end":12751713,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751718,"byte_end":12751785,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751790,"byte_end":12751802,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751807,"byte_end":12751810,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751815,"byte_end":12751829,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751834,"byte_end":12751837,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751842,"byte_end":12751849,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751854,"byte_end":12751874,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751879,"byte_end":12751905,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751910,"byte_end":12751913,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751918,"byte_end":12751936,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751941,"byte_end":12751962,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12751967,"byte_end":12752026,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752031,"byte_end":12752034,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752039,"byte_end":12752086,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752091,"byte_end":12752144,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752149,"byte_end":12752160,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752165,"byte_end":12752168,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752173,"byte_end":12752201,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752206,"byte_end":12752240,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752245,"byte_end":12752250,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752255,"byte_end":12752262,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752267,"byte_end":12752291,"line_start":201,"line_end":201,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752636,"byte_end":12752641,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752399,"byte_end":12752463,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752468,"byte_end":12752471,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752476,"byte_end":12752551,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752556,"byte_end":12752624,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753865,"byte_end":12753874,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752693,"byte_end":12752747,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752752,"byte_end":12752755,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752760,"byte_end":12752784,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752789,"byte_end":12752792,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752797,"byte_end":12752871,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752876,"byte_end":12752924,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752929,"byte_end":12752991,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12752996,"byte_end":12753070,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753075,"byte_end":12753127,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753132,"byte_end":12753135,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753140,"byte_end":12753212,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753217,"byte_end":12753293,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753298,"byte_end":12753374,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753379,"byte_end":12753450,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753455,"byte_end":12753504,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753509,"byte_end":12753512,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753517,"byte_end":12753591,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753596,"byte_end":12753668,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753673,"byte_end":12753746,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753751,"byte_end":12753827,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753832,"byte_end":12753853,"line_start":234,"line_end":234,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754802,"byte_end":12754806,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754114,"byte_end":12754188,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754193,"byte_end":12754196,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754201,"byte_end":12754286,"line_start":247,"line_end":247,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754291,"byte_end":12754372,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754377,"byte_end":12754445,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754450,"byte_end":12754453,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754458,"byte_end":12754531,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754536,"byte_end":12754607,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754612,"byte_end":12754689,"line_start":253,"line_end":253,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754694,"byte_end":12754697,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754702,"byte_end":12754741,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12754746,"byte_end":12754790,"line_start":256,"line_end":256,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756929,"byte_end":12756935,"line_start":332,"line_end":332,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12755844,"byte_end":12755888,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12755893,"byte_end":12755896,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12755901,"byte_end":12755976,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12755981,"byte_end":12756036,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756041,"byte_end":12756044,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756049,"byte_end":12756068,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756073,"byte_end":12756076,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756081,"byte_end":12756156,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756161,"byte_end":12756230,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756235,"byte_end":12756238,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756243,"byte_end":12756257,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756262,"byte_end":12756265,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756270,"byte_end":12756277,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756282,"byte_end":12756308,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756313,"byte_end":12756316,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756321,"byte_end":12756339,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756344,"byte_end":12756365,"line_start":312,"line_end":312,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756370,"byte_end":12756426,"line_start":313,"line_end":313,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756431,"byte_end":12756461,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756466,"byte_end":12756496,"line_start":315,"line_end":315,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756501,"byte_end":12756531,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756536,"byte_end":12756566,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756571,"byte_end":12756604,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756609,"byte_end":12756630,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756635,"byte_end":12756646,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756651,"byte_end":12756654,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756659,"byte_end":12756682,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756687,"byte_end":12756712,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756717,"byte_end":12756742,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756747,"byte_end":12756772,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756777,"byte_end":12756802,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756807,"byte_end":12756831,"line_start":327,"line_end":327,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756836,"byte_end":12756846,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756894,"byte_end":12756899,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756904,"byte_end":12756911,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757633,"byte_end":12757642,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12756989,"byte_end":12757053,"line_start":336,"line_end":336,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757058,"byte_end":12757107,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757112,"byte_end":12757162,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757167,"byte_end":12757170,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757175,"byte_end":12757238,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757243,"byte_end":12757320,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757325,"byte_end":12757328,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757333,"byte_end":12757340,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757345,"byte_end":12757409,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757414,"byte_end":12757443,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757448,"byte_end":12757451,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757456,"byte_end":12757481,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757486,"byte_end":12757516,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757521,"byte_end":12757524,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757529,"byte_end":12757542,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757547,"byte_end":12757575,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757580,"byte_end":12757609,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757614,"byte_end":12757621,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12758090,"byte_end":12758102,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757701,"byte_end":12757758,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757763,"byte_end":12757766,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757771,"byte_end":12757785,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757790,"byte_end":12757793,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757798,"byte_end":12757805,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757810,"byte_end":12757874,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757879,"byte_end":12757905,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757910,"byte_end":12757945,"line_start":365,"line_end":365,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757950,"byte_end":12757953,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12757958,"byte_end":12758024,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12758029,"byte_end":12758066,"line_start":368,"line_end":368,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12758071,"byte_end":12758078,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":3413},{"krate":0,"index":3417},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":3420},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":3442},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":1977},{"krate":0,"index":1979}],"decl_id":null,"docs":" Channel error types.\n","sig":null,"attributes":[{"value":"/ Channel error types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758187,"byte_end":12758211,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758315,"byte_end":12758324,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758251,"byte_end":12758286,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758328,"byte_end":12758333,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758892,"byte_end":12758896,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758760,"byte_end":12758828,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758833,"byte_end":12758887,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758997,"byte_end":12759003,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758906,"byte_end":12758975,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758980,"byte_end":12758992,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758738,"byte_end":12758750,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3425}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758577,"byte_end":12758648,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758649,"byte_end":12758696,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759825,"byte_end":12759830,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3442},"children":[],"decl_id":null,"docs":" This **channel** is currently empty, but the **Sender**(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This **channel** is currently empty, but the **Sender**(s) have not yet","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759689,"byte_end":12759764,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759769,"byte_end":12759820,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759962,"byte_end":12759974,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::mpsc::error::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":3442},"children":[],"decl_id":null,"docs":" The **channel**'s sending half has become disconnected, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The **channel**'s sending half has become disconnected, and there will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759836,"byte_end":12759910,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759915,"byte_end":12759957,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759670,"byte_end":12759682,"line_start":58,"line_end":58,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError { Empty, Disconnected, }","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3445}],"decl_id":null,"docs":" Error returned by `try_recv`.\n","sig":null,"attributes":[{"value":"/ Error returned by `try_recv`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759582,"byte_end":12759615,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760494,"byte_end":12760503,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760341,"byte_end":12760374,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"deprecated(note = \"This type is unused because recv returns an Option.\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760407,"byte_end":12760482,"line_start":83,"line_end":83,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766679,"byte_end":12766684,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762016,"byte_end":12762054,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762055,"byte_end":12762058,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762059,"byte_end":12762127,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762128,"byte_end":12762204,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762205,"byte_end":12762261,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762262,"byte_end":12762265,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762266,"byte_end":12762307,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762308,"byte_end":12762311,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762312,"byte_end":12762392,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762393,"byte_end":12762459,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762460,"byte_end":12762463,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762464,"byte_end":12762538,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762539,"byte_end":12762615,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762616,"byte_end":12762694,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762695,"byte_end":12762775,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762776,"byte_end":12762853,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762854,"byte_end":12762927,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12762928,"byte_end":12763007,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763008,"byte_end":12763039,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763040,"byte_end":12763043,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763044,"byte_end":12763126,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763127,"byte_end":12763207,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763208,"byte_end":12763285,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763286,"byte_end":12763334,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763335,"byte_end":12763338,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763339,"byte_end":12763418,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763419,"byte_end":12763495,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763496,"byte_end":12763573,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763574,"byte_end":12763607,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763608,"byte_end":12763611,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763612,"byte_end":12763687,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763688,"byte_end":12763766,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763767,"byte_end":12763809,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763810,"byte_end":12763813,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763814,"byte_end":12763841,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763842,"byte_end":12763890,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763891,"byte_end":12763969,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763970,"byte_end":12763973,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763974,"byte_end":12763989,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763990,"byte_end":12763993,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12763994,"byte_end":12764012,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764013,"byte_end":12764040,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764041,"byte_end":12764064,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764065,"byte_end":12764068,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764069,"byte_end":12764087,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764088,"byte_end":12764109,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764110,"byte_end":12764154,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764155,"byte_end":12764194,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764195,"byte_end":12764198,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764199,"byte_end":12764232,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764233,"byte_end":12764279,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764280,"byte_end":12764303,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764304,"byte_end":12764315,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764316,"byte_end":12764319,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764320,"byte_end":12764362,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764363,"byte_end":12764382,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764383,"byte_end":12764388,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764389,"byte_end":12764396,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764397,"byte_end":12764400,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764401,"byte_end":12764404,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764405,"byte_end":12764423,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764424,"byte_end":12764451,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764452,"byte_end":12764475,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764476,"byte_end":12764479,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764480,"byte_end":12764498,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764499,"byte_end":12764520,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764521,"byte_end":12764565,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764566,"byte_end":12764569,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764570,"byte_end":12764593,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764594,"byte_end":12764640,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764641,"byte_end":12764678,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764679,"byte_end":12764711,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764712,"byte_end":12764769,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764770,"byte_end":12764801,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764802,"byte_end":12764855,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764856,"byte_end":12764873,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764874,"byte_end":12764889,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764890,"byte_end":12764899,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764900,"byte_end":12764903,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764904,"byte_end":12764918,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764919,"byte_end":12764961,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764962,"byte_end":12764984,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764985,"byte_end":12764998,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12764999,"byte_end":12765008,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765009,"byte_end":12765043,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765044,"byte_end":12765049,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765050,"byte_end":12765057,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765058,"byte_end":12765134,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765135,"byte_end":12765208,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765209,"byte_end":12765224,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765225,"byte_end":12765300,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765301,"byte_end":12765377,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765378,"byte_end":12765430,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765431,"byte_end":12765434,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765435,"byte_end":12765513,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765514,"byte_end":12765594,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765595,"byte_end":12765671,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765672,"byte_end":12765752,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765753,"byte_end":12765833,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765834,"byte_end":12765908,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765909,"byte_end":12765985,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12765986,"byte_end":12766066,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766067,"byte_end":12766136,"line_start":115,"line_end":115,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766137,"byte_end":12766140,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766141,"byte_end":12766220,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766221,"byte_end":12766300,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766301,"byte_end":12766379,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766380,"byte_end":12766441,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766442,"byte_end":12766445,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766446,"byte_end":12766473,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766474,"byte_end":12766511,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766512,"byte_end":12766546,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766547,"byte_end":12766596,"line_start":125,"line_end":125,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766597,"byte_end":12766634,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766635,"byte_end":12766667,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767271,"byte_end":12767281,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":2018}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766839,"byte_end":12766918,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766919,"byte_end":12766941,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766942,"byte_end":12766945,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12766946,"byte_end":12767025,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767026,"byte_end":12767101,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767102,"byte_end":12767135,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767136,"byte_end":12767139,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767140,"byte_end":12767218,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767219,"byte_end":12767259,"line_start":143,"line_end":143,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768156,"byte_end":12768171,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2021}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767413,"byte_end":12767451,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767452,"byte_end":12767455,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767456,"byte_end":12767537,"line_start":152,"line_end":152,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767538,"byte_end":12767618,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767619,"byte_end":12767693,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767694,"byte_end":12767755,"line_start":155,"line_end":155,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767756,"byte_end":12767759,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767760,"byte_end":12767839,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767840,"byte_end":12767919,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767920,"byte_end":12767988,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767989,"byte_end":12767992,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12767993,"byte_end":12768071,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768072,"byte_end":12768112,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768113,"byte_end":12768116,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768117,"byte_end":12768144,"line_start":164,"line_end":164,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768584,"byte_end":12768600,"line_start":177,"line_end":177,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768300,"byte_end":12768393,"line_start":171,"line_end":171,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768394,"byte_end":12768397,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768398,"byte_end":12768460,"line_start":173,"line_end":173,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768461,"byte_end":12768464,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768465,"byte_end":12768512,"line_start":175,"line_end":175,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12768513,"byte_end":12768572,"line_start":176,"line_end":176,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12770001,"byte_end":12770013,"line_start":209,"line_end":209,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769412,"byte_end":12769485,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769486,"byte_end":12769522,"line_start":195,"line_end":195,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769523,"byte_end":12769526,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769527,"byte_end":12769605,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769606,"byte_end":12769609,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769610,"byte_end":12769687,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769688,"byte_end":12769715,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769716,"byte_end":12769719,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769720,"byte_end":12769797,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769798,"byte_end":12769819,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769820,"byte_end":12769823,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769824,"byte_end":12769864,"line_start":205,"line_end":205,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769865,"byte_end":12769917,"line_start":206,"line_end":206,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769918,"byte_end":12769972,"line_start":207,"line_end":207,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771260,"byte_end":12771263,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771037,"byte_end":12771095,"line_start":244,"line_end":244,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771100,"byte_end":12771103,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771108,"byte_end":12771122,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771127,"byte_end":12771130,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771135,"byte_end":12771142,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771147,"byte_end":12771174,"line_start":249,"line_end":249,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771179,"byte_end":12771182,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771187,"byte_end":12771216,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771221,"byte_end":12771228,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771233,"byte_end":12771248,"line_start":253,"line_end":253,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773661,"byte_end":12773665,"line_start":338,"line_end":338,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired.  When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12772982,"byte_end":12773056,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ been acquired.  When the lock has been acquired, function returns a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773061,"byte_end":12773132,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ [`MutexGuard`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773137,"byte_end":12773156,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773161,"byte_end":12773164,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773169,"byte_end":12773188,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773193,"byte_end":12773196,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773201,"byte_end":12773274,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock` makes you lose your place in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773279,"byte_end":12773355,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773360,"byte_end":12773374,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773379,"byte_end":12773382,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773387,"byte_end":12773401,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773406,"byte_end":12773409,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773414,"byte_end":12773421,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773426,"byte_end":12773453,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773458,"byte_end":12773461,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773466,"byte_end":12773484,"line_start":330,"line_end":330,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773489,"byte_end":12773510,"line_start":331,"line_end":331,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773515,"byte_end":12773549,"line_start":332,"line_end":332,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773554,"byte_end":12773557,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773562,"byte_end":12773601,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773606,"byte_end":12773621,"line_start":335,"line_end":335,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773626,"byte_end":12773631,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12773636,"byte_end":12773643,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776159,"byte_end":12776172,"line_start":415,"line_end":415,"column_start":12,"column_end":25},"name":"blocking_lock","qualname":"<Mutex<T>>::blocking_lock","value":"pub fn blocking_lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `Mutex`. When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Blockingly locks this `Mutex`. When the lock has been acquired, function returns a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774467,"byte_end":12774553,"line_start":367,"line_end":367,"column_start":5,"column_end":91}},{"value":"/ [`MutexGuard`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774558,"byte_end":12774577,"line_start":368,"line_end":368,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774582,"byte_end":12774585,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774590,"byte_end":12774641,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/ need to use this mutex in asynchronous code as well as in synchronous code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774646,"byte_end":12774725,"line_start":371,"line_end":371,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774730,"byte_end":12774733,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774738,"byte_end":12774750,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774755,"byte_end":12774758,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774763,"byte_end":12774839,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774844,"byte_end":12774847,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774852,"byte_end":12774929,"line_start":377,"line_end":377,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12774934,"byte_end":12775005,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775010,"byte_end":12775081,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775086,"byte_end":12775154,"line_start":380,"line_end":380,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775159,"byte_end":12775222,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775227,"byte_end":12775230,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775235,"byte_end":12775249,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775254,"byte_end":12775257,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775262,"byte_end":12775269,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775274,"byte_end":12775297,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775302,"byte_end":12775329,"line_start":387,"line_end":387,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775334,"byte_end":12775337,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775342,"byte_end":12775360,"line_start":389,"line_end":389,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775365,"byte_end":12775386,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     let mutex =  Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775391,"byte_end":12775436,"line_start":391,"line_end":391,"column_start":5,"column_end":50}},{"value":"/     let lock = mutex.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775441,"byte_end":12775479,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775484,"byte_end":12775487,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/     let mutex1 = Arc::clone(&mutex);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775492,"byte_end":12775532,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775537,"byte_end":12775602,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/         // This shall block until the `lock` is released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775607,"byte_end":12775668,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/         let mut n = mutex1.blocking_lock();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775673,"byte_end":12775720,"line_start":397,"line_end":397,"column_start":5,"column_end":52}},{"value":"/         *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775725,"byte_end":12775744,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775749,"byte_end":12775760,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775765,"byte_end":12775768,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*lock, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775773,"byte_end":12775802,"line_start":401,"line_end":401,"column_start":5,"column_end":34}},{"value":"/     // Release the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775807,"byte_end":12775835,"line_start":402,"line_end":402,"column_start":5,"column_end":33}},{"value":"/     drop(lock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775840,"byte_end":12775859,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775864,"byte_end":12775867,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775872,"byte_end":12775925,"line_start":405,"line_end":405,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775930,"byte_end":12775967,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775972,"byte_end":12775975,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12775980,"byte_end":12776010,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/     let n = mutex.try_lock().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776015,"byte_end":12776057,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(*n, 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776062,"byte_end":12776088,"line_start":410,"line_end":410,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776093,"byte_end":12776098,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776103,"byte_end":12776106,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776111,"byte_end":12776118,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776123,"byte_end":12776147,"line_start":414,"line_end":414,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777404,"byte_end":12777414,"line_start":451,"line_end":451,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776259,"byte_end":12776333,"line_start":419,"line_end":419,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776338,"byte_end":12776405,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776410,"byte_end":12776434,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776439,"byte_end":12776442,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776447,"byte_end":12776520,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776525,"byte_end":12776598,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776603,"byte_end":12776674,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776679,"byte_end":12776754,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776759,"byte_end":12776801,"line_start":427,"line_end":427,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776806,"byte_end":12776809,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776814,"byte_end":12776833,"line_start":429,"line_end":429,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776838,"byte_end":12776841,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776846,"byte_end":12776919,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock_owned` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12776924,"byte_end":12776997,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777002,"byte_end":12777025,"line_start":433,"line_end":433,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777030,"byte_end":12777033,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777038,"byte_end":12777052,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777057,"byte_end":12777060,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777065,"byte_end":12777072,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777077,"byte_end":12777104,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777109,"byte_end":12777132,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777137,"byte_end":12777140,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777145,"byte_end":12777163,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777168,"byte_end":12777189,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777194,"byte_end":12777238,"line_start":443,"line_end":443,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777243,"byte_end":12777246,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777251,"byte_end":12777304,"line_start":445,"line_end":445,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777309,"byte_end":12777324,"line_start":446,"line_end":446,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777329,"byte_end":12777334,"line_start":447,"line_end":447,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777339,"byte_end":12777346,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777351,"byte_end":12777354,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12777359,"byte_end":12777386,"line_start":450,"line_end":450,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779079,"byte_end":12779087,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778611,"byte_end":12778680,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778685,"byte_end":12778727,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778732,"byte_end":12778735,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778740,"byte_end":12778774,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778779,"byte_end":12778793,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778798,"byte_end":12778801,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778806,"byte_end":12778813,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778818,"byte_end":12778845,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778850,"byte_end":12778913,"line_start":499,"line_end":499,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778918,"byte_end":12778921,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778926,"byte_end":12778956,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778961,"byte_end":12778964,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12778969,"byte_end":12778999,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779004,"byte_end":12779026,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779031,"byte_end":12779043,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779048,"byte_end":12779055,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779060,"byte_end":12779067,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780268,"byte_end":12780275,"line_start":546,"line_end":546,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779797,"byte_end":12779852,"line_start":529,"line_end":529,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779857,"byte_end":12779860,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779865,"byte_end":12779940,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12779945,"byte_end":12780019,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780024,"byte_end":12780027,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780032,"byte_end":12780046,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780051,"byte_end":12780054,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780059,"byte_end":12780066,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780071,"byte_end":12780098,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780103,"byte_end":12780106,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780111,"byte_end":12780126,"line_start":539,"line_end":539,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780131,"byte_end":12780169,"line_start":540,"line_end":540,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780174,"byte_end":12780177,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780182,"byte_end":12780214,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780219,"byte_end":12780234,"line_start":543,"line_end":543,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780239,"byte_end":12780244,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780249,"byte_end":12780256,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781356,"byte_end":12781370,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780444,"byte_end":12780518,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780523,"byte_end":12780560,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780565,"byte_end":12780568,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780573,"byte_end":12780641,"line_start":556,"line_end":556,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780646,"byte_end":12780719,"line_start":557,"line_end":557,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780724,"byte_end":12780800,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780805,"byte_end":12780879,"line_start":559,"line_end":559,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780884,"byte_end":12780932,"line_start":560,"line_end":560,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780937,"byte_end":12780940,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780945,"byte_end":12780979,"line_start":562,"line_end":562,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12780984,"byte_end":12781011,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781016,"byte_end":12781030,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781035,"byte_end":12781038,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781043,"byte_end":12781050,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781055,"byte_end":12781082,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781087,"byte_end":12781110,"line_start":568,"line_end":568,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781115,"byte_end":12781178,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781183,"byte_end":12781186,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781191,"byte_end":12781231,"line_start":571,"line_end":571,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781236,"byte_end":12781239,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781244,"byte_end":12781288,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781293,"byte_end":12781315,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781320,"byte_end":12781332,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12781337,"byte_end":12781344,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782531,"byte_end":12782541,"line_start":615,"line_end":615,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782198,"byte_end":12782252,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782257,"byte_end":12782271,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782276,"byte_end":12782279,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782284,"byte_end":12782291,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782296,"byte_end":12782323,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782328,"byte_end":12782331,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782336,"byte_end":12782354,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782359,"byte_end":12782380,"line_start":608,"line_end":608,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782385,"byte_end":12782419,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782424,"byte_end":12782427,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782432,"byte_end":12782467,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782472,"byte_end":12782497,"line_start":612,"line_end":612,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782502,"byte_end":12782507,"line_start":613,"line_end":613,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782512,"byte_end":12782519,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784276,"byte_end":12784279,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783290,"byte_end":12783362,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783367,"byte_end":12783370,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783375,"byte_end":12783463,"line_start":657,"line_end":657,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783468,"byte_end":12783471,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783476,"byte_end":12783568,"line_start":659,"line_end":659,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783573,"byte_end":12783658,"line_start":660,"line_end":660,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783663,"byte_end":12783666,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783671,"byte_end":12783685,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783690,"byte_end":12783693,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783698,"byte_end":12783705,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783710,"byte_end":12783751,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783756,"byte_end":12783759,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783764,"byte_end":12783812,"line_start":667,"line_end":667,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783817,"byte_end":12783837,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783842,"byte_end":12783845,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783850,"byte_end":12783870,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783875,"byte_end":12783898,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783903,"byte_end":12783936,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783941,"byte_end":12783944,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783949,"byte_end":12783954,"line_start":674,"line_end":674,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783959,"byte_end":12784032,"line_start":675,"line_end":675,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784037,"byte_end":12784057,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784062,"byte_end":12784067,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784072,"byte_end":12784075,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784080,"byte_end":12784122,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784127,"byte_end":12784134,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784139,"byte_end":12784146,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784151,"byte_end":12784154,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784159,"byte_end":12784196,"line_start":683,"line_end":683,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784201,"byte_end":12784250,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784255,"byte_end":12784264,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785735,"byte_end":12785742,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784611,"byte_end":12784698,"line_start":700,"line_end":700,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784703,"byte_end":12784764,"line_start":701,"line_end":701,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784769,"byte_end":12784772,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784777,"byte_end":12784865,"line_start":703,"line_end":703,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784870,"byte_end":12784873,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784878,"byte_end":12784967,"line_start":705,"line_end":705,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12784972,"byte_end":12785064,"line_start":706,"line_end":706,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785069,"byte_end":12785072,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785077,"byte_end":12785091,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785096,"byte_end":12785099,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785104,"byte_end":12785111,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785116,"byte_end":12785157,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785162,"byte_end":12785165,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785170,"byte_end":12785218,"line_start":713,"line_end":713,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785223,"byte_end":12785243,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785248,"byte_end":12785251,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785256,"byte_end":12785276,"line_start":716,"line_end":716,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785281,"byte_end":12785304,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785309,"byte_end":12785342,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785347,"byte_end":12785350,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785355,"byte_end":12785360,"line_start":720,"line_end":720,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785365,"byte_end":12785447,"line_start":721,"line_end":721,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785452,"byte_end":12785491,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785496,"byte_end":12785516,"line_start":723,"line_end":723,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785521,"byte_end":12785526,"line_start":724,"line_end":724,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785531,"byte_end":12785534,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785539,"byte_end":12785581,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785586,"byte_end":12785593,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785598,"byte_end":12785605,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785610,"byte_end":12785613,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785618,"byte_end":12785655,"line_start":730,"line_end":730,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785660,"byte_end":12785709,"line_start":731,"line_end":731,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12785714,"byte_end":12785723,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786901,"byte_end":12786906,"line_start":772,"line_end":772,"column_start":12,"column_end":17},"name":"mutex","qualname":"<MutexGuard>::mutex","value":"pub fn mutex(&Self) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Mutex`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Mutex`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786188,"byte_end":12786236,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786241,"byte_end":12786244,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786249,"byte_end":12786256,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786261,"byte_end":12786302,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786307,"byte_end":12786310,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock<'l>(guard: MutexGuard<'l, u32>) -> MutexGuard<'l, u32> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786315,"byte_end":12786402,"line_start":755,"line_end":755,"column_start":5,"column_end":92}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786407,"byte_end":12786453,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/     let mutex = MutexGuard::mutex(&guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786458,"byte_end":12786504,"line_start":757,"line_end":757,"column_start":5,"column_end":51}},{"value":"/     drop(guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786509,"byte_end":12786529,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786534,"byte_end":12786573,"line_start":759,"line_end":759,"column_start":5,"column_end":44}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786578,"byte_end":12786624,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786629,"byte_end":12786642,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786647,"byte_end":12786652,"line_start":762,"line_end":762,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786657,"byte_end":12786662,"line_start":763,"line_end":763,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786667,"byte_end":12786687,"line_start":764,"line_end":764,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786692,"byte_end":12786715,"line_start":765,"line_end":765,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Mutex::new(0u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786720,"byte_end":12786759,"line_start":766,"line_end":766,"column_start":5,"column_end":44}},{"value":"/ #     let guard = mutex.lock().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786764,"byte_end":12786805,"line_start":767,"line_end":767,"column_start":5,"column_end":46}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786810,"byte_end":12786851,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786856,"byte_end":12786863,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786868,"byte_end":12786875,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786880,"byte_end":12786889,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788852,"byte_end":12788857,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"mutex","qualname":"<OwnedMutexGuard<T>>::mutex","value":"pub fn mutex(&Self) -> &Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Arc<Mutex>`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Arc<Mutex>`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788051,"byte_end":12788104,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788109,"byte_end":12788112,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788117,"byte_end":12788124,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788129,"byte_end":12788152,"line_start":821,"line_end":821,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Mutex, OwnedMutexGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788157,"byte_end":12788203,"line_start":822,"line_end":822,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788208,"byte_end":12788211,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock(guard: OwnedMutexGuard<u32>) -> OwnedMutexGuard<u32> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788216,"byte_end":12788301,"line_start":824,"line_end":824,"column_start":5,"column_end":90}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788306,"byte_end":12788352,"line_start":825,"line_end":825,"column_start":5,"column_end":51}},{"value":"/     let mutex: Arc<Mutex<u32>> = OwnedMutexGuard::mutex(&guard).clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788357,"byte_end":12788433,"line_start":826,"line_end":826,"column_start":5,"column_end":81}},{"value":"/     drop(guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788438,"byte_end":12788458,"line_start":827,"line_end":827,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788463,"byte_end":12788508,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788513,"byte_end":12788559,"line_start":829,"line_end":829,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788564,"byte_end":12788577,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788582,"byte_end":12788587,"line_start":831,"line_end":831,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788592,"byte_end":12788597,"line_start":832,"line_end":832,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788602,"byte_end":12788622,"line_start":833,"line_end":833,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788627,"byte_end":12788650,"line_start":834,"line_end":834,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Arc::new(Mutex::new(0u32));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788655,"byte_end":12788704,"line_start":835,"line_end":835,"column_start":5,"column_end":54}},{"value":"/ #     let guard = mutex.lock_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788709,"byte_end":12788756,"line_start":836,"line_end":836,"column_start":5,"column_end":52}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788761,"byte_end":12788802,"line_start":837,"line_end":837,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788807,"byte_end":12788814,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788819,"byte_end":12788826,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788831,"byte_end":12788840,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790487,"byte_end":12790490,"line_start":896,"line_end":896,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790019,"byte_end":12790091,"line_start":887,"line_end":887,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790096,"byte_end":12790099,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790104,"byte_end":12790198,"line_start":889,"line_end":889,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790203,"byte_end":12790206,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790211,"byte_end":12790302,"line_start":891,"line_end":891,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790307,"byte_end":12790399,"line_start":892,"line_end":892,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790404,"byte_end":12790407,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790412,"byte_end":12790461,"line_start":894,"line_end":894,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790466,"byte_end":12790475,"line_start":895,"line_end":895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791369,"byte_end":12791376,"line_start":920,"line_end":920,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790816,"byte_end":12790903,"line_start":910,"line_end":910,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790908,"byte_end":12790969,"line_start":911,"line_end":911,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790974,"byte_end":12790977,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12790982,"byte_end":12791076,"line_start":913,"line_end":913,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791081,"byte_end":12791084,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791089,"byte_end":12791184,"line_start":915,"line_end":915,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791189,"byte_end":12791281,"line_start":916,"line_end":916,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791286,"byte_end":12791289,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791294,"byte_end":12791343,"line_start":918,"line_end":918,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791348,"byte_end":12791357,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796374,"byte_end":12796380,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470}],"decl_id":null,"docs":" Notifies a single task to wake up.","sig":null,"attributes":[{"value":"/ Notifies a single task to wake up.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793431,"byte_end":12793469,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793470,"byte_end":12793473,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793474,"byte_end":12793550,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793551,"byte_end":12793631,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793632,"byte_end":12793673,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793674,"byte_end":12793677,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793678,"byte_end":12793752,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793753,"byte_end":12793838,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793839,"byte_end":12793905,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793906,"byte_end":12793909,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793910,"byte_end":12793968,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12793969,"byte_end":12794049,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794050,"byte_end":12794130,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794131,"byte_end":12794214,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794215,"byte_end":12794265,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794266,"byte_end":12794269,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794270,"byte_end":12794354,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794355,"byte_end":12794430,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794431,"byte_end":12794501,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794502,"byte_end":12794505,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794506,"byte_end":12794590,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794591,"byte_end":12794664,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794665,"byte_end":12794736,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794737,"byte_end":12794740,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794741,"byte_end":12794755,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794756,"byte_end":12794759,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794760,"byte_end":12794776,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794777,"byte_end":12794780,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794781,"byte_end":12794788,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794789,"byte_end":12794817,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794818,"byte_end":12794841,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794842,"byte_end":12794845,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794846,"byte_end":12794864,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794865,"byte_end":12794886,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794887,"byte_end":12794932,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794933,"byte_end":12794970,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794971,"byte_end":12794974,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12794975,"byte_end":12795021,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795022,"byte_end":12795059,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795060,"byte_end":12795106,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795107,"byte_end":12795118,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795119,"byte_end":12795122,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795123,"byte_end":12795164,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795165,"byte_end":12795193,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795194,"byte_end":12795197,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Wait for task to receive notification.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795198,"byte_end":12795247,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/     handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795248,"byte_end":12795278,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795279,"byte_end":12795284,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795285,"byte_end":12795292,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795293,"byte_end":12795296,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795297,"byte_end":12795322,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795323,"byte_end":12795326,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795327,"byte_end":12795334,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795335,"byte_end":12795363,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795364,"byte_end":12795367,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795368,"byte_end":12795403,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795404,"byte_end":12795429,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795430,"byte_end":12795433,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795434,"byte_end":12795457,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795458,"byte_end":12795493,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795494,"byte_end":12795517,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795518,"byte_end":12795523,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795524,"byte_end":12795527,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795528,"byte_end":12795552,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795553,"byte_end":12795591,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795592,"byte_end":12795631,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795632,"byte_end":12795666,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795667,"byte_end":12795670,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795671,"byte_end":12795726,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795727,"byte_end":12795764,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795765,"byte_end":12795774,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795775,"byte_end":12795778,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795779,"byte_end":12795818,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795819,"byte_end":12795837,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795838,"byte_end":12795869,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795870,"byte_end":12795948,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795949,"byte_end":12795982,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12795983,"byte_end":12796000,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796001,"byte_end":12796004,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796005,"byte_end":12796055,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796056,"byte_end":12796101,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796102,"byte_end":12796115,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796116,"byte_end":12796125,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796126,"byte_end":12796131,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796132,"byte_end":12796139,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796140,"byte_end":12796143,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796144,"byte_end":12796173,"line_start":109,"line_end":109,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796174,"byte_end":12796215,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796216,"byte_end":12796260,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796261,"byte_end":12796303,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12796304,"byte_end":12796345,"line_start":113,"line_end":113,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797242,"byte_end":12797250,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494}],"decl_id":null,"docs":" Future returned from [`Notify::notified()`]\n","sig":null,"attributes":[{"value":"/ Future returned from [`Notify::notified()`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797166,"byte_end":12797213,"line_start":147,"line_end":147,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798712,"byte_end":12798715,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798508,"byte_end":12798564,"line_start":204,"line_end":204,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798569,"byte_end":12798572,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798577,"byte_end":12798591,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798596,"byte_end":12798599,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798604,"byte_end":12798611,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798616,"byte_end":12798644,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798649,"byte_end":12798652,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798657,"byte_end":12798688,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798693,"byte_end":12798700,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800646,"byte_end":12800654,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799369,"byte_end":12799397,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799402,"byte_end":12799405,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799410,"byte_end":12799428,"line_start":240,"line_end":240,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799433,"byte_end":12799436,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799441,"byte_end":12799454,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799459,"byte_end":12799488,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799493,"byte_end":12799500,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799505,"byte_end":12799508,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799513,"byte_end":12799589,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799594,"byte_end":12799672,"line_start":247,"line_end":247,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799677,"byte_end":12799752,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799757,"byte_end":12799830,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799835,"byte_end":12799838,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799843,"byte_end":12799883,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799888,"byte_end":12799891,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799896,"byte_end":12799915,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799920,"byte_end":12799923,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute notifications in the order","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12799928,"byte_end":12800004,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/ they were requested. Cancelling a call to `notified` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800009,"byte_end":12800085,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800090,"byte_end":12800113,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800118,"byte_end":12800121,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800126,"byte_end":12800140,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800145,"byte_end":12800148,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800153,"byte_end":12800160,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800165,"byte_end":12800193,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800198,"byte_end":12800221,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800226,"byte_end":12800229,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800234,"byte_end":12800252,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800257,"byte_end":12800278,"line_start":266,"line_end":266,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800283,"byte_end":12800328,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800333,"byte_end":12800370,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800375,"byte_end":12800378,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800383,"byte_end":12800416,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800421,"byte_end":12800458,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800463,"byte_end":12800509,"line_start":272,"line_end":272,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800514,"byte_end":12800525,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800530,"byte_end":12800533,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800538,"byte_end":12800579,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800584,"byte_end":12800612,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800617,"byte_end":12800622,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12800627,"byte_end":12800634,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802431,"byte_end":12802441,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task.","sig":null,"attributes":[{"value":"/ Notifies a waiting task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801179,"byte_end":12801207,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801212,"byte_end":12801215,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801220,"byte_end":12801291,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801296,"byte_end":12801364,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801369,"byte_end":12801445,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801450,"byte_end":12801495,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801500,"byte_end":12801503,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801508,"byte_end":12801582,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801587,"byte_end":12801665,"line_start":303,"line_end":303,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801670,"byte_end":12801742,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801747,"byte_end":12801761,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801766,"byte_end":12801769,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801774,"byte_end":12801818,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801823,"byte_end":12801826,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801831,"byte_end":12801845,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801850,"byte_end":12801853,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801858,"byte_end":12801865,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801870,"byte_end":12801898,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801903,"byte_end":12801926,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801931,"byte_end":12801934,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801939,"byte_end":12801957,"line_start":315,"line_end":315,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801962,"byte_end":12801983,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12801988,"byte_end":12802033,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802038,"byte_end":12802075,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802080,"byte_end":12802083,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802088,"byte_end":12802121,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802126,"byte_end":12802163,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802168,"byte_end":12802214,"line_start":322,"line_end":322,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802219,"byte_end":12802230,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802235,"byte_end":12802238,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802243,"byte_end":12802284,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802289,"byte_end":12802317,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802322,"byte_end":12802327,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12802332,"byte_end":12802339,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804777,"byte_end":12804791,"line_start":397,"line_end":397,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks.","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803684,"byte_end":12803715,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803720,"byte_end":12803723,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803728,"byte_end":12803798,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803803,"byte_end":12803873,"line_start":368,"line_end":368,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803878,"byte_end":12803945,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12803950,"byte_end":12804021,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804026,"byte_end":12804102,"line_start":371,"line_end":371,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804107,"byte_end":12804110,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804115,"byte_end":12804129,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804134,"byte_end":12804137,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804142,"byte_end":12804149,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804154,"byte_end":12804182,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804187,"byte_end":12804210,"line_start":377,"line_end":377,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804215,"byte_end":12804218,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804223,"byte_end":12804241,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804246,"byte_end":12804267,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804272,"byte_end":12804317,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804322,"byte_end":12804359,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804364,"byte_end":12804367,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804372,"byte_end":12804414,"line_start":384,"line_end":384,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804419,"byte_end":12804461,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804466,"byte_end":12804469,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804474,"byte_end":12804520,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804525,"byte_end":12804571,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804576,"byte_end":12804613,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804618,"byte_end":12804629,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804634,"byte_end":12804637,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804642,"byte_end":12804666,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804671,"byte_end":12804695,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804700,"byte_end":12804743,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804748,"byte_end":12804753,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12804758,"byte_end":12804765,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":2301},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":3545},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2362},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2402}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817564,"byte_end":12817631,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817632,"byte_end":12817700,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817701,"byte_end":12817767,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817768,"byte_end":12817771,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817772,"byte_end":12817838,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817839,"byte_end":12817910,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817911,"byte_end":12817914,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817915,"byte_end":12817961,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817962,"byte_end":12817965,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Since the `send` method is not async, it can be used anywhere. This includes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12817966,"byte_end":12818046,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ sending between two runtimes, and using it from non-async code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818047,"byte_end":12818114,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818115,"byte_end":12818118,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818119,"byte_end":12818133,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818134,"byte_end":12818137,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818138,"byte_end":12818145,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818146,"byte_end":12818175,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818176,"byte_end":12818179,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818180,"byte_end":12818198,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818199,"byte_end":12818220,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818221,"byte_end":12818263,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818264,"byte_end":12818267,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818268,"byte_end":12818301,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818302,"byte_end":12818342,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818343,"byte_end":12818392,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818393,"byte_end":12818406,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818407,"byte_end":12818418,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818419,"byte_end":12818422,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818423,"byte_end":12818447,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818448,"byte_end":12818495,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818496,"byte_end":12818549,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818550,"byte_end":12818559,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818560,"byte_end":12818565,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818566,"byte_end":12818573,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818574,"byte_end":12818577,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818578,"byte_end":12818651,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818652,"byte_end":12818677,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818678,"byte_end":12818681,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818682,"byte_end":12818689,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818690,"byte_end":12818719,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818720,"byte_end":12818723,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818724,"byte_end":12818742,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818743,"byte_end":12818764,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818765,"byte_end":12818814,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818815,"byte_end":12818818,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818819,"byte_end":12818852,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818853,"byte_end":12818874,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818875,"byte_end":12818886,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818887,"byte_end":12818890,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818891,"byte_end":12818915,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818916,"byte_end":12818967,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12818968,"byte_end":12819021,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819022,"byte_end":12819031,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819032,"byte_end":12819037,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819038,"byte_end":12819045,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819046,"byte_end":12819049,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To use a oneshot channel in a `tokio::select!` loop, add `&mut` in front of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819050,"byte_end":12819129,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819130,"byte_end":12819146,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819147,"byte_end":12819150,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819151,"byte_end":12819158,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819159,"byte_end":12819188,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819189,"byte_end":12819238,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819239,"byte_end":12819242,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819243,"byte_end":12819261,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819262,"byte_end":12819286,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819287,"byte_end":12819355,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819356,"byte_end":12819377,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819378,"byte_end":12819428,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819429,"byte_end":12819493,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819494,"byte_end":12819497,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819498,"byte_end":12819520,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819521,"byte_end":12819554,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819555,"byte_end":12819603,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819604,"byte_end":12819648,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819649,"byte_end":12819660,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819661,"byte_end":12819664,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819665,"byte_end":12819679,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819680,"byte_end":12819708,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819709,"byte_end":12819774,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819775,"byte_end":12819811,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819812,"byte_end":12819874,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819875,"byte_end":12819901,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819902,"byte_end":12819919,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819920,"byte_end":12819933,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819934,"byte_end":12819943,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819944,"byte_end":12819976,"line_start":87,"line_end":87,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819977,"byte_end":12819982,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819983,"byte_end":12819990,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819991,"byte_end":12819994,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12819995,"byte_end":12820068,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820069,"byte_end":12820090,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820091,"byte_end":12820094,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820095,"byte_end":12820102,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820103,"byte_end":12820132,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820133,"byte_end":12820136,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820137,"byte_end":12820160,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820161,"byte_end":12820215,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820216,"byte_end":12820221,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820222,"byte_end":12820252,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820253,"byte_end":12820281,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820282,"byte_end":12820336,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820337,"byte_end":12820394,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820395,"byte_end":12820449,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820450,"byte_end":12820463,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820464,"byte_end":12820473,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820474,"byte_end":12820479,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820480,"byte_end":12820483,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820484,"byte_end":12820502,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820503,"byte_end":12820527,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820528,"byte_end":12820575,"line_start":111,"line_end":111,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820576,"byte_end":12820597,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820598,"byte_end":12820644,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820645,"byte_end":12820648,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820649,"byte_end":12820710,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820711,"byte_end":12820738,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820739,"byte_end":12820742,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820743,"byte_end":12820796,"line_start":118,"line_end":118,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820797,"byte_end":12820802,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12820803,"byte_end":12820810,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823245,"byte_end":12823251,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3510}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821215,"byte_end":12821264,"line_start":136,"line_end":136,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821265,"byte_end":12821268,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821269,"byte_end":12821339,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821340,"byte_end":12821377,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821378,"byte_end":12821381,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821382,"byte_end":12821396,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821397,"byte_end":12821400,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821401,"byte_end":12821408,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821409,"byte_end":12821438,"line_start":144,"line_end":144,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821439,"byte_end":12821442,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821443,"byte_end":12821461,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821462,"byte_end":12821483,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821484,"byte_end":12821526,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821527,"byte_end":12821530,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821531,"byte_end":12821564,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821565,"byte_end":12821605,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821606,"byte_end":12821655,"line_start":152,"line_end":152,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821656,"byte_end":12821669,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821670,"byte_end":12821681,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821682,"byte_end":12821685,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821686,"byte_end":12821710,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821711,"byte_end":12821758,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821759,"byte_end":12821812,"line_start":158,"line_end":158,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821813,"byte_end":12821822,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821823,"byte_end":12821828,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821829,"byte_end":12821836,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821837,"byte_end":12821840,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821841,"byte_end":12821914,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821915,"byte_end":12821940,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821941,"byte_end":12821944,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821945,"byte_end":12821952,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821953,"byte_end":12821982,"line_start":167,"line_end":167,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821983,"byte_end":12821986,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12821987,"byte_end":12822005,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822006,"byte_end":12822027,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822028,"byte_end":12822077,"line_start":171,"line_end":171,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822078,"byte_end":12822081,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822082,"byte_end":12822115,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822116,"byte_end":12822137,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822138,"byte_end":12822149,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822150,"byte_end":12822153,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822154,"byte_end":12822178,"line_start":177,"line_end":177,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822179,"byte_end":12822230,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822231,"byte_end":12822284,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822285,"byte_end":12822294,"line_start":180,"line_end":180,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822295,"byte_end":12822300,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822301,"byte_end":12822308,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822309,"byte_end":12822312,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822313,"byte_end":12822386,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822387,"byte_end":12822408,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822409,"byte_end":12822412,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822413,"byte_end":12822420,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822421,"byte_end":12822450,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822451,"byte_end":12822454,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822455,"byte_end":12822478,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822479,"byte_end":12822533,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822534,"byte_end":12822539,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822540,"byte_end":12822570,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822571,"byte_end":12822599,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822600,"byte_end":12822654,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822655,"byte_end":12822712,"line_start":196,"line_end":196,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822713,"byte_end":12822767,"line_start":197,"line_end":197,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822768,"byte_end":12822781,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822782,"byte_end":12822791,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822792,"byte_end":12822797,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822798,"byte_end":12822801,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822802,"byte_end":12822820,"line_start":202,"line_end":202,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822821,"byte_end":12822845,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822846,"byte_end":12822893,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822894,"byte_end":12822915,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822916,"byte_end":12822962,"line_start":206,"line_end":206,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822963,"byte_end":12822966,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12822967,"byte_end":12823028,"line_start":208,"line_end":208,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823029,"byte_end":12823056,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823057,"byte_end":12823060,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823061,"byte_end":12823114,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823115,"byte_end":12823120,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823121,"byte_end":12823128,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823129,"byte_end":12823132,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: std::option::Option","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823133,"byte_end":12823168,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ [`Option::take`]: std::option::Option::take","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823169,"byte_end":12823216,"line_start":216,"line_end":216,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825660,"byte_end":12825668,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3516}],"decl_id":null,"docs":" Receives a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receives a value from the associated [`Sender`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823381,"byte_end":12823433,"line_start":224,"line_end":224,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823434,"byte_end":12823437,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823438,"byte_end":12823508,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823509,"byte_end":12823546,"line_start":227,"line_end":227,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823547,"byte_end":12823550,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This channel has no `recv` method because the receiver itself implements the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823551,"byte_end":12823631,"line_start":229,"line_end":229,"column_start":1,"column_end":81}},{"value":"/ [`Future`] trait. To receive a value, `.await` the `Receiver` object directly.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823632,"byte_end":12823714,"line_start":230,"line_end":230,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823715,"byte_end":12823718,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: trait@std::future::Future","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823719,"byte_end":12823760,"line_start":232,"line_end":232,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823761,"byte_end":12823764,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823765,"byte_end":12823779,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823780,"byte_end":12823783,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823784,"byte_end":12823791,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823792,"byte_end":12823821,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823822,"byte_end":12823825,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823826,"byte_end":12823844,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823845,"byte_end":12823866,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823867,"byte_end":12823909,"line_start":241,"line_end":241,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823910,"byte_end":12823913,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823914,"byte_end":12823947,"line_start":243,"line_end":243,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823948,"byte_end":12823988,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12823989,"byte_end":12824038,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824039,"byte_end":12824052,"line_start":246,"line_end":246,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824053,"byte_end":12824064,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824065,"byte_end":12824068,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824069,"byte_end":12824093,"line_start":249,"line_end":249,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824094,"byte_end":12824141,"line_start":250,"line_end":250,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824142,"byte_end":12824195,"line_start":251,"line_end":251,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824196,"byte_end":12824205,"line_start":252,"line_end":252,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824206,"byte_end":12824211,"line_start":253,"line_end":253,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824212,"byte_end":12824219,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824220,"byte_end":12824223,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824224,"byte_end":12824297,"line_start":256,"line_end":256,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824298,"byte_end":12824323,"line_start":257,"line_end":257,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824324,"byte_end":12824327,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824328,"byte_end":12824335,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824336,"byte_end":12824365,"line_start":260,"line_end":260,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824366,"byte_end":12824369,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824370,"byte_end":12824388,"line_start":262,"line_end":262,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824389,"byte_end":12824410,"line_start":263,"line_end":263,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824411,"byte_end":12824460,"line_start":264,"line_end":264,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824461,"byte_end":12824464,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824465,"byte_end":12824498,"line_start":266,"line_end":266,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824499,"byte_end":12824520,"line_start":267,"line_end":267,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824521,"byte_end":12824532,"line_start":268,"line_end":268,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824533,"byte_end":12824536,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824537,"byte_end":12824561,"line_start":270,"line_end":270,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824562,"byte_end":12824613,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824614,"byte_end":12824667,"line_start":272,"line_end":272,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824668,"byte_end":12824677,"line_start":273,"line_end":273,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824678,"byte_end":12824683,"line_start":274,"line_end":274,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824684,"byte_end":12824691,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824692,"byte_end":12824695,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ To use a `Receiver` in a `tokio::select!` loop, add `&mut` in front of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824696,"byte_end":12824774,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824775,"byte_end":12824787,"line_start":278,"line_end":278,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824788,"byte_end":12824791,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824792,"byte_end":12824799,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824800,"byte_end":12824829,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824830,"byte_end":12824879,"line_start":282,"line_end":282,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824880,"byte_end":12824883,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824884,"byte_end":12824902,"line_start":284,"line_end":284,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824903,"byte_end":12824927,"line_start":285,"line_end":285,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824928,"byte_end":12824996,"line_start":286,"line_end":286,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12824997,"byte_end":12825018,"line_start":287,"line_end":287,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825019,"byte_end":12825069,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825070,"byte_end":12825134,"line_start":289,"line_end":289,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825135,"byte_end":12825138,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825139,"byte_end":12825161,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825162,"byte_end":12825195,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825196,"byte_end":12825244,"line_start":293,"line_end":293,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825245,"byte_end":12825289,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825290,"byte_end":12825301,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825302,"byte_end":12825305,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825306,"byte_end":12825320,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825321,"byte_end":12825349,"line_start":298,"line_end":298,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825350,"byte_end":12825415,"line_start":299,"line_end":299,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825416,"byte_end":12825452,"line_start":300,"line_end":300,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825453,"byte_end":12825515,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825516,"byte_end":12825542,"line_start":302,"line_end":302,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825543,"byte_end":12825560,"line_start":303,"line_end":303,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825561,"byte_end":12825574,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825575,"byte_end":12825584,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825585,"byte_end":12825617,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825618,"byte_end":12825623,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825624,"byte_end":12825631,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825985,"byte_end":12825990,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2310}],"decl_id":null,"docs":" Oneshot error types.\n","sig":null,"attributes":[{"value":"/ Oneshot error types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12825997,"byte_end":12826021,"line_start":321,"line_end":321,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826163,"byte_end":12826172,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826046,"byte_end":12826111,"line_start":325,"line_end":325,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826394,"byte_end":12826399,"line_start":333,"line_end":333,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3532},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826327,"byte_end":12826385,"line_start":332,"line_end":332,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826488,"byte_end":12826494,"line_start":336,"line_end":336,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3532},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826410,"byte_end":12826479,"line_start":335,"line_end":335,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826304,"byte_end":12826316,"line_start":331,"line_end":331,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":3535}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826194,"byte_end":12826254,"line_start":329,"line_end":329,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829615,"byte_end":12829622,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828783,"byte_end":12828863,"line_start":425,"line_end":425,"column_start":1,"column_end":81}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828864,"byte_end":12828874,"line_start":426,"line_end":426,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828875,"byte_end":12828878,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828879,"byte_end":12828955,"line_start":428,"line_end":428,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828956,"byte_end":12829034,"line_start":429,"line_end":429,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829035,"byte_end":12829081,"line_start":430,"line_end":430,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829082,"byte_end":12829085,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829086,"byte_end":12829132,"line_start":432,"line_end":432,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829133,"byte_end":12829136,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829137,"byte_end":12829151,"line_start":434,"line_end":434,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829152,"byte_end":12829155,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829156,"byte_end":12829163,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829164,"byte_end":12829193,"line_start":437,"line_end":437,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829194,"byte_end":12829197,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829198,"byte_end":12829216,"line_start":439,"line_end":439,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829217,"byte_end":12829238,"line_start":440,"line_end":440,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829239,"byte_end":12829281,"line_start":441,"line_end":441,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829282,"byte_end":12829285,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829286,"byte_end":12829319,"line_start":443,"line_end":443,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829320,"byte_end":12829360,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829361,"byte_end":12829410,"line_start":445,"line_end":445,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829411,"byte_end":12829424,"line_start":446,"line_end":446,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829425,"byte_end":12829436,"line_start":447,"line_end":447,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829437,"byte_end":12829440,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829441,"byte_end":12829465,"line_start":449,"line_end":449,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829466,"byte_end":12829513,"line_start":450,"line_end":450,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829514,"byte_end":12829567,"line_start":451,"line_end":451,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829568,"byte_end":12829577,"line_start":452,"line_end":452,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829578,"byte_end":12829583,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829584,"byte_end":12829591,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12829592,"byte_end":12829607,"line_start":455,"line_end":455,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833727,"byte_end":12833731,"line_start":580,"line_end":580,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832156,"byte_end":12832231,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832236,"byte_end":12832252,"line_start":541,"line_end":541,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832257,"byte_end":12832260,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832265,"byte_end":12832344,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832349,"byte_end":12832424,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832429,"byte_end":12832505,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832510,"byte_end":12832582,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832587,"byte_end":12832600,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832605,"byte_end":12832608,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832613,"byte_end":12832689,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832694,"byte_end":12832770,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832775,"byte_end":12832847,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832852,"byte_end":12832925,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832930,"byte_end":12833004,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833009,"byte_end":12833081,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833086,"byte_end":12833123,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833128,"byte_end":12833131,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833136,"byte_end":12833150,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833155,"byte_end":12833158,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833163,"byte_end":12833195,"line_start":559,"line_end":559,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833200,"byte_end":12833203,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833208,"byte_end":12833215,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833220,"byte_end":12833249,"line_start":562,"line_end":562,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833254,"byte_end":12833257,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833262,"byte_end":12833280,"line_start":564,"line_end":564,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833285,"byte_end":12833306,"line_start":565,"line_end":565,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833311,"byte_end":12833353,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833358,"byte_end":12833361,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833366,"byte_end":12833399,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833404,"byte_end":12833444,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833449,"byte_end":12833498,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833503,"byte_end":12833516,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833521,"byte_end":12833532,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833537,"byte_end":12833540,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833545,"byte_end":12833569,"line_start":574,"line_end":574,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833574,"byte_end":12833621,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833626,"byte_end":12833679,"line_start":576,"line_end":576,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833684,"byte_end":12833693,"line_start":577,"line_end":577,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833698,"byte_end":12833703,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12833708,"byte_end":12833715,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837277,"byte_end":12837283,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835272,"byte_end":12835330,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835335,"byte_end":12835338,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835343,"byte_end":12835417,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835422,"byte_end":12835456,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835461,"byte_end":12835464,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835469,"byte_end":12835534,"line_start":623,"line_end":623,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835539,"byte_end":12835611,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835616,"byte_end":12835619,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835624,"byte_end":12835636,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835641,"byte_end":12835644,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835649,"byte_end":12835697,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835702,"byte_end":12835705,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835710,"byte_end":12835736,"line_start":630,"line_end":630,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835741,"byte_end":12835771,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835776,"byte_end":12835779,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835784,"byte_end":12835798,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835803,"byte_end":12835806,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835811,"byte_end":12835826,"line_start":635,"line_end":635,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835831,"byte_end":12835834,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835839,"byte_end":12835846,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835851,"byte_end":12835880,"line_start":638,"line_end":638,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835885,"byte_end":12835888,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835893,"byte_end":12835911,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835916,"byte_end":12835937,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835942,"byte_end":12835994,"line_start":642,"line_end":642,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12835999,"byte_end":12836002,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836007,"byte_end":12836040,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836045,"byte_end":12836066,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836071,"byte_end":12836082,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836087,"byte_end":12836090,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836095,"byte_end":12836121,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836126,"byte_end":12836167,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836172,"byte_end":12836177,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836182,"byte_end":12836189,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836194,"byte_end":12836197,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836202,"byte_end":12836224,"line_start":653,"line_end":653,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836229,"byte_end":12836232,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836237,"byte_end":12836244,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836249,"byte_end":12836278,"line_start":656,"line_end":656,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836283,"byte_end":12836321,"line_start":657,"line_end":657,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836326,"byte_end":12836329,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836334,"byte_end":12836368,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836373,"byte_end":12836424,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836429,"byte_end":12836454,"line_start":661,"line_end":661,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836459,"byte_end":12836464,"line_start":662,"line_end":662,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836469,"byte_end":12836472,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836477,"byte_end":12836495,"line_start":664,"line_end":664,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836500,"byte_end":12836521,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836526,"byte_end":12836572,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836577,"byte_end":12836580,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836585,"byte_end":12836618,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836623,"byte_end":12836651,"line_start":669,"line_end":669,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836656,"byte_end":12836692,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836697,"byte_end":12836772,"line_start":671,"line_end":671,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836777,"byte_end":12836794,"line_start":672,"line_end":672,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836799,"byte_end":12836837,"line_start":673,"line_end":673,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836842,"byte_end":12836926,"line_start":674,"line_end":674,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12836931,"byte_end":12837014,"line_start":675,"line_end":675,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837019,"byte_end":12837062,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837067,"byte_end":12837084,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837089,"byte_end":12837102,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837107,"byte_end":12837118,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837123,"byte_end":12837126,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837131,"byte_end":12837167,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837172,"byte_end":12837237,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837242,"byte_end":12837247,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837252,"byte_end":12837259,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838618,"byte_end":12838627,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837859,"byte_end":12837933,"line_start":704,"line_end":704,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837938,"byte_end":12837941,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12837946,"byte_end":12838020,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838025,"byte_end":12838059,"line_start":707,"line_end":707,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838064,"byte_end":12838067,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838072,"byte_end":12838147,"line_start":709,"line_end":709,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838152,"byte_end":12838155,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838160,"byte_end":12838186,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838191,"byte_end":12838221,"line_start":712,"line_end":712,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838226,"byte_end":12838229,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838234,"byte_end":12838248,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838253,"byte_end":12838256,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838261,"byte_end":12838268,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838273,"byte_end":12838302,"line_start":717,"line_end":717,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838307,"byte_end":12838310,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838315,"byte_end":12838333,"line_start":719,"line_end":719,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838338,"byte_end":12838359,"line_start":720,"line_end":720,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838364,"byte_end":12838406,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838411,"byte_end":12838414,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838419,"byte_end":12838452,"line_start":723,"line_end":723,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838457,"byte_end":12838460,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838465,"byte_end":12838482,"line_start":725,"line_end":725,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838487,"byte_end":12838490,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838495,"byte_end":12838527,"line_start":727,"line_end":727,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838532,"byte_end":12838584,"line_start":728,"line_end":728,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838589,"byte_end":12838594,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838599,"byte_end":12838606,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12840074,"byte_end":12840085,"line_start":778,"line_end":778,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Checks whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838789,"byte_end":12838870,"line_start":738,"line_end":738,"column_start":5,"column_end":86}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838875,"byte_end":12838958,"line_start":739,"line_end":739,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838963,"byte_end":12838974,"line_start":740,"line_end":740,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838979,"byte_end":12838982,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12838987,"byte_end":12839067,"line_start":742,"line_end":742,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839072,"byte_end":12839106,"line_start":743,"line_end":743,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839111,"byte_end":12839114,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839119,"byte_end":12839202,"line_start":745,"line_end":745,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839207,"byte_end":12839273,"line_start":746,"line_end":746,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839278,"byte_end":12839281,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839286,"byte_end":12839341,"line_start":748,"line_end":748,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839346,"byte_end":12839401,"line_start":749,"line_end":749,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839406,"byte_end":12839409,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839414,"byte_end":12839432,"line_start":751,"line_end":751,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839437,"byte_end":12839440,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839445,"byte_end":12839471,"line_start":753,"line_end":753,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839476,"byte_end":12839479,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839484,"byte_end":12839536,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839541,"byte_end":12839591,"line_start":756,"line_end":756,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839596,"byte_end":12839599,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839604,"byte_end":12839618,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839623,"byte_end":12839626,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839631,"byte_end":12839638,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839643,"byte_end":12839672,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839677,"byte_end":12839680,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839685,"byte_end":12839718,"line_start":763,"line_end":763,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839723,"byte_end":12839726,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839731,"byte_end":12839749,"line_start":765,"line_end":765,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839754,"byte_end":12839775,"line_start":766,"line_end":766,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839780,"byte_end":12839836,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839841,"byte_end":12839844,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839849,"byte_end":12839882,"line_start":769,"line_end":769,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839887,"byte_end":12839910,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839915,"byte_end":12839926,"line_start":771,"line_end":771,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839931,"byte_end":12839934,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839939,"byte_end":12839986,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839991,"byte_end":12839994,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12839999,"byte_end":12840040,"line_start":775,"line_end":775,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12840045,"byte_end":12840050,"line_start":776,"line_end":776,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12840055,"byte_end":12840062,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843667,"byte_end":12843672,"line_start":903,"line_end":903,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841921,"byte_end":12841988,"line_start":844,"line_end":844,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841993,"byte_end":12841996,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842001,"byte_end":12842075,"line_start":846,"line_end":846,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842080,"byte_end":12842148,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842153,"byte_end":12842219,"line_start":848,"line_end":848,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842224,"byte_end":12842238,"line_start":849,"line_end":849,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842243,"byte_end":12842246,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842251,"byte_end":12842327,"line_start":851,"line_end":851,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842332,"byte_end":12842395,"line_start":852,"line_end":852,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842400,"byte_end":12842403,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842408,"byte_end":12842476,"line_start":854,"line_end":854,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842481,"byte_end":12842503,"line_start":855,"line_end":855,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842508,"byte_end":12842511,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842516,"byte_end":12842538,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842543,"byte_end":12842579,"line_start":858,"line_end":858,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842584,"byte_end":12842587,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842592,"byte_end":12842606,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842611,"byte_end":12842614,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842619,"byte_end":12842654,"line_start":862,"line_end":862,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842659,"byte_end":12842662,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842667,"byte_end":12842674,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842679,"byte_end":12842708,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842713,"byte_end":12842763,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842768,"byte_end":12842771,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842776,"byte_end":12842794,"line_start":868,"line_end":868,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842799,"byte_end":12842820,"line_start":869,"line_end":869,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842825,"byte_end":12842871,"line_start":870,"line_end":870,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842876,"byte_end":12842879,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842884,"byte_end":12842917,"line_start":872,"line_end":872,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842922,"byte_end":12842925,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842930,"byte_end":12842949,"line_start":874,"line_end":874,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842954,"byte_end":12842957,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842962,"byte_end":12842994,"line_start":876,"line_end":876,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12842999,"byte_end":12843051,"line_start":877,"line_end":877,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843056,"byte_end":12843059,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843064,"byte_end":12843093,"line_start":879,"line_end":879,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843098,"byte_end":12843141,"line_start":880,"line_end":880,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843146,"byte_end":12843178,"line_start":881,"line_end":881,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843183,"byte_end":12843192,"line_start":882,"line_end":882,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843197,"byte_end":12843202,"line_start":883,"line_end":883,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843207,"byte_end":12843214,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843219,"byte_end":12843222,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843227,"byte_end":12843278,"line_start":886,"line_end":886,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843283,"byte_end":12843286,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843291,"byte_end":12843298,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843303,"byte_end":12843332,"line_start":889,"line_end":889,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843337,"byte_end":12843340,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843345,"byte_end":12843363,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843368,"byte_end":12843389,"line_start":892,"line_end":892,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843394,"byte_end":12843440,"line_start":893,"line_end":893,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843445,"byte_end":12843448,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843453,"byte_end":12843502,"line_start":895,"line_end":895,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843507,"byte_end":12843510,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843515,"byte_end":12843534,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843539,"byte_end":12843542,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843547,"byte_end":12843588,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843593,"byte_end":12843633,"line_start":900,"line_end":900,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843638,"byte_end":12843643,"line_start":901,"line_end":901,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12843648,"byte_end":12843655,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845981,"byte_end":12845989,"line_start":980,"line_end":980,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844096,"byte_end":12844128,"line_start":917,"line_end":917,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844133,"byte_end":12844136,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844141,"byte_end":12844214,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844219,"byte_end":12844285,"line_start":920,"line_end":920,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844290,"byte_end":12844314,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844319,"byte_end":12844322,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844327,"byte_end":12844393,"line_start":923,"line_end":923,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844398,"byte_end":12844420,"line_start":924,"line_end":924,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844425,"byte_end":12844428,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844433,"byte_end":12844445,"line_start":926,"line_end":926,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844450,"byte_end":12844453,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844458,"byte_end":12844509,"line_start":928,"line_end":928,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844514,"byte_end":12844577,"line_start":929,"line_end":929,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844582,"byte_end":12844657,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844662,"byte_end":12844676,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844681,"byte_end":12844684,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844689,"byte_end":12844703,"line_start":933,"line_end":933,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844708,"byte_end":12844711,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844716,"byte_end":12844766,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844771,"byte_end":12844774,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844779,"byte_end":12844786,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844791,"byte_end":12844820,"line_start":938,"line_end":938,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844825,"byte_end":12844875,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844880,"byte_end":12844883,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844888,"byte_end":12844906,"line_start":941,"line_end":941,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844911,"byte_end":12844932,"line_start":942,"line_end":942,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844937,"byte_end":12844983,"line_start":943,"line_end":943,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844988,"byte_end":12844991,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12844996,"byte_end":12845025,"line_start":945,"line_end":945,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845030,"byte_end":12845075,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845080,"byte_end":12845122,"line_start":947,"line_end":947,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845127,"byte_end":12845159,"line_start":948,"line_end":948,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845164,"byte_end":12845173,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845178,"byte_end":12845181,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845186,"byte_end":12845209,"line_start":951,"line_end":951,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845214,"byte_end":12845248,"line_start":952,"line_end":952,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845253,"byte_end":12845256,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845261,"byte_end":12845290,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845295,"byte_end":12845347,"line_start":955,"line_end":955,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845352,"byte_end":12845384,"line_start":956,"line_end":956,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845389,"byte_end":12845398,"line_start":957,"line_end":957,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845403,"byte_end":12845408,"line_start":958,"line_end":958,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845413,"byte_end":12845420,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845425,"byte_end":12845428,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845433,"byte_end":12845494,"line_start":961,"line_end":961,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845499,"byte_end":12845502,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845507,"byte_end":12845514,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845519,"byte_end":12845548,"line_start":964,"line_end":964,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845553,"byte_end":12845603,"line_start":965,"line_end":965,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845608,"byte_end":12845611,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845616,"byte_end":12845634,"line_start":967,"line_end":967,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845639,"byte_end":12845660,"line_start":968,"line_end":968,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845665,"byte_end":12845717,"line_start":969,"line_end":969,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845722,"byte_end":12845725,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845730,"byte_end":12845747,"line_start":971,"line_end":971,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845752,"byte_end":12845755,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845760,"byte_end":12845789,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845794,"byte_end":12845848,"line_start":974,"line_end":974,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845853,"byte_end":12845896,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845901,"byte_end":12845933,"line_start":976,"line_end":976,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845938,"byte_end":12845947,"line_start":977,"line_end":977,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845952,"byte_end":12845957,"line_start":978,"line_end":978,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12845962,"byte_end":12845969,"line_start":979,"line_end":979,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848177,"byte_end":12848190,"line_start":1044,"line_end":1044,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(Self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847502,"byte_end":12847564,"line_start":1018,"line_end":1018,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847569,"byte_end":12847572,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847577,"byte_end":12847589,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847594,"byte_end":12847597,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847602,"byte_end":12847669,"line_start":1022,"line_end":1022,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847674,"byte_end":12847686,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847691,"byte_end":12847694,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847699,"byte_end":12847713,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847718,"byte_end":12847721,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847726,"byte_end":12847733,"line_start":1027,"line_end":1027,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847738,"byte_end":12847758,"line_start":1028,"line_end":1028,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847763,"byte_end":12847792,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847797,"byte_end":12847800,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847805,"byte_end":12847823,"line_start":1031,"line_end":1031,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847828,"byte_end":12847849,"line_start":1032,"line_end":1032,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel::<u8>();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847854,"byte_end":12847902,"line_start":1033,"line_end":1033,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847907,"byte_end":12847910,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847915,"byte_end":12847962,"line_start":1035,"line_end":1035,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Ok(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12847967,"byte_end":12848018,"line_start":1036,"line_end":1036,"column_start":5,"column_end":56}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848023,"byte_end":12848034,"line_start":1037,"line_end":1037,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848039,"byte_end":12848042,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848047,"byte_end":12848075,"line_start":1039,"line_end":1039,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848080,"byte_end":12848114,"line_start":1040,"line_end":1040,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848119,"byte_end":12848124,"line_start":1041,"line_end":1041,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848129,"byte_end":12848136,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848141,"byte_end":12848165,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860904,"byte_end":12860910,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":3551},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860778,"byte_end":12860843,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860848,"byte_end":12860851,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860856,"byte_end":12860899,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860965,"byte_end":12860974,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":3551},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860917,"byte_end":12860960,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860756,"byte_end":12860771,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3554}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860582,"byte_end":12860646,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860647,"byte_end":12860650,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860651,"byte_end":12860718,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861260,"byte_end":12861272,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12860978,"byte_end":12861038,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861039,"byte_end":12861042,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861043,"byte_end":12861109,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861110,"byte_end":12861123,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861124,"byte_end":12861127,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861128,"byte_end":12861171,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12861172,"byte_end":12861231,"line_start":68,"line_end":68,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887479,"byte_end":12887488,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":3567}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12884919,"byte_end":12884985,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12884986,"byte_end":12884989,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12884990,"byte_end":12885065,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885066,"byte_end":12885142,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885143,"byte_end":12885223,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885224,"byte_end":12885233,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885234,"byte_end":12885237,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885238,"byte_end":12885311,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885312,"byte_end":12885391,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885392,"byte_end":12885470,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885471,"byte_end":12885542,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885543,"byte_end":12885546,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885547,"byte_end":12885628,"line_start":19,"line_end":19,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885629,"byte_end":12885708,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885709,"byte_end":12885788,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885789,"byte_end":12885868,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885869,"byte_end":12885948,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885949,"byte_end":12885966,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885967,"byte_end":12885970,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12885971,"byte_end":12886051,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886052,"byte_end":12886064,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886065,"byte_end":12886068,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886069,"byte_end":12886083,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886084,"byte_end":12886087,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886088,"byte_end":12886104,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886105,"byte_end":12886108,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886109,"byte_end":12886116,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886117,"byte_end":12886167,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886168,"byte_end":12886171,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886172,"byte_end":12886190,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886191,"byte_end":12886212,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Semaphore::new(3);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886213,"byte_end":12886255,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886256,"byte_end":12886259,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     let a_permit = semaphore.acquire().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886260,"byte_end":12886318,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     let two_permits = semaphore.acquire_many(2).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886319,"byte_end":12886386,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886387,"byte_end":12886390,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886391,"byte_end":12886444,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886445,"byte_end":12886448,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     let permit_attempt = semaphore.try_acquire();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886449,"byte_end":12886502,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/     assert_eq!(permit_attempt.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886503,"byte_end":12886578,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886579,"byte_end":12886584,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886585,"byte_end":12886592,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886593,"byte_end":12886596,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Use [`Semaphore::acquire_owned`] to move permits across tasks:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886597,"byte_end":12886663,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886664,"byte_end":12886667,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886668,"byte_end":12886675,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886676,"byte_end":12886699,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886700,"byte_end":12886731,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886732,"byte_end":12886735,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886736,"byte_end":12886754,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886755,"byte_end":12886776,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886777,"byte_end":12886829,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886830,"byte_end":12886872,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886873,"byte_end":12886876,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886877,"byte_end":12886900,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886901,"byte_end":12886975,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12886976,"byte_end":12887031,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/             // perform task...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887032,"byte_end":12887066,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887067,"byte_end":12887121,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/             drop(permit);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887122,"byte_end":12887151,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/         }));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887152,"byte_end":12887168,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887169,"byte_end":12887178,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887179,"byte_end":12887182,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     for handle in join_handles {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887183,"byte_end":12887219,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887220,"byte_end":12887254,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887255,"byte_end":12887264,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887265,"byte_end":12887270,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887271,"byte_end":12887278,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887279,"byte_end":12887282,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887283,"byte_end":12887378,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ [`Semaphore::acquire_owned`]: crate::sync::Semaphore::acquire_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887379,"byte_end":12887450,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887824,"byte_end":12887839,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3572},{"krate":0,"index":3573}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887640,"byte_end":12887672,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887673,"byte_end":12887676,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887677,"byte_end":12887728,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887729,"byte_end":12887732,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887733,"byte_end":12887783,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887784,"byte_end":12887795,"line_start":91,"line_end":91,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888100,"byte_end":12888120,"line_start":105,"line_end":105,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887891,"byte_end":12887930,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887931,"byte_end":12887934,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887935,"byte_end":12887992,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887993,"byte_end":12887996,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12887997,"byte_end":12888059,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888060,"byte_end":12888071,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888736,"byte_end":12888739,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888641,"byte_end":12888704,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888709,"byte_end":12888724,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890494,"byte_end":12890511,"line_start":183,"line_end":183,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890430,"byte_end":12890482,"line_start":182,"line_end":182,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890758,"byte_end":12890769,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890581,"byte_end":12890623,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890628,"byte_end":12890631,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890636,"byte_end":12890746,"line_start":189,"line_end":189,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891973,"byte_end":12891980,"line_start":228,"line_end":228,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890832,"byte_end":12890873,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890878,"byte_end":12890881,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890886,"byte_end":12890957,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12890962,"byte_end":12891028,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891033,"byte_end":12891053,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891058,"byte_end":12891061,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891066,"byte_end":12891085,"line_start":200,"line_end":200,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891090,"byte_end":12891093,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891098,"byte_end":12891173,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire` makes you lose your place","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891178,"byte_end":12891254,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891259,"byte_end":12891276,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891281,"byte_end":12891284,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891289,"byte_end":12891303,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891308,"byte_end":12891311,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891316,"byte_end":12891323,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891328,"byte_end":12891359,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891364,"byte_end":12891367,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891372,"byte_end":12891390,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891395,"byte_end":12891416,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891421,"byte_end":12891463,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891468,"byte_end":12891471,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/     let permit_1 = semaphore.acquire().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891476,"byte_end":12891534,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891539,"byte_end":12891592,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891597,"byte_end":12891600,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/     let permit_2 = semaphore.acquire().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891605,"byte_end":12891663,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891668,"byte_end":12891721,"line_start":219,"line_end":219,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891726,"byte_end":12891729,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     drop(permit_1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891734,"byte_end":12891757,"line_start":221,"line_end":221,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891762,"byte_end":12891815,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891820,"byte_end":12891825,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891830,"byte_end":12891837,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891842,"byte_end":12891845,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891850,"byte_end":12891897,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12891902,"byte_end":12891955,"line_start":227,"line_end":227,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893449,"byte_end":12893461,"line_start":275,"line_end":275,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892518,"byte_end":12892562,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892567,"byte_end":12892570,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892575,"byte_end":12892646,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892651,"byte_end":12892717,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892722,"byte_end":12892743,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892748,"byte_end":12892751,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892756,"byte_end":12892775,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892780,"byte_end":12892783,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892788,"byte_end":12892863,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892868,"byte_end":12892943,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892948,"byte_end":12892971,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892976,"byte_end":12892979,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12892984,"byte_end":12892998,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893003,"byte_end":12893006,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893011,"byte_end":12893018,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893023,"byte_end":12893054,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893059,"byte_end":12893062,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893067,"byte_end":12893085,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893090,"byte_end":12893111,"line_start":265,"line_end":265,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893116,"byte_end":12893158,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893163,"byte_end":12893166,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/     let permit = semaphore.acquire_many(3).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893171,"byte_end":12893233,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(semaphore.available_permits(), 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893238,"byte_end":12893291,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893296,"byte_end":12893301,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893306,"byte_end":12893313,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893318,"byte_end":12893321,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893326,"byte_end":12893373,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893378,"byte_end":12893431,"line_start":274,"line_end":274,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895091,"byte_end":12895102,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12893990,"byte_end":12894039,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894044,"byte_end":12894047,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894052,"byte_end":12894132,"line_start":297,"line_end":297,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894137,"byte_end":12894218,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894223,"byte_end":12894296,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894301,"byte_end":12894304,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894309,"byte_end":12894323,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894328,"byte_end":12894331,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894336,"byte_end":12894343,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894348,"byte_end":12894398,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894403,"byte_end":12894406,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894411,"byte_end":12894428,"line_start":306,"line_end":306,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894433,"byte_end":12894471,"line_start":307,"line_end":307,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894476,"byte_end":12894479,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894484,"byte_end":12894536,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894541,"byte_end":12894590,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894595,"byte_end":12894598,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894603,"byte_end":12894655,"line_start":312,"line_end":312,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894660,"byte_end":12894709,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894714,"byte_end":12894717,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894722,"byte_end":12894765,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894770,"byte_end":12894835,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894840,"byte_end":12894847,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894852,"byte_end":12894859,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894864,"byte_end":12894867,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894872,"byte_end":12894941,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12894946,"byte_end":12895021,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895026,"byte_end":12895079,"line_start":322,"line_end":322,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896372,"byte_end":12896388,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895367,"byte_end":12895419,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895424,"byte_end":12895427,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895432,"byte_end":12895512,"line_start":335,"line_end":335,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are not enough permits left.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895517,"byte_end":12895595,"line_start":336,"line_end":336,"column_start":5,"column_end":83}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895600,"byte_end":12895684,"line_start":337,"line_end":337,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895689,"byte_end":12895692,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895697,"byte_end":12895711,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895716,"byte_end":12895719,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895724,"byte_end":12895731,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895736,"byte_end":12895786,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895791,"byte_end":12895794,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895799,"byte_end":12895816,"line_start":344,"line_end":344,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(4);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895821,"byte_end":12895859,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895864,"byte_end":12895867,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire_many(3).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895872,"byte_end":12895930,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895935,"byte_end":12895984,"line_start":348,"line_end":348,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895989,"byte_end":12895992,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12895997,"byte_end":12896046,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896051,"byte_end":12896116,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896121,"byte_end":12896128,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896133,"byte_end":12896140,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896145,"byte_end":12896148,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896153,"byte_end":12896222,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896227,"byte_end":12896302,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896307,"byte_end":12896360,"line_start":357,"line_end":357,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898105,"byte_end":12898118,"line_start":410,"line_end":410,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896661,"byte_end":12896702,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896707,"byte_end":12896710,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896715,"byte_end":12896783,"line_start":370,"line_end":370,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896788,"byte_end":12896859,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896864,"byte_end":12896935,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896940,"byte_end":12896960,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896965,"byte_end":12896968,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896973,"byte_end":12896992,"line_start":375,"line_end":375,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12896997,"byte_end":12897000,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897005,"byte_end":12897080,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_owned` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897085,"byte_end":12897161,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897166,"byte_end":12897189,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897194,"byte_end":12897197,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897202,"byte_end":12897216,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897221,"byte_end":12897224,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897229,"byte_end":12897236,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897241,"byte_end":12897264,"line_start":384,"line_end":384,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897269,"byte_end":12897300,"line_start":385,"line_end":385,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897305,"byte_end":12897308,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897313,"byte_end":12897331,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897336,"byte_end":12897357,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897362,"byte_end":12897414,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897419,"byte_end":12897461,"line_start":390,"line_end":390,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897466,"byte_end":12897469,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897474,"byte_end":12897497,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897502,"byte_end":12897576,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897581,"byte_end":12897636,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897641,"byte_end":12897675,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897680,"byte_end":12897734,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897739,"byte_end":12897768,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897773,"byte_end":12897789,"line_start":398,"line_end":398,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897794,"byte_end":12897803,"line_start":399,"line_end":399,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897808,"byte_end":12897811,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897816,"byte_end":12897852,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897857,"byte_end":12897891,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897896,"byte_end":12897905,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897910,"byte_end":12897915,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897920,"byte_end":12897927,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897932,"byte_end":12897935,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897940,"byte_end":12897967,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12897972,"byte_end":12898019,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898024,"byte_end":12898087,"line_start":409,"line_end":409,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900137,"byte_end":12900155,"line_start":471,"line_end":471,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898678,"byte_end":12898722,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898727,"byte_end":12898730,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898735,"byte_end":12898803,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898808,"byte_end":12898879,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898884,"byte_end":12898955,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898960,"byte_end":12898980,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898985,"byte_end":12898988,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12898993,"byte_end":12899012,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899017,"byte_end":12899020,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899025,"byte_end":12899100,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many_owned` makes you lose","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899105,"byte_end":12899181,"line_start":439,"line_end":439,"column_start":5,"column_end":81}},{"value":"/ your place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899186,"byte_end":12899214,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899219,"byte_end":12899222,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899227,"byte_end":12899241,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899246,"byte_end":12899249,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899254,"byte_end":12899261,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899266,"byte_end":12899289,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899294,"byte_end":12899325,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899330,"byte_end":12899333,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899338,"byte_end":12899356,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899361,"byte_end":12899382,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(10));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899387,"byte_end":12899440,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899445,"byte_end":12899487,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899492,"byte_end":12899495,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899500,"byte_end":12899523,"line_start":453,"line_end":453,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_many_owned(2).await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899528,"byte_end":12899608,"line_start":454,"line_end":454,"column_start":5,"column_end":85}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899613,"byte_end":12899668,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899673,"byte_end":12899707,"line_start":456,"line_end":456,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899712,"byte_end":12899766,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899771,"byte_end":12899800,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899805,"byte_end":12899821,"line_start":459,"line_end":459,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899826,"byte_end":12899835,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899840,"byte_end":12899843,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899848,"byte_end":12899884,"line_start":462,"line_end":462,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899889,"byte_end":12899923,"line_start":463,"line_end":463,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899928,"byte_end":12899937,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899942,"byte_end":12899947,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899952,"byte_end":12899959,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899964,"byte_end":12899967,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12899972,"byte_end":12899999,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900004,"byte_end":12900051,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900056,"byte_end":12900119,"line_start":470,"line_end":470,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902061,"byte_end":12902078,"line_start":525,"line_end":525,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900751,"byte_end":12900800,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900805,"byte_end":12900808,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900813,"byte_end":12900884,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900889,"byte_end":12900966,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12900971,"byte_end":12901041,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901046,"byte_end":12901117,"line_start":498,"line_end":498,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901122,"byte_end":12901142,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901147,"byte_end":12901150,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901155,"byte_end":12901169,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901174,"byte_end":12901177,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901182,"byte_end":12901189,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901194,"byte_end":12901217,"line_start":504,"line_end":504,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901222,"byte_end":12901272,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901277,"byte_end":12901280,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901285,"byte_end":12901302,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(2));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901307,"byte_end":12901355,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901360,"byte_end":12901363,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901368,"byte_end":12901439,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901444,"byte_end":12901493,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901498,"byte_end":12901501,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901506,"byte_end":12901577,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901582,"byte_end":12901631,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901636,"byte_end":12901639,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire_owned();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901644,"byte_end":12901693,"line_start":516,"line_end":516,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901698,"byte_end":12901763,"line_start":517,"line_end":517,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901768,"byte_end":12901775,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901780,"byte_end":12901787,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901792,"byte_end":12901795,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901800,"byte_end":12901827,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901832,"byte_end":12901901,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901906,"byte_end":12901981,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12901986,"byte_end":12902049,"line_start":524,"line_end":524,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903546,"byte_end":12903568,"line_start":564,"line_end":564,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902359,"byte_end":12902411,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902416,"byte_end":12902419,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902424,"byte_end":12902495,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902500,"byte_end":12902577,"line_start":538,"line_end":538,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902582,"byte_end":12902652,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902657,"byte_end":12902728,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902733,"byte_end":12902753,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902758,"byte_end":12902761,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902766,"byte_end":12902780,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902785,"byte_end":12902788,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902793,"byte_end":12902800,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902805,"byte_end":12902828,"line_start":546,"line_end":546,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902833,"byte_end":12902883,"line_start":547,"line_end":547,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902888,"byte_end":12902891,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902896,"byte_end":12902913,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(4));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902918,"byte_end":12902966,"line_start":550,"line_end":550,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902971,"byte_end":12902974,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_many_owned(3).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12902979,"byte_end":12903056,"line_start":552,"line_end":552,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903061,"byte_end":12903110,"line_start":553,"line_end":553,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903115,"byte_end":12903118,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many_owned(2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903123,"byte_end":12903178,"line_start":555,"line_end":555,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903183,"byte_end":12903248,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903253,"byte_end":12903260,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903265,"byte_end":12903272,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903277,"byte_end":12903280,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903285,"byte_end":12903312,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903317,"byte_end":12903386,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903391,"byte_end":12903466,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903471,"byte_end":12903534,"line_start":563,"line_end":563,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904793,"byte_end":12904798,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903880,"byte_end":12903905,"line_start":577,"line_end":577,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903910,"byte_end":12903913,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12903918,"byte_end":12904008,"line_start":579,"line_end":579,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904013,"byte_end":12904016,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904021,"byte_end":12904035,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904040,"byte_end":12904043,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904048,"byte_end":12904055,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904060,"byte_end":12904091,"line_start":584,"line_end":584,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904096,"byte_end":12904119,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904124,"byte_end":12904161,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904166,"byte_end":12904169,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904174,"byte_end":12904192,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904197,"byte_end":12904218,"line_start":589,"line_end":589,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904223,"byte_end":12904275,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904280,"byte_end":12904323,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904328,"byte_end":12904331,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904336,"byte_end":12904369,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904374,"byte_end":12904431,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904436,"byte_end":12904473,"line_start":595,"line_end":595,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904478,"byte_end":12904524,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904529,"byte_end":12904540,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904545,"byte_end":12904548,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904553,"byte_end":12904591,"line_start":599,"line_end":599,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904596,"byte_end":12904623,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904628,"byte_end":12904631,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904636,"byte_end":12904673,"line_start":602,"line_end":602,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904678,"byte_end":12904759,"line_start":603,"line_end":603,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904764,"byte_end":12904769,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904774,"byte_end":12904781,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904903,"byte_end":12904912,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904848,"byte_end":12904891,"line_start":610,"line_end":610,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905181,"byte_end":12905187,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905006,"byte_end":12905076,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905081,"byte_end":12905150,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905155,"byte_end":12905169,"line_start":619,"line_end":619,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905442,"byte_end":12905448,"line_start":629,"line_end":629,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905267,"byte_end":12905337,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905342,"byte_end":12905411,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905416,"byte_end":12905430,"line_start":628,"line_end":628,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942740,"byte_end":12942760,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942449,"byte_end":12942527,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942528,"byte_end":12942540,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942541,"byte_end":12942544,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942545,"byte_end":12942606,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942607,"byte_end":12942622,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942623,"byte_end":12942626,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942627,"byte_end":12942685,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12942686,"byte_end":12942728,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944090,"byte_end":12944093,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943160,"byte_end":12943234,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943239,"byte_end":12943309,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943314,"byte_end":12943342,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943347,"byte_end":12943350,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943355,"byte_end":12943406,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943411,"byte_end":12943486,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943491,"byte_end":12943555,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943560,"byte_end":12943563,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943568,"byte_end":12943582,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943587,"byte_end":12943590,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943595,"byte_end":12943602,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943607,"byte_end":12943630,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943635,"byte_end":12943687,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943692,"byte_end":12943695,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943700,"byte_end":12943748,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943753,"byte_end":12943773,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943778,"byte_end":12943781,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943786,"byte_end":12943806,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943811,"byte_end":12943834,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943839,"byte_end":12943884,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943889,"byte_end":12943892,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943897,"byte_end":12943937,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943942,"byte_end":12944001,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944006,"byte_end":12944009,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944014,"byte_end":12944040,"line_start":51,"line_end":51,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944045,"byte_end":12944052,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944057,"byte_end":12944064,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944069,"byte_end":12944078,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945812,"byte_end":12945819,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944744,"byte_end":12944818,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944823,"byte_end":12944893,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944898,"byte_end":12944909,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944914,"byte_end":12944917,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944922,"byte_end":12944992,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12944997,"byte_end":12945025,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945030,"byte_end":12945033,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945038,"byte_end":12945097,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945102,"byte_end":12945172,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945177,"byte_end":12945241,"line_start":84,"line_end":84,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945246,"byte_end":12945249,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945254,"byte_end":12945268,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945273,"byte_end":12945276,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945281,"byte_end":12945288,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945293,"byte_end":12945316,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945321,"byte_end":12945373,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945378,"byte_end":12945381,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945386,"byte_end":12945434,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945439,"byte_end":12945459,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945464,"byte_end":12945467,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945472,"byte_end":12945492,"line_start":95,"line_end":95,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945497,"byte_end":12945520,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945525,"byte_end":12945570,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945575,"byte_end":12945578,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945583,"byte_end":12945623,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945628,"byte_end":12945723,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945728,"byte_end":12945731,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945736,"byte_end":12945762,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945767,"byte_end":12945774,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945779,"byte_end":12945786,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12945791,"byte_end":12945800,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948216,"byte_end":12948237,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12947918,"byte_end":12948000,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948001,"byte_end":12948013,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948014,"byte_end":12948017,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948018,"byte_end":12948077,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948078,"byte_end":12948096,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948097,"byte_end":12948100,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948101,"byte_end":12948161,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948162,"byte_end":12948204,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949694,"byte_end":12949697,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948645,"byte_end":12948722,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948727,"byte_end":12948736,"line_start":30,"line_end":30,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948741,"byte_end":12948744,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948749,"byte_end":12948820,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948825,"byte_end":12948853,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948858,"byte_end":12948861,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948866,"byte_end":12948925,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948930,"byte_end":12949005,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949010,"byte_end":12949066,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949071,"byte_end":12949074,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949079,"byte_end":12949093,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949098,"byte_end":12949101,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949106,"byte_end":12949113,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949118,"byte_end":12949141,"line_start":42,"line_end":42,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949146,"byte_end":12949199,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949204,"byte_end":12949207,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949212,"byte_end":12949260,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949265,"byte_end":12949285,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949290,"byte_end":12949293,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949298,"byte_end":12949318,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949323,"byte_end":12949346,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949351,"byte_end":12949396,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949401,"byte_end":12949404,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949409,"byte_end":12949414,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949419,"byte_end":12949456,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949461,"byte_end":12949553,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949558,"byte_end":12949578,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949583,"byte_end":12949588,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949593,"byte_end":12949596,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949601,"byte_end":12949644,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949649,"byte_end":12949656,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949661,"byte_end":12949668,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12949673,"byte_end":12949682,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951715,"byte_end":12951722,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950456,"byte_end":12950531,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950536,"byte_end":12950605,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950610,"byte_end":12950629,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950634,"byte_end":12950637,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950642,"byte_end":12950713,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950718,"byte_end":12950746,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950751,"byte_end":12950754,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950759,"byte_end":12950810,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950815,"byte_end":12950890,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950895,"byte_end":12950964,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950969,"byte_end":12950972,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12950977,"byte_end":12951051,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951056,"byte_end":12951059,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951064,"byte_end":12951078,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951083,"byte_end":12951086,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951091,"byte_end":12951098,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951103,"byte_end":12951126,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951131,"byte_end":12951184,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951189,"byte_end":12951192,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951197,"byte_end":12951245,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951250,"byte_end":12951270,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951275,"byte_end":12951278,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951283,"byte_end":12951303,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951308,"byte_end":12951331,"line_start":107,"line_end":107,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951336,"byte_end":12951381,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951386,"byte_end":12951389,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951394,"byte_end":12951399,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951404,"byte_end":12951462,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951467,"byte_end":12951575,"line_start":112,"line_end":112,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951580,"byte_end":12951599,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951604,"byte_end":12951609,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951614,"byte_end":12951617,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951622,"byte_end":12951665,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951670,"byte_end":12951677,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951682,"byte_end":12951689,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12951694,"byte_end":12951703,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952932,"byte_end":12952943,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952619,"byte_end":12952668,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952673,"byte_end":12952742,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952747,"byte_end":12952814,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952819,"byte_end":12952822,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952827,"byte_end":12952906,"line_start":153,"line_end":153,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12952911,"byte_end":12952920,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954176,"byte_end":12954185,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953036,"byte_end":12953108,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953113,"byte_end":12953182,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953187,"byte_end":12953190,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953195,"byte_end":12953273,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953278,"byte_end":12953354,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953359,"byte_end":12953371,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953376,"byte_end":12953379,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953384,"byte_end":12953458,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953463,"byte_end":12953480,"line_start":167,"line_end":167,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953485,"byte_end":12953488,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953493,"byte_end":12953507,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953512,"byte_end":12953515,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953520,"byte_end":12953527,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953532,"byte_end":12953562,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953567,"byte_end":12953592,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953597,"byte_end":12953602,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953607,"byte_end":12953627,"line_start":175,"line_end":175,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953632,"byte_end":12953655,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953660,"byte_end":12953700,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953705,"byte_end":12953708,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953713,"byte_end":12953758,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953763,"byte_end":12953766,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953771,"byte_end":12953806,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953811,"byte_end":12953853,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953858,"byte_end":12953903,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953908,"byte_end":12953915,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953920,"byte_end":12953923,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953928,"byte_end":12953954,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12953959,"byte_end":12954004,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954009,"byte_end":12954012,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954017,"byte_end":12954029,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954034,"byte_end":12954060,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954065,"byte_end":12954140,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954145,"byte_end":12954152,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12954157,"byte_end":12954164,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957269,"byte_end":12957296,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12956802,"byte_end":12956884,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12956885,"byte_end":12956897,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12956898,"byte_end":12956901,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12956902,"byte_end":12956982,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12956983,"byte_end":12957062,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957063,"byte_end":12957118,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957119,"byte_end":12957122,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957123,"byte_end":12957184,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957185,"byte_end":12957257,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958792,"byte_end":12958795,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957739,"byte_end":12957814,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957819,"byte_end":12957828,"line_start":29,"line_end":29,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957833,"byte_end":12957836,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957841,"byte_end":12957915,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957920,"byte_end":12957951,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957956,"byte_end":12957959,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957964,"byte_end":12958023,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958028,"byte_end":12958103,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958108,"byte_end":12958164,"line_start":36,"line_end":36,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958169,"byte_end":12958172,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958177,"byte_end":12958191,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958196,"byte_end":12958199,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958204,"byte_end":12958211,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958216,"byte_end":12958239,"line_start":41,"line_end":41,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958244,"byte_end":12958297,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958302,"byte_end":12958305,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958310,"byte_end":12958358,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958363,"byte_end":12958383,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958388,"byte_end":12958391,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958396,"byte_end":12958416,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958421,"byte_end":12958444,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958449,"byte_end":12958494,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958499,"byte_end":12958502,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958507,"byte_end":12958512,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958517,"byte_end":12958554,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958559,"byte_end":12958651,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958656,"byte_end":12958676,"line_start":54,"line_end":54,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958681,"byte_end":12958686,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958691,"byte_end":12958694,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958699,"byte_end":12958742,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958747,"byte_end":12958754,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958759,"byte_end":12958766,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12958771,"byte_end":12958780,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960735,"byte_end":12960742,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959554,"byte_end":12959626,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959631,"byte_end":12959700,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959705,"byte_end":12959724,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959729,"byte_end":12959732,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959737,"byte_end":12959811,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959816,"byte_end":12959847,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959852,"byte_end":12959855,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959860,"byte_end":12959911,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12959916,"byte_end":12960002,"line_start":91,"line_end":91,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960007,"byte_end":12960071,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960076,"byte_end":12960079,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960084,"byte_end":12960098,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960103,"byte_end":12960106,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960111,"byte_end":12960118,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960123,"byte_end":12960146,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960151,"byte_end":12960204,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960209,"byte_end":12960212,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960217,"byte_end":12960265,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960270,"byte_end":12960290,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960295,"byte_end":12960298,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960303,"byte_end":12960323,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960328,"byte_end":12960351,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960356,"byte_end":12960401,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960406,"byte_end":12960409,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960414,"byte_end":12960419,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960424,"byte_end":12960482,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960487,"byte_end":12960595,"line_start":109,"line_end":109,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960600,"byte_end":12960619,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960624,"byte_end":12960629,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960634,"byte_end":12960637,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960642,"byte_end":12960685,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960690,"byte_end":12960697,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960702,"byte_end":12960709,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12960714,"byte_end":12960723,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963275,"byte_end":12963290,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963008,"byte_end":12963080,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963081,"byte_end":12963093,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963094,"byte_end":12963097,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963098,"byte_end":12963153,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963154,"byte_end":12963169,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963170,"byte_end":12963173,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963174,"byte_end":12963220,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963221,"byte_end":12963263,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964748,"byte_end":12964751,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963573,"byte_end":12963642,"line_start":24,"line_end":24,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963647,"byte_end":12963650,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963655,"byte_end":12963728,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963733,"byte_end":12963753,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963758,"byte_end":12963761,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963766,"byte_end":12963817,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963822,"byte_end":12963892,"line_start":30,"line_end":30,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963897,"byte_end":12963961,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963966,"byte_end":12963969,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963974,"byte_end":12964046,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964051,"byte_end":12964077,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964082,"byte_end":12964085,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964090,"byte_end":12964199,"line_start":36,"line_end":36,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964204,"byte_end":12964267,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964272,"byte_end":12964275,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964280,"byte_end":12964294,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964299,"byte_end":12964302,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964307,"byte_end":12964314,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964319,"byte_end":12964366,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964371,"byte_end":12964374,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964379,"byte_end":12964427,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964432,"byte_end":12964452,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964457,"byte_end":12964460,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964465,"byte_end":12964485,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964490,"byte_end":12964513,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964518,"byte_end":12964553,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964558,"byte_end":12964561,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964566,"byte_end":12964600,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964605,"byte_end":12964659,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964664,"byte_end":12964667,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964672,"byte_end":12964698,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964703,"byte_end":12964710,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964715,"byte_end":12964722,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12964727,"byte_end":12964736,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966648,"byte_end":12966655,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965331,"byte_end":12965400,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965405,"byte_end":12965475,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965480,"byte_end":12965491,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965496,"byte_end":12965499,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965504,"byte_end":12965577,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965582,"byte_end":12965602,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965607,"byte_end":12965610,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965615,"byte_end":12965674,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965679,"byte_end":12965759,"line_start":86,"line_end":86,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965764,"byte_end":12965813,"line_start":87,"line_end":87,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965818,"byte_end":12965821,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965826,"byte_end":12965902,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965907,"byte_end":12965933,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965938,"byte_end":12965941,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12965946,"byte_end":12966063,"line_start":92,"line_end":92,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966068,"byte_end":12966131,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966136,"byte_end":12966139,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966144,"byte_end":12966158,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966163,"byte_end":12966166,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966171,"byte_end":12966178,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966183,"byte_end":12966230,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966235,"byte_end":12966238,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966243,"byte_end":12966291,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966296,"byte_end":12966316,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966321,"byte_end":12966324,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966329,"byte_end":12966349,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966354,"byte_end":12966377,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966382,"byte_end":12966417,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966422,"byte_end":12966425,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966430,"byte_end":12966464,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966469,"byte_end":12966559,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966564,"byte_end":12966567,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966572,"byte_end":12966598,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966603,"byte_end":12966610,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966615,"byte_end":12966622,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12966627,"byte_end":12966636,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968784,"byte_end":12968800,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968510,"byte_end":12968586,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968587,"byte_end":12968599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968600,"byte_end":12968603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968604,"byte_end":12968657,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968658,"byte_end":12968676,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968677,"byte_end":12968680,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968681,"byte_end":12968729,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12968730,"byte_end":12968772,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970442,"byte_end":12970445,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969124,"byte_end":12969202,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969207,"byte_end":12969210,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969215,"byte_end":12969289,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969294,"byte_end":12969314,"line_start":30,"line_end":30,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969319,"byte_end":12969322,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969327,"byte_end":12969386,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969391,"byte_end":12969464,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969469,"byte_end":12969522,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969527,"byte_end":12969530,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969535,"byte_end":12969608,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969613,"byte_end":12969639,"line_start":37,"line_end":37,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969644,"byte_end":12969647,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969652,"byte_end":12969726,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969731,"byte_end":12969842,"line_start":40,"line_end":40,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969847,"byte_end":12969910,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969915,"byte_end":12969918,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969923,"byte_end":12969937,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969942,"byte_end":12969945,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969950,"byte_end":12969957,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969962,"byte_end":12970010,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970015,"byte_end":12970018,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970023,"byte_end":12970071,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970076,"byte_end":12970096,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970101,"byte_end":12970104,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970109,"byte_end":12970129,"line_start":51,"line_end":51,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970134,"byte_end":12970157,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970162,"byte_end":12970197,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970202,"byte_end":12970205,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970210,"byte_end":12970215,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970220,"byte_end":12970301,"line_start":56,"line_end":56,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970306,"byte_end":12970326,"line_start":57,"line_end":57,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970331,"byte_end":12970336,"line_start":58,"line_end":58,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970341,"byte_end":12970344,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970349,"byte_end":12970392,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970397,"byte_end":12970404,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970409,"byte_end":12970416,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12970421,"byte_end":12970430,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972626,"byte_end":12972633,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971136,"byte_end":12971209,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971214,"byte_end":12971288,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971293,"byte_end":12971304,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971309,"byte_end":12971312,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971317,"byte_end":12971391,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971396,"byte_end":12971416,"line_start":90,"line_end":90,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971421,"byte_end":12971424,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971429,"byte_end":12971480,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971485,"byte_end":12971560,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971565,"byte_end":12971629,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971634,"byte_end":12971637,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971642,"byte_end":12971715,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971720,"byte_end":12971750,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971755,"byte_end":12971758,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971763,"byte_end":12971837,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971842,"byte_end":12971961,"line_start":100,"line_end":100,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12971966,"byte_end":12972029,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972034,"byte_end":12972037,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972042,"byte_end":12972056,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972061,"byte_end":12972064,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972069,"byte_end":12972076,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972081,"byte_end":12972129,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972134,"byte_end":12972137,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972142,"byte_end":12972190,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972195,"byte_end":12972215,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972220,"byte_end":12972223,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972228,"byte_end":12972248,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972253,"byte_end":12972276,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972281,"byte_end":12972316,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972321,"byte_end":12972324,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972329,"byte_end":12972334,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972339,"byte_end":12972378,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972383,"byte_end":12972486,"line_start":117,"line_end":117,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972491,"byte_end":12972510,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972515,"byte_end":12972520,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972525,"byte_end":12972528,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972533,"byte_end":12972576,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972581,"byte_end":12972588,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972593,"byte_end":12972600,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12972605,"byte_end":12972614,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973759,"byte_end":12973770,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973461,"byte_end":12973536,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973541,"byte_end":12973614,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973619,"byte_end":12973646,"line_start":154,"line_end":154,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973651,"byte_end":12973654,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973659,"byte_end":12973733,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973738,"byte_end":12973747,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12975049,"byte_end":12975058,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973874,"byte_end":12973946,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12973951,"byte_end":12974020,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974025,"byte_end":12974028,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974033,"byte_end":12974111,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974116,"byte_end":12974192,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974197,"byte_end":12974209,"line_start":167,"line_end":167,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974214,"byte_end":12974217,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974222,"byte_end":12974296,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974301,"byte_end":12974318,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974323,"byte_end":12974326,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974331,"byte_end":12974345,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974350,"byte_end":12974353,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974358,"byte_end":12974365,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974370,"byte_end":12974400,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974405,"byte_end":12974430,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974435,"byte_end":12974440,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974445,"byte_end":12974465,"line_start":178,"line_end":178,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974470,"byte_end":12974493,"line_start":179,"line_end":179,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974498,"byte_end":12974538,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974543,"byte_end":12974546,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974551,"byte_end":12974582,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974587,"byte_end":12974590,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974595,"byte_end":12974630,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974635,"byte_end":12974677,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974682,"byte_end":12974721,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974726,"byte_end":12974733,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974738,"byte_end":12974741,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974746,"byte_end":12974772,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974777,"byte_end":12974822,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974827,"byte_end":12974830,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974835,"byte_end":12974847,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974852,"byte_end":12974878,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974883,"byte_end":12974958,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974963,"byte_end":12974970,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974975,"byte_end":12974982,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974987,"byte_end":12974990,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12974995,"byte_end":12975037,"line_start":198,"line_end":198,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977941,"byte_end":12977963,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977505,"byte_end":12977581,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977582,"byte_end":12977594,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977595,"byte_end":12977598,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977599,"byte_end":12977674,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977675,"byte_end":12977749,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977750,"byte_end":12977805,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977806,"byte_end":12977809,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977810,"byte_end":12977866,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12977867,"byte_end":12977929,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979542,"byte_end":12979545,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978293,"byte_end":12978369,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978374,"byte_end":12978377,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978382,"byte_end":12978462,"line_start":28,"line_end":28,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978467,"byte_end":12978487,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978492,"byte_end":12978495,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978500,"byte_end":12978559,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978564,"byte_end":12978640,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978645,"byte_end":12978701,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978706,"byte_end":12978709,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978714,"byte_end":12978787,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978792,"byte_end":12978818,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978823,"byte_end":12978826,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978831,"byte_end":12978942,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978947,"byte_end":12979010,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979015,"byte_end":12979018,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979023,"byte_end":12979037,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979042,"byte_end":12979045,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979050,"byte_end":12979057,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979062,"byte_end":12979110,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979115,"byte_end":12979118,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979123,"byte_end":12979171,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979176,"byte_end":12979196,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979201,"byte_end":12979204,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979209,"byte_end":12979229,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979234,"byte_end":12979257,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979262,"byte_end":12979297,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979302,"byte_end":12979305,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979310,"byte_end":12979315,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979320,"byte_end":12979401,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979406,"byte_end":12979426,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979431,"byte_end":12979436,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979441,"byte_end":12979444,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979449,"byte_end":12979492,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979497,"byte_end":12979504,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979509,"byte_end":12979516,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12979521,"byte_end":12979530,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981659,"byte_end":12981666,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980237,"byte_end":12980309,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980314,"byte_end":12980388,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980393,"byte_end":12980404,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980409,"byte_end":12980412,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980417,"byte_end":12980497,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980502,"byte_end":12980522,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980527,"byte_end":12980530,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980535,"byte_end":12980586,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980591,"byte_end":12980667,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980672,"byte_end":12980741,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980746,"byte_end":12980749,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980754,"byte_end":12980827,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980832,"byte_end":12980862,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980867,"byte_end":12980870,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980875,"byte_end":12980994,"line_start":98,"line_end":98,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12980999,"byte_end":12981062,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981067,"byte_end":12981070,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981075,"byte_end":12981089,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981094,"byte_end":12981097,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981102,"byte_end":12981109,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981114,"byte_end":12981162,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981167,"byte_end":12981170,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981175,"byte_end":12981223,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981228,"byte_end":12981248,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981253,"byte_end":12981256,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981261,"byte_end":12981281,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981286,"byte_end":12981309,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981314,"byte_end":12981349,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981354,"byte_end":12981357,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981362,"byte_end":12981367,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981372,"byte_end":12981411,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981416,"byte_end":12981519,"line_start":115,"line_end":115,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981524,"byte_end":12981543,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981548,"byte_end":12981553,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981558,"byte_end":12981561,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981566,"byte_end":12981609,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981614,"byte_end":12981621,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981626,"byte_end":12981633,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12981638,"byte_end":12981647,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12909209,"byte_end":12909215,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906678,"byte_end":12906717,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906718,"byte_end":12906721,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906722,"byte_end":12906799,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906800,"byte_end":12906879,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906880,"byte_end":12906959,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12906960,"byte_end":12907018,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907019,"byte_end":12907022,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907023,"byte_end":12907101,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907102,"byte_end":12907180,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907181,"byte_end":12907259,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907260,"byte_end":12907325,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907326,"byte_end":12907329,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907330,"byte_end":12907394,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907395,"byte_end":12907467,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907468,"byte_end":12907548,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907549,"byte_end":12907629,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907630,"byte_end":12907710,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907711,"byte_end":12907780,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907781,"byte_end":12907851,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907852,"byte_end":12907890,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907891,"byte_end":12907894,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907895,"byte_end":12907972,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12907973,"byte_end":12908058,"line_start":52,"line_end":52,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908059,"byte_end":12908139,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908140,"byte_end":12908187,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908188,"byte_end":12908260,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908261,"byte_end":12908264,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908265,"byte_end":12908279,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908280,"byte_end":12908283,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908284,"byte_end":12908291,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908292,"byte_end":12908320,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908321,"byte_end":12908324,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908325,"byte_end":12908343,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908344,"byte_end":12908365,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908366,"byte_end":12908400,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908401,"byte_end":12908404,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908405,"byte_end":12908453,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908454,"byte_end":12908463,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908464,"byte_end":12908503,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908504,"byte_end":12908543,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908544,"byte_end":12908575,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908576,"byte_end":12908607,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908608,"byte_end":12908657,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908658,"byte_end":12908661,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908662,"byte_end":12908713,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908714,"byte_end":12908723,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908724,"byte_end":12908767,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908768,"byte_end":12908788,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908789,"byte_end":12908819,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908820,"byte_end":12908859,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908860,"byte_end":12908865,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908866,"byte_end":12908873,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908874,"byte_end":12908877,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908878,"byte_end":12908912,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908913,"byte_end":12908942,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908943,"byte_end":12908990,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12908991,"byte_end":12909040,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12909041,"byte_end":12909078,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12909079,"byte_end":12909180,"line_start":88,"line_end":88,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913339,"byte_end":12913342,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913109,"byte_end":12913172,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913177,"byte_end":12913180,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913185,"byte_end":12913199,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913204,"byte_end":12913207,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913212,"byte_end":12913219,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913224,"byte_end":12913252,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913257,"byte_end":12913260,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913265,"byte_end":12913295,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913300,"byte_end":12913307,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913312,"byte_end":12913327,"line_start":205,"line_end":205,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915297,"byte_end":12915313,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12914892,"byte_end":12914954,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12914959,"byte_end":12915018,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915023,"byte_end":12915026,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915031,"byte_end":12915045,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915050,"byte_end":12915053,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915058,"byte_end":12915065,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915070,"byte_end":12915098,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915103,"byte_end":12915106,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915111,"byte_end":12915160,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915165,"byte_end":12915172,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915177,"byte_end":12915180,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915185,"byte_end":12915197,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915202,"byte_end":12915205,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915210,"byte_end":12915265,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"track_caller","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12915270,"byte_end":12915285,"line_start":271,"line_end":271,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920270,"byte_end":12920274,"line_start":425,"line_end":425,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918581,"byte_end":12918654,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918659,"byte_end":12918705,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918710,"byte_end":12918713,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918718,"byte_end":12918791,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918796,"byte_end":12918871,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918876,"byte_end":12918879,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918884,"byte_end":12918957,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12918962,"byte_end":12919031,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919036,"byte_end":12919110,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919115,"byte_end":12919188,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919193,"byte_end":12919217,"line_start":390,"line_end":390,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919222,"byte_end":12919225,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919230,"byte_end":12919304,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919309,"byte_end":12919326,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919331,"byte_end":12919334,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919339,"byte_end":12919358,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919363,"byte_end":12919366,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919371,"byte_end":12919444,"line_start":397,"line_end":397,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read` makes you lose your place in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919449,"byte_end":12919525,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919530,"byte_end":12919544,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919549,"byte_end":12919552,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919557,"byte_end":12919571,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919576,"byte_end":12919579,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919584,"byte_end":12919591,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919596,"byte_end":12919619,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919624,"byte_end":12919652,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919657,"byte_end":12919660,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919665,"byte_end":12919683,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919688,"byte_end":12919709,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919714,"byte_end":12919758,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919763,"byte_end":12919797,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919802,"byte_end":12919805,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919810,"byte_end":12919844,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919849,"byte_end":12919875,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919880,"byte_end":12919883,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919888,"byte_end":12919921,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12919926,"byte_end":12919996,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920001,"byte_end":12920041,"line_start":417,"line_end":417,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920046,"byte_end":12920076,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920081,"byte_end":12920138,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920143,"byte_end":12920146,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920151,"byte_end":12920209,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920214,"byte_end":12920230,"line_start":422,"line_end":422,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920235,"byte_end":12920240,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12920245,"byte_end":12920252,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923249,"byte_end":12923262,"line_start":510,"line_end":510,"column_start":12,"column_end":25},"name":"blocking_read","qualname":"<RwLock<T>>::blocking_read","value":"pub fn blocking_read(&Self) -> RwLockReadGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921457,"byte_end":12921516,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921521,"byte_end":12921524,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921529,"byte_end":12921580,"line_start":464,"line_end":464,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921585,"byte_end":12921665,"line_start":465,"line_end":465,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921670,"byte_end":12921673,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this `RwLock` when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921678,"byte_end":12921766,"line_start":467,"line_end":467,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921771,"byte_end":12921774,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921779,"byte_end":12921791,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921796,"byte_end":12921799,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921804,"byte_end":12921880,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921885,"byte_end":12921888,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921893,"byte_end":12921970,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12921975,"byte_end":12922046,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922051,"byte_end":12922122,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922127,"byte_end":12922195,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922200,"byte_end":12922263,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922268,"byte_end":12922271,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922276,"byte_end":12922290,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922295,"byte_end":12922298,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922303,"byte_end":12922310,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922315,"byte_end":12922338,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922343,"byte_end":12922371,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922376,"byte_end":12922379,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922384,"byte_end":12922402,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922407,"byte_end":12922428,"line_start":486,"line_end":486,"column_start":5,"column_end":26}},{"value":"/     let rwlock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922433,"byte_end":12922479,"line_start":487,"line_end":487,"column_start":5,"column_end":51}},{"value":"/     let mut write_lock = rwlock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922484,"byte_end":12922534,"line_start":488,"line_end":488,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922539,"byte_end":12922542,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922547,"byte_end":12922604,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922609,"byte_end":12922654,"line_start":491,"line_end":491,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922659,"byte_end":12922680,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `write_lock` is released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922685,"byte_end":12922756,"line_start":493,"line_end":493,"column_start":5,"column_end":76}},{"value":"/             let read_lock = rwlock.blocking_read();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922761,"byte_end":12922816,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/             assert_eq!(*read_lock, 0);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922821,"byte_end":12922863,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922868,"byte_end":12922881,"line_start":496,"line_end":496,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922886,"byte_end":12922897,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922902,"byte_end":12922905,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     *write_lock -= 1;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922910,"byte_end":12922935,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/     drop(write_lock); // release the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922940,"byte_end":12922986,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922991,"byte_end":12922994,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12922999,"byte_end":12923052,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923057,"byte_end":12923094,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923099,"byte_end":12923102,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923107,"byte_end":12923137,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/     assert!(rwlock.try_write().is_ok());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923142,"byte_end":12923186,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923191,"byte_end":12923196,"line_start":507,"line_end":507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923201,"byte_end":12923208,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923213,"byte_end":12923237,"line_start":509,"line_end":509,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925431,"byte_end":12925441,"line_start":565,"line_end":565,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923354,"byte_end":12923427,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923432,"byte_end":12923478,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923483,"byte_end":12923486,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923491,"byte_end":12923564,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923569,"byte_end":12923644,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923649,"byte_end":12923652,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923657,"byte_end":12923731,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923736,"byte_end":12923810,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923815,"byte_end":12923887,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923892,"byte_end":12923967,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12923972,"byte_end":12924015,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924020,"byte_end":12924023,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924028,"byte_end":12924101,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924106,"byte_end":12924175,"line_start":527,"line_end":527,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924180,"byte_end":12924254,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924259,"byte_end":12924332,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924337,"byte_end":12924361,"line_start":530,"line_end":530,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924366,"byte_end":12924369,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924374,"byte_end":12924448,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924453,"byte_end":12924470,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924475,"byte_end":12924478,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924483,"byte_end":12924502,"line_start":535,"line_end":535,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924507,"byte_end":12924510,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924515,"byte_end":12924588,"line_start":537,"line_end":537,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read_owned` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924593,"byte_end":12924666,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924671,"byte_end":12924694,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924699,"byte_end":12924702,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924707,"byte_end":12924721,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924726,"byte_end":12924729,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924734,"byte_end":12924741,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924746,"byte_end":12924769,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924774,"byte_end":12924802,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924807,"byte_end":12924810,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924815,"byte_end":12924833,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924838,"byte_end":12924859,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924864,"byte_end":12924908,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924913,"byte_end":12924947,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924952,"byte_end":12924955,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12924960,"byte_end":12925000,"line_start":552,"line_end":552,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925005,"byte_end":12925031,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925036,"byte_end":12925039,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925044,"byte_end":12925077,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925082,"byte_end":12925152,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925157,"byte_end":12925203,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925208,"byte_end":12925238,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925243,"byte_end":12925300,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925305,"byte_end":12925308,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925313,"byte_end":12925371,"line_start":561,"line_end":561,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925376,"byte_end":12925392,"line_start":562,"line_end":562,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925397,"byte_end":12925401,"line_start":563,"line_end":563,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12925406,"byte_end":12925413,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927758,"byte_end":12927766,"line_start":637,"line_end":637,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926739,"byte_end":12926801,"line_start":605,"line_end":605,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926806,"byte_end":12926809,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926814,"byte_end":12926891,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926896,"byte_end":12926967,"line_start":608,"line_end":608,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926972,"byte_end":12926989,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12926994,"byte_end":12926997,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927002,"byte_end":12927036,"line_start":611,"line_end":611,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927041,"byte_end":12927044,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927049,"byte_end":12927063,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927068,"byte_end":12927071,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927076,"byte_end":12927083,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927088,"byte_end":12927111,"line_start":616,"line_end":616,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927116,"byte_end":12927144,"line_start":617,"line_end":617,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927149,"byte_end":12927152,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927157,"byte_end":12927175,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927180,"byte_end":12927201,"line_start":620,"line_end":620,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927206,"byte_end":12927250,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927255,"byte_end":12927289,"line_start":622,"line_end":622,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927294,"byte_end":12927297,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927302,"byte_end":12927343,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927348,"byte_end":12927374,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927379,"byte_end":12927382,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927387,"byte_end":12927420,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927425,"byte_end":12927495,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927500,"byte_end":12927540,"line_start":629,"line_end":629,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927545,"byte_end":12927575,"line_start":630,"line_end":630,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927580,"byte_end":12927637,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927642,"byte_end":12927645,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927650,"byte_end":12927703,"line_start":633,"line_end":633,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927708,"byte_end":12927724,"line_start":634,"line_end":634,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927729,"byte_end":12927734,"line_start":635,"line_end":635,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12927739,"byte_end":12927746,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929996,"byte_end":12930010,"line_start":700,"line_end":700,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928590,"byte_end":12928652,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928657,"byte_end":12928660,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928665,"byte_end":12928742,"line_start":664,"line_end":664,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928747,"byte_end":12928818,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928823,"byte_end":12928840,"line_start":666,"line_end":666,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928845,"byte_end":12928848,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928853,"byte_end":12928922,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12928927,"byte_end":12929000,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929005,"byte_end":12929077,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929082,"byte_end":12929155,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929160,"byte_end":12929215,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929220,"byte_end":12929223,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929228,"byte_end":12929262,"line_start":674,"line_end":674,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929267,"byte_end":12929270,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929275,"byte_end":12929289,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929294,"byte_end":12929297,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929302,"byte_end":12929309,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929314,"byte_end":12929337,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929342,"byte_end":12929370,"line_start":680,"line_end":680,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929375,"byte_end":12929378,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929383,"byte_end":12929401,"line_start":682,"line_end":682,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929406,"byte_end":12929427,"line_start":683,"line_end":683,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929432,"byte_end":12929476,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929481,"byte_end":12929515,"line_start":685,"line_end":685,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929520,"byte_end":12929523,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929528,"byte_end":12929575,"line_start":687,"line_end":687,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929580,"byte_end":12929606,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929611,"byte_end":12929614,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929619,"byte_end":12929652,"line_start":690,"line_end":690,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929657,"byte_end":12929727,"line_start":691,"line_end":691,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929732,"byte_end":12929778,"line_start":692,"line_end":692,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929783,"byte_end":12929813,"line_start":693,"line_end":693,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929818,"byte_end":12929875,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929880,"byte_end":12929883,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929888,"byte_end":12929941,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929946,"byte_end":12929962,"line_start":697,"line_end":697,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929967,"byte_end":12929972,"line_start":698,"line_end":698,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12929977,"byte_end":12929984,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931799,"byte_end":12931804,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12930943,"byte_end":12931015,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931020,"byte_end":12931071,"line_start":729,"line_end":729,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931076,"byte_end":12931079,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931084,"byte_end":12931156,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931161,"byte_end":12931189,"line_start":732,"line_end":732,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931194,"byte_end":12931197,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931202,"byte_end":12931277,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931282,"byte_end":12931299,"line_start":735,"line_end":735,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931304,"byte_end":12931307,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931312,"byte_end":12931331,"line_start":737,"line_end":737,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931336,"byte_end":12931339,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931344,"byte_end":12931417,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write` makes you lose your place","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931422,"byte_end":12931496,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931501,"byte_end":12931518,"line_start":741,"line_end":741,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931523,"byte_end":12931526,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931531,"byte_end":12931545,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931550,"byte_end":12931553,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931558,"byte_end":12931565,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931570,"byte_end":12931598,"line_start":746,"line_end":746,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931603,"byte_end":12931606,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931611,"byte_end":12931629,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931634,"byte_end":12931655,"line_start":749,"line_end":749,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931660,"byte_end":12931692,"line_start":750,"line_end":750,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931697,"byte_end":12931700,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931705,"byte_end":12931742,"line_start":752,"line_end":752,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931747,"byte_end":12931760,"line_start":753,"line_end":753,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931765,"byte_end":12931769,"line_start":754,"line_end":754,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12931774,"byte_end":12931781,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934920,"byte_end":12934934,"line_start":844,"line_end":844,"column_start":12,"column_end":26},"name":"blocking_write","qualname":"<RwLock<T>>::blocking_write","value":"pub fn blocking_write(&Self) -> RwLockWriteGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933043,"byte_end":12933106,"line_start":794,"line_end":794,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933111,"byte_end":12933114,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933119,"byte_end":12933170,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933175,"byte_end":12933255,"line_start":797,"line_end":797,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933260,"byte_end":12933263,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock` when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933268,"byte_end":12933357,"line_start":799,"line_end":799,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933362,"byte_end":12933365,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933370,"byte_end":12933382,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933387,"byte_end":12933390,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933395,"byte_end":12933471,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933476,"byte_end":12933479,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933484,"byte_end":12933561,"line_start":805,"line_end":805,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933566,"byte_end":12933637,"line_start":806,"line_end":806,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933642,"byte_end":12933713,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933718,"byte_end":12933786,"line_start":808,"line_end":808,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933791,"byte_end":12933854,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933859,"byte_end":12933862,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933867,"byte_end":12933881,"line_start":811,"line_end":811,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933886,"byte_end":12933889,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933894,"byte_end":12933901,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933906,"byte_end":12933929,"line_start":814,"line_end":814,"column_start":5,"column_end":28}},{"value":"/ use tokio::{sync::RwLock};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933934,"byte_end":12933964,"line_start":815,"line_end":815,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933969,"byte_end":12933972,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12933977,"byte_end":12933995,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934000,"byte_end":12934021,"line_start":818,"line_end":818,"column_start":5,"column_end":26}},{"value":"/     let rwlock =  Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934026,"byte_end":12934073,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/     let read_lock = rwlock.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934078,"byte_end":12934122,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934127,"byte_end":12934130,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934135,"byte_end":12934192,"line_start":822,"line_end":822,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934197,"byte_end":12934242,"line_start":823,"line_end":823,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934247,"byte_end":12934268,"line_start":824,"line_end":824,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `read_lock` is released.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934273,"byte_end":12934343,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/             let mut write_lock = rwlock.blocking_write();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934348,"byte_end":12934409,"line_start":826,"line_end":826,"column_start":5,"column_end":66}},{"value":"/             *write_lock = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934414,"byte_end":12934446,"line_start":827,"line_end":827,"column_start":5,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934451,"byte_end":12934464,"line_start":828,"line_end":828,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934469,"byte_end":12934480,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934485,"byte_end":12934488,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*read_lock, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934493,"byte_end":12934527,"line_start":831,"line_end":831,"column_start":5,"column_end":39}},{"value":"/     // Release the last outstanding read lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934532,"byte_end":12934582,"line_start":832,"line_end":832,"column_start":5,"column_end":55}},{"value":"/     drop(read_lock);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934587,"byte_end":12934611,"line_start":833,"line_end":833,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934616,"byte_end":12934619,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934624,"byte_end":12934677,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934682,"byte_end":12934719,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934724,"byte_end":12934727,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934732,"byte_end":12934762,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     let read_lock = rwlock.try_read().unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934767,"byte_end":12934818,"line_start":839,"line_end":839,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*read_lock, 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934823,"byte_end":12934857,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934862,"byte_end":12934867,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934872,"byte_end":12934879,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12934884,"byte_end":12934908,"line_start":843,"line_end":843,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936306,"byte_end":12936317,"line_start":883,"line_end":883,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935028,"byte_end":12935100,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935105,"byte_end":12935156,"line_start":849,"line_end":849,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935161,"byte_end":12935164,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935169,"byte_end":12935241,"line_start":851,"line_end":851,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935246,"byte_end":12935274,"line_start":852,"line_end":852,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935279,"byte_end":12935282,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935287,"byte_end":12935362,"line_start":854,"line_end":854,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935367,"byte_end":12935441,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935446,"byte_end":12935518,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935523,"byte_end":12935598,"line_start":857,"line_end":857,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935603,"byte_end":12935646,"line_start":858,"line_end":858,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935651,"byte_end":12935654,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935659,"byte_end":12935734,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935739,"byte_end":12935756,"line_start":861,"line_end":861,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935761,"byte_end":12935764,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935769,"byte_end":12935788,"line_start":863,"line_end":863,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935793,"byte_end":12935796,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935801,"byte_end":12935874,"line_start":865,"line_end":865,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write_owned` makes you lose your","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935879,"byte_end":12935953,"line_start":866,"line_end":866,"column_start":5,"column_end":79}},{"value":"/ place in the queue.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935958,"byte_end":12935981,"line_start":867,"line_end":867,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935986,"byte_end":12935989,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12935994,"byte_end":12936008,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936013,"byte_end":12936016,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936021,"byte_end":12936028,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936033,"byte_end":12936056,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936061,"byte_end":12936089,"line_start":873,"line_end":873,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936094,"byte_end":12936097,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936102,"byte_end":12936120,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936125,"byte_end":12936146,"line_start":876,"line_end":876,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936151,"byte_end":12936193,"line_start":877,"line_end":877,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936198,"byte_end":12936201,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936206,"byte_end":12936249,"line_start":879,"line_end":879,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936254,"byte_end":12936267,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936272,"byte_end":12936276,"line_start":881,"line_end":881,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12936281,"byte_end":12936288,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938311,"byte_end":12938320,"line_start":947,"line_end":947,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937671,"byte_end":12937737,"line_start":924,"line_end":924,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937742,"byte_end":12937745,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937750,"byte_end":12937827,"line_start":926,"line_end":926,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937832,"byte_end":12937904,"line_start":927,"line_end":927,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937909,"byte_end":12937926,"line_start":928,"line_end":928,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937931,"byte_end":12937934,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937939,"byte_end":12937973,"line_start":930,"line_end":930,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937978,"byte_end":12937981,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12937986,"byte_end":12938000,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938005,"byte_end":12938008,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938013,"byte_end":12938020,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938025,"byte_end":12938053,"line_start":935,"line_end":935,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938058,"byte_end":12938061,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938066,"byte_end":12938084,"line_start":937,"line_end":937,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938089,"byte_end":12938110,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938115,"byte_end":12938147,"line_start":939,"line_end":939,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938152,"byte_end":12938155,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938160,"byte_end":12938192,"line_start":941,"line_end":941,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938197,"byte_end":12938223,"line_start":942,"line_end":942,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938228,"byte_end":12938231,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938236,"byte_end":12938277,"line_start":944,"line_end":944,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938282,"byte_end":12938287,"line_start":945,"line_end":945,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12938292,"byte_end":12938299,"line_start":946,"line_end":946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940272,"byte_end":12940287,"line_start":1003,"line_end":1003,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939193,"byte_end":12939259,"line_start":973,"line_end":973,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939264,"byte_end":12939267,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939272,"byte_end":12939349,"line_start":975,"line_end":975,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939354,"byte_end":12939426,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939431,"byte_end":12939448,"line_start":977,"line_end":977,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939453,"byte_end":12939456,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939461,"byte_end":12939531,"line_start":979,"line_end":979,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939536,"byte_end":12939609,"line_start":980,"line_end":980,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939614,"byte_end":12939686,"line_start":981,"line_end":981,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939691,"byte_end":12939764,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939769,"byte_end":12939824,"line_start":983,"line_end":983,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939829,"byte_end":12939832,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939837,"byte_end":12939871,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939876,"byte_end":12939879,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939884,"byte_end":12939898,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939903,"byte_end":12939906,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939911,"byte_end":12939918,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939923,"byte_end":12939946,"line_start":990,"line_end":990,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939951,"byte_end":12939979,"line_start":991,"line_end":991,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939984,"byte_end":12939987,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12939992,"byte_end":12940010,"line_start":993,"line_end":993,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940015,"byte_end":12940036,"line_start":994,"line_end":994,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940041,"byte_end":12940083,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940088,"byte_end":12940091,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940096,"byte_end":12940147,"line_start":997,"line_end":997,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940152,"byte_end":12940178,"line_start":998,"line_end":998,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940183,"byte_end":12940186,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940191,"byte_end":12940238,"line_start":1000,"line_end":1000,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940243,"byte_end":12940248,"line_start":1001,"line_end":1001,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12940253,"byte_end":12940260,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941741,"byte_end":12941748,"line_start":1049,"line_end":1049,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941269,"byte_end":12941324,"line_start":1032,"line_end":1032,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941329,"byte_end":12941332,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941337,"byte_end":12941413,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941418,"byte_end":12941492,"line_start":1035,"line_end":1035,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941497,"byte_end":12941500,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941505,"byte_end":12941519,"line_start":1037,"line_end":1037,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941524,"byte_end":12941527,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941532,"byte_end":12941539,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941544,"byte_end":12941572,"line_start":1040,"line_end":1040,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941577,"byte_end":12941580,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941585,"byte_end":12941600,"line_start":1042,"line_end":1042,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941605,"byte_end":12941643,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941648,"byte_end":12941651,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941656,"byte_end":12941687,"line_start":1045,"line_end":1045,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941692,"byte_end":12941707,"line_start":1046,"line_end":1046,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941712,"byte_end":12941717,"line_start":1047,"line_end":1047,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941722,"byte_end":12941729,"line_start":1048,"line_end":1048,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941982,"byte_end":12941992,"line_start":1057,"line_end":1057,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12941917,"byte_end":12941970,"line_start":1056,"line_end":1056,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001608,"byte_end":13001616,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188}],"decl_id":null,"docs":" A thread-safe cell that can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell that can be written to only once.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000521,"byte_end":13000577,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000578,"byte_end":13000581,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `OnceCell` is typically used for global variables that need to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000582,"byte_end":13000653,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ initialized once on first use, but need no further changes. The `OnceCell`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000654,"byte_end":13000732,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ in Tokio allows the initialization procedure to be asynchronous.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000733,"byte_end":13000801,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000802,"byte_end":13000805,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000806,"byte_end":13000820,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000821,"byte_end":13000824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000825,"byte_end":13000832,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000833,"byte_end":13000863,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000864,"byte_end":13000867,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000868,"byte_end":13000908,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000909,"byte_end":13000922,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000923,"byte_end":13000928,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000929,"byte_end":13000932,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000933,"byte_end":13000988,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000989,"byte_end":13000992,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13000993,"byte_end":13001011,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001012,"byte_end":13001033,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     let result = ONCE.get_or_init(some_computation).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001034,"byte_end":13001096,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001097,"byte_end":13001128,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001129,"byte_end":13001134,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001135,"byte_end":13001142,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001143,"byte_end":13001146,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It is often useful to write a wrapper method for accessing the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001147,"byte_end":13001220,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001221,"byte_end":13001224,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001225,"byte_end":13001232,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001233,"byte_end":13001263,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001264,"byte_end":13001267,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001268,"byte_end":13001323,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001324,"byte_end":13001327,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ async fn get_global_integer() -> &'static u32 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001328,"byte_end":13001379,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     ONCE.get_or_init(|| async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001380,"byte_end":13001415,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/         1 + 1","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001416,"byte_end":13001433,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     }).await","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001434,"byte_end":13001450,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001451,"byte_end":13001456,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001457,"byte_end":13001460,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001461,"byte_end":13001479,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001480,"byte_end":13001501,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     let result = get_global_integer().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001502,"byte_end":13001550,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001551,"byte_end":13001582,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001583,"byte_end":13001588,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001589,"byte_end":13001596,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002990,"byte_end":13002993,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `OnceCell` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `OnceCell` instance.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002934,"byte_end":13002978,"line_start":128,"line_end":128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003420,"byte_end":13003428,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `OnceCell` that contains the provided value, if any.","sig":null,"attributes":[{"value":"/ Creates a new `OnceCell` that contains the provided value, if any.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003194,"byte_end":13003264,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003269,"byte_end":13003272,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the `Option` is `None`, this is equivalent to `OnceCell::new`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003277,"byte_end":13003346,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003351,"byte_end":13003354,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13003359,"byte_end":13003408,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13004670,"byte_end":13004681,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `OnceCell` currently contains a value, and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `OnceCell` currently contains a value, and `false`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13004563,"byte_end":13004639,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13004644,"byte_end":13004658,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006094,"byte_end":13006097,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value currently stored in the `OnceCell`, or\n `None` if the `OnceCell` is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value currently stored in the `OnceCell`, or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13005964,"byte_end":13006039,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ `None` if the `OnceCell` is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006044,"byte_end":13006082,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006601,"byte_end":13006608,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value currently stored in the\n `OnceCell`, or `None` if the `OnceCell` is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value currently stored in the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006258,"byte_end":13006326,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ `OnceCell`, or `None` if the `OnceCell` is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006331,"byte_end":13006384,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006389,"byte_end":13006392,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `OnceCell` mutably, it is safe to mutate the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006397,"byte_end":13006473,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ value inside the `OnceCell` — the mutable borrow statically guarantees","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006478,"byte_end":13006554,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ no other references exist.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006559,"byte_end":13006589,"line_start":239,"line_end":239,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007370,"byte_end":13007373,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `OnceCell` to the given value if the `OnceCell` is\n empty.","sig":null,"attributes":[{"value":"/ Sets the value of the `OnceCell` to the given value if the `OnceCell` is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006785,"byte_end":13006861,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006866,"byte_end":13006876,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006881,"byte_end":13006884,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` already has a value, this call will fail with an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006889,"byte_end":13006959,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ [`SetError::AlreadyInitializedError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13006964,"byte_end":13007006,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007011,"byte_end":13007014,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` is empty, but some other task is currently trying to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007019,"byte_end":13007093,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ set the value, this call will fail with [`SetError::InitializingError`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007098,"byte_end":13007174,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007179,"byte_end":13007182,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007187,"byte_end":13007276,"line_start":257,"line_end":257,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13007281,"byte_end":13007358,"line_start":258,"line_end":258,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13009114,"byte_end":13009125,"line_start":299,"line_end":299,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008431,"byte_end":13008504,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008509,"byte_end":13008542,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008547,"byte_end":13008550,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008555,"byte_end":13008630,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008635,"byte_end":13008711,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008716,"byte_end":13008749,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008754,"byte_end":13008757,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the provided operation is cancelled or panics, the initialization","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008762,"byte_end":13008834,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ attempt is cancelled. If there are other tasks waiting for the value to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008839,"byte_end":13008914,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ be initialized, one of them will start another attempt at initializing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008919,"byte_end":13008993,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13008998,"byte_end":13009012,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13009017,"byte_end":13009020,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13009025,"byte_end":13009096,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13011106,"byte_end":13011121,"line_start":347,"line_end":347,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010405,"byte_end":13010478,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010483,"byte_end":13010516,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010521,"byte_end":13010524,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010529,"byte_end":13010604,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010609,"byte_end":13010685,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010690,"byte_end":13010723,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010728,"byte_end":13010731,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the provided operation returns an error, is cancelled or panics, the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010736,"byte_end":13010811,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ initialization attempt is cancelled. If there are other tasks waiting","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010816,"byte_end":13010889,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ for the value to be initialized, one of them will start another attempt","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010894,"byte_end":13010969,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ at initializing the value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13010974,"byte_end":13011004,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13011009,"byte_end":13011012,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13011017,"byte_end":13011088,"line_start":346,"line_end":346,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13012685,"byte_end":13012695,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value from the cell, destroying the cell in the process.\n Returns `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes the value from the cell, destroying the cell in the process.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13012558,"byte_end":13012628,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13012633,"byte_end":13012673,"line_start":386,"line_end":386,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013149,"byte_end":13013153,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell empty.  Returns\n `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell empty.  Returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013026,"byte_end":13013100,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ `None` if the cell is empty.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013105,"byte_end":13013137,"line_start":398,"line_end":398,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014158,"byte_end":13014181,"line_start":424,"line_end":424,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" The cell was already initialized when [`OnceCell::set`] was called.","sig":null,"attributes":[{"value":"/ The cell was already initialized when [`OnceCell::set`] was called.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014020,"byte_end":13014091,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014096,"byte_end":13014099,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014104,"byte_end":13014153,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014240,"byte_end":13014257,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" The cell is currently being initialized.\n","sig":null,"attributes":[{"value":"/ The cell is currently being initialized.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014191,"byte_end":13014235,"line_start":426,"line_end":426,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014002,"byte_end":13014010,"line_start":420,"line_end":420,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> { AlreadyInitializedError(T), InitializingError(T), }","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3595}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`].","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013855,"byte_end":13013910,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013911,"byte_end":13013914,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013915,"byte_end":13013964,"line_start":418,"line_end":418,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014721,"byte_end":13014740,"line_start":443,"line_end":443,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014647,"byte_end":13014709,"line_start":442,"line_end":442,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014978,"byte_end":13014997,"line_start":451,"line_end":451,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014911,"byte_end":13014966,"line_start":450,"line_end":450,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3607},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3620},{"krate":0,"index":3624},{"krate":0,"index":3628},{"krate":0,"index":3635},{"krate":0,"index":3285},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3301},{"krate":0,"index":3304},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3352},{"krate":0,"index":3355}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\cfg.rs","byte_start":25765,"byte_end":25789,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015238,"byte_end":13015317,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015318,"byte_end":13015328,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015329,"byte_end":13015332,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015333,"byte_end":13015409,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015410,"byte_end":13015484,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015485,"byte_end":13015488,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015489,"byte_end":13015500,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015501,"byte_end":13015504,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015505,"byte_end":13015585,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015586,"byte_end":13015662,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015663,"byte_end":13015733,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015734,"byte_end":13015810,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015811,"byte_end":13015852,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015853,"byte_end":13015856,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015857,"byte_end":13015871,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015872,"byte_end":13015875,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015876,"byte_end":13015883,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015884,"byte_end":13015911,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015912,"byte_end":13015915,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015916,"byte_end":13015980,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13015981,"byte_end":13016032,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016033,"byte_end":13016036,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016037,"byte_end":13016070,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016071,"byte_end":13016117,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016118,"byte_end":13016176,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016177,"byte_end":13016190,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016191,"byte_end":13016202,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016203,"byte_end":13016206,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016207,"byte_end":13016233,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016234,"byte_end":13016246,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016247,"byte_end":13016254,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016255,"byte_end":13016262,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016263,"byte_end":13016266,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016267,"byte_end":13016280,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016281,"byte_end":13016284,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016285,"byte_end":13016362,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016363,"byte_end":13016441,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016442,"byte_end":13016522,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016523,"byte_end":13016526,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016527,"byte_end":13016546,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016547,"byte_end":13016550,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016551,"byte_end":13016631,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016632,"byte_end":13016711,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016712,"byte_end":13016784,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016785,"byte_end":13016788,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016789,"byte_end":13016831,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016832,"byte_end":13016878,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016879,"byte_end":13016945,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13016946,"byte_end":13017010,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017011,"byte_end":13017055,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017056,"byte_end":13017120,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017121,"byte_end":13017179,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017755,"byte_end":13017763,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017393,"byte_end":13017459,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017460,"byte_end":13017463,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017464,"byte_end":13017530,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017531,"byte_end":13017534,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017535,"byte_end":13017609,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017610,"byte_end":13017622,"line_start":69,"line_end":69,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017623,"byte_end":13017626,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017627,"byte_end":13017726,"line_start":71,"line_end":71,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018054,"byte_end":13018060,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3616}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017889,"byte_end":13017954,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017955,"byte_end":13017958,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13017959,"byte_end":13018025,"line_start":83,"line_end":83,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019055,"byte_end":13019058,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":3623}],"decl_id":null,"docs":" Returns a reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018097,"byte_end":13018140,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018141,"byte_end":13018144,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018145,"byte_end":13018221,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018222,"byte_end":13018301,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018302,"byte_end":13018352,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018353,"byte_end":13018356,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018357,"byte_end":13018428,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018429,"byte_end":13018508,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018509,"byte_end":13018589,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018590,"byte_end":13018664,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018665,"byte_end":13018668,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018669,"byte_end":13018727,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018728,"byte_end":13018731,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018732,"byte_end":13018743,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018744,"byte_end":13018801,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018802,"byte_end":13018834,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/                            |  // will block","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018835,"byte_end":13018882,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018883,"byte_end":13018937,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/ // may deadlock            |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018938,"byte_end":13018970,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13018971,"byte_end":13019003,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019004,"byte_end":13019011,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ </details>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019012,"byte_end":13019026,"line_start":110,"line_end":110,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019637,"byte_end":13019642,"line_start":137,"line_end":137,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3638},{"krate":0,"index":3642},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3294},{"krate":0,"index":3296}],"decl_id":null,"docs":" Watch error types.\n","sig":null,"attributes":[{"value":"/ Watch error types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019649,"byte_end":13019671,"line_start":138,"line_end":138,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019779,"byte_end":13019788,"line_start":144,"line_end":144,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019696,"byte_end":13019742,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019792,"byte_end":13019797,"line_start":144,"line_end":144,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::watch::error::SendError::0","value":"T","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020180,"byte_end":13020189,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020087,"byte_end":13020143,"line_start":156,"line_end":156,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023242,"byte_end":13023249,"line_start":265,"line_end":265,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022479,"byte_end":13022555,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022556,"byte_end":13022559,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022560,"byte_end":13022642,"line_start":240,"line_end":240,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022643,"byte_end":13022719,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022720,"byte_end":13022756,"line_start":242,"line_end":242,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022757,"byte_end":13022760,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022761,"byte_end":13022775,"line_start":244,"line_end":244,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022776,"byte_end":13022779,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022780,"byte_end":13022787,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022788,"byte_end":13022815,"line_start":247,"line_end":247,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022816,"byte_end":13022819,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022820,"byte_end":13022884,"line_start":249,"line_end":249,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022885,"byte_end":13022936,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022937,"byte_end":13022940,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022941,"byte_end":13022974,"line_start":252,"line_end":252,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13022975,"byte_end":13023021,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023022,"byte_end":13023080,"line_start":254,"line_end":254,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023081,"byte_end":13023094,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023095,"byte_end":13023106,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023107,"byte_end":13023110,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023111,"byte_end":13023137,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023138,"byte_end":13023150,"line_start":259,"line_end":259,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023151,"byte_end":13023158,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023159,"byte_end":13023166,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023167,"byte_end":13023170,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023171,"byte_end":13023200,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023201,"byte_end":13023234,"line_start":264,"line_end":264,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025433,"byte_end":13025439,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023976,"byte_end":13024032,"line_start":295,"line_end":295,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024037,"byte_end":13024040,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This method does not mark the returned value as seen, so future calls to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024045,"byte_end":13024121,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ [`changed`] may return immediately even if you have already seen the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024126,"byte_end":13024198,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ value with a call to `borrow`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024203,"byte_end":13024237,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024242,"byte_end":13024245,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024250,"byte_end":13024326,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024331,"byte_end":13024407,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024412,"byte_end":13024443,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024448,"byte_end":13024451,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024456,"byte_end":13024527,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024532,"byte_end":13024611,"line_start":306,"line_end":306,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024616,"byte_end":13024696,"line_start":307,"line_end":307,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024701,"byte_end":13024775,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024780,"byte_end":13024783,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024788,"byte_end":13024846,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024851,"byte_end":13024854,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024859,"byte_end":13024870,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024875,"byte_end":13024932,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024937,"byte_end":13024969,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/                            |  // will block","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13024974,"byte_end":13025021,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025026,"byte_end":13025080,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ // may deadlock            |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025085,"byte_end":13025117,"line_start":317,"line_end":317,"column_start":5,"column_end":37}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025122,"byte_end":13025154,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025159,"byte_end":13025166,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025171,"byte_end":13025185,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025190,"byte_end":13025193,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025198,"byte_end":13025232,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025237,"byte_end":13025240,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025245,"byte_end":13025259,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025264,"byte_end":13025267,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025272,"byte_end":13025279,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025284,"byte_end":13025311,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025316,"byte_end":13025319,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025324,"byte_end":13025366,"line_start":329,"line_end":329,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025371,"byte_end":13025409,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025414,"byte_end":13025421,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026905,"byte_end":13026922,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"borrow_and_update","qualname":"<Receiver<T>>::borrow_and_update","value":"pub fn borrow_and_update(&mut Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value and mark that value\n as seen.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value and mark that value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025551,"byte_end":13025626,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ as seen.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025631,"byte_end":13025643,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025648,"byte_end":13025651,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method marks the value as seen, so [`changed`] will not return","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025656,"byte_end":13025727,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ immediately if the newest value is one previously returned by","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025732,"byte_end":13025797,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/ `borrow_and_update`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025802,"byte_end":13025826,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025831,"byte_end":13025834,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025839,"byte_end":13025915,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13025920,"byte_end":13025996,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026001,"byte_end":13026032,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026037,"byte_end":13026040,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026045,"byte_end":13026116,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026121,"byte_end":13026200,"line_start":349,"line_end":349,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026205,"byte_end":13026285,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026290,"byte_end":13026364,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026369,"byte_end":13026372,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026377,"byte_end":13026435,"line_start":353,"line_end":353,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026440,"byte_end":13026443,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026448,"byte_end":13026459,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)                |  // Task 2 (on thread B)","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026464,"byte_end":13026533,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ let _ref1 = rx1.borrow_and_update();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026538,"byte_end":13026582,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/                                        |  // will block","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026587,"byte_end":13026646,"line_start":358,"line_end":358,"column_start":5,"column_end":64}},{"value":"/                                        |  let _ = tx.send(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026651,"byte_end":13026717,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ // may deadlock                        |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026722,"byte_end":13026766,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/ let _ref2 = rx2.borrow_and_update();   |","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026771,"byte_end":13026815,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026820,"byte_end":13026827,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026832,"byte_end":13026846,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026851,"byte_end":13026854,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13026859,"byte_end":13026893,"line_start":365,"line_end":365,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028110,"byte_end":13028121,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"has_changed","qualname":"<Receiver<T>>::has_changed","value":"pub fn has_changed(&Self) -> Result<bool, error::RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Checks if this channel contains a message that this receiver has not yet\n seen. The new value is not marked as seen.","sig":null,"attributes":[{"value":"/ Checks if this channel contains a message that this receiver has not yet","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027097,"byte_end":13027173,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/ seen. The new value is not marked as seen.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027178,"byte_end":13027224,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027229,"byte_end":13027232,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Although this method is called `has_changed`, it does not check new","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027237,"byte_end":13027308,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/ messages for equality, so this call will return true even if the new","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027313,"byte_end":13027385,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ message is equal to the old message.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027390,"byte_end":13027430,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027435,"byte_end":13027438,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the channel has been closed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027443,"byte_end":13027495,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027500,"byte_end":13027514,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027519,"byte_end":13027522,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027527,"byte_end":13027534,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027539,"byte_end":13027566,"line_start":383,"line_end":383,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027571,"byte_end":13027574,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027579,"byte_end":13027597,"line_start":385,"line_end":385,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027602,"byte_end":13027623,"line_start":386,"line_end":386,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027628,"byte_end":13027679,"line_start":387,"line_end":387,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027684,"byte_end":13027687,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027692,"byte_end":13027728,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027733,"byte_end":13027736,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.has_changed().unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027741,"byte_end":13027784,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*rx.borrow_and_update(), \"goodbye\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027789,"byte_end":13027844,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027849,"byte_end":13027852,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/     // The value has been marked as seen","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027857,"byte_end":13027901,"line_start":394,"line_end":394,"column_start":5,"column_end":49}},{"value":"/     assert!(!rx.has_changed().unwrap());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027906,"byte_end":13027950,"line_start":395,"line_end":395,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027955,"byte_end":13027958,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027963,"byte_end":13027980,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13027985,"byte_end":13028028,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.has_changed().is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028033,"byte_end":13028076,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028081,"byte_end":13028086,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028091,"byte_end":13028098,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029912,"byte_end":13029919,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a change notification, then marks the newest value as seen.","sig":null,"attributes":[{"value":"/ Waits for a change notification, then marks the newest value as seen.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028475,"byte_end":13028548,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028553,"byte_end":13028556,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the newest value in the channel has not yet been marked seen when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028561,"byte_end":13028633,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/ this method is called, the method marks that value seen and returns","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028638,"byte_end":13028709,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/ immediately. If the newest value has already been marked seen, then the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028714,"byte_end":13028789,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ method sleeps until a new message is sent by the [`Sender`] connected to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028794,"byte_end":13028870,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ this `Receiver`, or until the [`Sender`] is dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028875,"byte_end":13028931,"line_start":420,"line_end":420,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028936,"byte_end":13028939,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if and only if the [`Sender`] is dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13028944,"byte_end":13029018,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029023,"byte_end":13029026,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029031,"byte_end":13029050,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029055,"byte_end":13029058,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If you use it as the event in a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029063,"byte_end":13029126,"line_start":426,"line_end":426,"column_start":5,"column_end":68}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029131,"byte_end":13029200,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ completes first, then it is guaranteed that no values have been marked","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029205,"byte_end":13029279,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ seen by this call to `changed`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029284,"byte_end":13029319,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029324,"byte_end":13029327,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029332,"byte_end":13029361,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029366,"byte_end":13029369,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029374,"byte_end":13029388,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029393,"byte_end":13029396,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029401,"byte_end":13029408,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029413,"byte_end":13029440,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029445,"byte_end":13029448,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029453,"byte_end":13029471,"line_start":438,"line_end":438,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029476,"byte_end":13029497,"line_start":439,"line_end":439,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029502,"byte_end":13029553,"line_start":440,"line_end":440,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029558,"byte_end":13029561,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029566,"byte_end":13029599,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029604,"byte_end":13029644,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029649,"byte_end":13029660,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029665,"byte_end":13029668,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029673,"byte_end":13029717,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029722,"byte_end":13029766,"line_start":447,"line_end":447,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029771,"byte_end":13029774,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029779,"byte_end":13029822,"line_start":449,"line_end":449,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029827,"byte_end":13029872,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029877,"byte_end":13029882,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13029887,"byte_end":13029894,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032008,"byte_end":13032012,"line_start":523,"line_end":523,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031807,"byte_end":13031870,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031875,"byte_end":13031878,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method fails if the channel has been closed, which happens when","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031883,"byte_end":13031955,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/ every receiver has been dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031960,"byte_end":13031996,"line_start":522,"line_end":522,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032864,"byte_end":13032876,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"send_replace","qualname":"<Sender<T>>::send_replace","value":"pub fn send_replace(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers and returning\n the previous value in the channel.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers and returning","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032323,"byte_end":13032399,"line_start":533,"line_end":533,"column_start":5,"column_end":81}},{"value":"/ the previous value in the channel.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032404,"byte_end":13032442,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032447,"byte_end":13032450,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This can be useful for reusing the buffers inside a watched value.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032455,"byte_end":13032525,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/ Additionally, this method permits sending values even when there are no","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032530,"byte_end":13032605,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ receivers.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032610,"byte_end":13032624,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032629,"byte_end":13032632,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032637,"byte_end":13032651,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032656,"byte_end":13032659,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032664,"byte_end":13032671,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032676,"byte_end":13032703,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032708,"byte_end":13032711,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let (tx, _rx) = watch::channel(1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032716,"byte_end":13032754,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(2), 1);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032759,"byte_end":13032797,"line_start":546,"line_end":546,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(3), 2);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032802,"byte_end":13032840,"line_start":547,"line_end":547,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13032845,"byte_end":13032852,"line_start":548,"line_end":548,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034034,"byte_end":13034040,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033572,"byte_end":13033627,"line_start":573,"line_end":573,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033632,"byte_end":13033635,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033640,"byte_end":13033716,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033721,"byte_end":13033797,"line_start":576,"line_end":576,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033802,"byte_end":13033833,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033838,"byte_end":13033841,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033846,"byte_end":13033860,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033865,"byte_end":13033868,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033873,"byte_end":13033880,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033885,"byte_end":13033912,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033917,"byte_end":13033920,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033925,"byte_end":13033967,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13033972,"byte_end":13034010,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034015,"byte_end":13034022,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034468,"byte_end":13034477,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034152,"byte_end":13034226,"line_start":592,"line_end":592,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034231,"byte_end":13034248,"line_start":593,"line_end":593,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034253,"byte_end":13034256,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034261,"byte_end":13034275,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034280,"byte_end":13034283,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034288,"byte_end":13034295,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034300,"byte_end":13034351,"line_start":598,"line_end":598,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034356,"byte_end":13034385,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034390,"byte_end":13034393,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034398,"byte_end":13034411,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034416,"byte_end":13034444,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034449,"byte_end":13034456,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035398,"byte_end":13035404,"line_start":637,"line_end":637,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034541,"byte_end":13034587,"line_start":608,"line_end":608,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034592,"byte_end":13034595,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034600,"byte_end":13034674,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034679,"byte_end":13034734,"line_start":611,"line_end":611,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034739,"byte_end":13034742,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034747,"byte_end":13034766,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034771,"byte_end":13034774,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034779,"byte_end":13034854,"line_start":615,"line_end":615,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034859,"byte_end":13034928,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034933,"byte_end":13034936,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034941,"byte_end":13034955,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034960,"byte_end":13034963,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034968,"byte_end":13034975,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13034980,"byte_end":13035007,"line_start":621,"line_end":621,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035012,"byte_end":13035015,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035020,"byte_end":13035038,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035043,"byte_end":13035064,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035069,"byte_end":13035116,"line_start":625,"line_end":625,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035121,"byte_end":13035124,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035129,"byte_end":13035162,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035167,"byte_end":13035190,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035195,"byte_end":13035216,"line_start":629,"line_end":629,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035221,"byte_end":13035232,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035237,"byte_end":13035240,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035245,"byte_end":13035278,"line_start":632,"line_end":632,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035283,"byte_end":13035309,"line_start":633,"line_end":633,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035314,"byte_end":13035358,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035363,"byte_end":13035368,"line_start":635,"line_end":635,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035373,"byte_end":13035380,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037439,"byte_end":13037448,"line_start":706,"line_end":706,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] connected to this `Sender`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] connected to this `Sender`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035775,"byte_end":13035833,"line_start":651,"line_end":651,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035838,"byte_end":13035841,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ All messages sent before this call to `subscribe` are initially marked","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035846,"byte_end":13035920,"line_start":653,"line_end":653,"column_start":5,"column_end":79}},{"value":"/ as seen by the new `Receiver`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035925,"byte_end":13035959,"line_start":654,"line_end":654,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035964,"byte_end":13035967,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ This method can be called even if there are no other receivers. In this","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13035972,"byte_end":13036047,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ case, the channel is reopened.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036052,"byte_end":13036086,"line_start":657,"line_end":657,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036091,"byte_end":13036094,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036099,"byte_end":13036113,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036118,"byte_end":13036121,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ The new channel will receive messages sent on this `Sender`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036126,"byte_end":13036190,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036195,"byte_end":13036198,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036203,"byte_end":13036210,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036215,"byte_end":13036242,"line_start":664,"line_end":664,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036247,"byte_end":13036250,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036255,"byte_end":13036273,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036278,"byte_end":13036299,"line_start":667,"line_end":667,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036304,"byte_end":13036349,"line_start":668,"line_end":668,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036354,"byte_end":13036357,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036362,"byte_end":13036390,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036395,"byte_end":13036398,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/     let rx = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036403,"byte_end":13036435,"line_start":672,"line_end":672,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(5, *rx.borrow());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036440,"byte_end":13036476,"line_start":673,"line_end":673,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036481,"byte_end":13036484,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036489,"byte_end":13036518,"line_start":675,"line_end":675,"column_start":5,"column_end":34}},{"value":"/     assert_eq!(10, *rx.borrow());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036523,"byte_end":13036560,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036565,"byte_end":13036570,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036575,"byte_end":13036582,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036587,"byte_end":13036590,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The most recent message is considered seen by the channel, so this test","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036595,"byte_end":13036670,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ is guaranteed to pass.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036675,"byte_end":13036701,"line_start":681,"line_end":681,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036706,"byte_end":13036709,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036714,"byte_end":13036721,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036726,"byte_end":13036753,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/ use tokio::time::Duration;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036758,"byte_end":13036788,"line_start":685,"line_end":685,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036793,"byte_end":13036796,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036801,"byte_end":13036819,"line_start":687,"line_end":687,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036824,"byte_end":13036845,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036850,"byte_end":13036895,"line_start":689,"line_end":689,"column_start":5,"column_end":50}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036900,"byte_end":13036928,"line_start":690,"line_end":690,"column_start":5,"column_end":33}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036933,"byte_end":13036969,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036974,"byte_end":13036977,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13036982,"byte_end":13037015,"line_start":693,"line_end":693,"column_start":5,"column_end":38}},{"value":"/         // by spawning and sleeping, the message is sent after `main`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037020,"byte_end":13037093,"line_start":694,"line_end":694,"column_start":5,"column_end":78}},{"value":"/         // hits the call to `changed`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037098,"byte_end":13037140,"line_start":695,"line_end":695,"column_start":5,"column_end":47}},{"value":"/         # if false {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037145,"byte_end":13037169,"line_start":696,"line_end":696,"column_start":5,"column_end":29}},{"value":"/         tokio::time::sleep(Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037174,"byte_end":13037238,"line_start":697,"line_end":697,"column_start":5,"column_end":69}},{"value":"/         # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037243,"byte_end":13037258,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/         tx.send(100).unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037263,"byte_end":13037297,"line_start":699,"line_end":699,"column_start":5,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037302,"byte_end":13037313,"line_start":700,"line_end":700,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037318,"byte_end":13037321,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/     rx.changed().await.unwrap();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037326,"byte_end":13037362,"line_start":702,"line_end":702,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(100, *rx.borrow());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037367,"byte_end":13037405,"line_start":703,"line_end":703,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037410,"byte_end":13037415,"line_start":704,"line_end":704,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037420,"byte_end":13037427,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038219,"byte_end":13038233,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers that currently exist.","sig":null,"attributes":[{"value":"/ Returns the number of receivers that currently exist.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037779,"byte_end":13037836,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037841,"byte_end":13037844,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037849,"byte_end":13037863,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037868,"byte_end":13037871,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037876,"byte_end":13037883,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037888,"byte_end":13037915,"line_start":720,"line_end":720,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037920,"byte_end":13037923,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037928,"byte_end":13037946,"line_start":722,"line_end":722,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037951,"byte_end":13037972,"line_start":723,"line_end":723,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx1) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13037977,"byte_end":13038025,"line_start":724,"line_end":724,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038030,"byte_end":13038033,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038038,"byte_end":13038081,"line_start":726,"line_end":726,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038086,"byte_end":13038089,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = rx1.clone();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038094,"byte_end":13038129,"line_start":728,"line_end":728,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038134,"byte_end":13038137,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038142,"byte_end":13038185,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038190,"byte_end":13038195,"line_start":731,"line_end":731,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038200,"byte_end":13038207,"line_start":732,"line_end":732,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":126957,"byte_end":126988,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":126989,"byte_end":126992,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":126993,"byte_end":127015,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127016,"byte_end":127019,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127020,"byte_end":127101,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127102,"byte_end":127182,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127183,"byte_end":127263,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127264,"byte_end":127338,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127339,"byte_end":127414,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127415,"byte_end":127437,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127438,"byte_end":127441,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127442,"byte_end":127477,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127478,"byte_end":127481,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127482,"byte_end":127556,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127557,"byte_end":127636,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127637,"byte_end":127709,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127710,"byte_end":127785,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127786,"byte_end":127839,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127840,"byte_end":127843,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127844,"byte_end":127921,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127922,"byte_end":127995,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":127996,"byte_end":128075,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128076,"byte_end":128154,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128155,"byte_end":128227,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128228,"byte_end":128303,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128304,"byte_end":128378,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128379,"byte_end":128454,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128455,"byte_end":128485,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128486,"byte_end":128489,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128490,"byte_end":128568,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128569,"byte_end":128644,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128645,"byte_end":128722,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128723,"byte_end":128802,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128803,"byte_end":128881,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128882,"byte_end":128957,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":128958,"byte_end":129033,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129034,"byte_end":129095,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129096,"byte_end":129099,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129100,"byte_end":129124,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129125,"byte_end":129189,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129190,"byte_end":129250,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129251,"byte_end":129340,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129341,"byte_end":129429,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129430,"byte_end":129433,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129434,"byte_end":129459,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129460,"byte_end":129463,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129464,"byte_end":129531,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129532,"byte_end":129535,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129536,"byte_end":129552,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129553,"byte_end":129556,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129557,"byte_end":129636,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129637,"byte_end":129716,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129717,"byte_end":129796,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129797,"byte_end":129864,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129865,"byte_end":129868,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129869,"byte_end":129876,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129877,"byte_end":129897,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129898,"byte_end":129901,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129902,"byte_end":129924,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129925,"byte_end":129948,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129949,"byte_end":129985,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129986,"byte_end":129993,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":129994,"byte_end":130001,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130002,"byte_end":130009,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130010,"byte_end":130013,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130014,"byte_end":130093,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130094,"byte_end":130172,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130173,"byte_end":130207,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130208,"byte_end":130211,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130212,"byte_end":130219,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130220,"byte_end":130240,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130241,"byte_end":130244,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130245,"byte_end":130325,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130326,"byte_end":130360,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130361,"byte_end":130375,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130376,"byte_end":130398,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130399,"byte_end":130406,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130407,"byte_end":130410,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130411,"byte_end":130421,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130422,"byte_end":130425,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130426,"byte_end":130470,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130471,"byte_end":130500,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130501,"byte_end":130540,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130541,"byte_end":130553,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130554,"byte_end":130561,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130562,"byte_end":130569,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130570,"byte_end":130573,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130574,"byte_end":130654,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130655,"byte_end":130730,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130731,"byte_end":130743,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130744,"byte_end":130747,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130748,"byte_end":130755,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130756,"byte_end":130776,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130777,"byte_end":130780,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130781,"byte_end":130819,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130820,"byte_end":130854,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130855,"byte_end":130896,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130897,"byte_end":130904,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130905,"byte_end":130908,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130909,"byte_end":130967,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":130968,"byte_end":131001,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131002,"byte_end":131009,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131010,"byte_end":131017,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131018,"byte_end":131021,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131022,"byte_end":131090,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131091,"byte_end":131119,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131120,"byte_end":131123,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131124,"byte_end":131165,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131166,"byte_end":131199,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131200,"byte_end":131246,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131247,"byte_end":131290,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131291,"byte_end":131333,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131334,"byte_end":131375,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131376,"byte_end":131379,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131380,"byte_end":131409,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131410,"byte_end":131413,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131414,"byte_end":131494,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131495,"byte_end":131574,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131575,"byte_end":131654,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131655,"byte_end":131695,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131696,"byte_end":131699,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131700,"byte_end":131774,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131775,"byte_end":131855,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131856,"byte_end":131859,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131860,"byte_end":131940,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":131941,"byte_end":132018,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132019,"byte_end":132099,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132100,"byte_end":132115,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132116,"byte_end":132119,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132120,"byte_end":132143,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132144,"byte_end":132147,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132148,"byte_end":132228,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132229,"byte_end":132295,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132296,"byte_end":132363,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132364,"byte_end":132438,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132439,"byte_end":132451,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132452,"byte_end":132455,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132456,"byte_end":132463,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132464,"byte_end":132484,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132485,"byte_end":132488,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132489,"byte_end":132512,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132513,"byte_end":132542,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132543,"byte_end":132605,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132606,"byte_end":132613,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132614,"byte_end":132621,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132622,"byte_end":132629,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132630,"byte_end":132633,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132634,"byte_end":132708,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132709,"byte_end":132776,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132777,"byte_end":132780,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132781,"byte_end":132792,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132793,"byte_end":132815,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132816,"byte_end":132880,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132881,"byte_end":132921,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132922,"byte_end":132984,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":132985,"byte_end":133013,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133014,"byte_end":133021,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133022,"byte_end":133025,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133026,"byte_end":133055,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133056,"byte_end":133101,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133102,"byte_end":133114,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133115,"byte_end":133122,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133123,"byte_end":133130,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133131,"byte_end":133134,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133135,"byte_end":133158,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133159,"byte_end":133162,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133163,"byte_end":133253,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133254,"byte_end":133328,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133329,"byte_end":133405,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133406,"byte_end":133480,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133481,"byte_end":133560,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133561,"byte_end":133643,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133644,"byte_end":133665,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133666,"byte_end":133669,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133670,"byte_end":133686,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133687,"byte_end":133690,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133691,"byte_end":133698,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133699,"byte_end":133719,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133720,"byte_end":133723,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133724,"byte_end":133747,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133748,"byte_end":133790,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133791,"byte_end":133853,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133854,"byte_end":133882,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133883,"byte_end":133890,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133891,"byte_end":133894,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133895,"byte_end":133940,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133941,"byte_end":133948,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133949,"byte_end":133956,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133957,"byte_end":133960,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133961,"byte_end":133979,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133980,"byte_end":133983,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":133984,"byte_end":134058,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134059,"byte_end":134137,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134138,"byte_end":134214,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134215,"byte_end":134272,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134273,"byte_end":134351,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134352,"byte_end":134380,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134381,"byte_end":134384,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134385,"byte_end":134396,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134397,"byte_end":134417,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134418,"byte_end":134421,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134422,"byte_end":134460,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134461,"byte_end":134472,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134473,"byte_end":134500,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134501,"byte_end":134519,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134520,"byte_end":134562,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134563,"byte_end":134574,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134575,"byte_end":134578,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134579,"byte_end":134646,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134647,"byte_end":134679,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134680,"byte_end":134716,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134717,"byte_end":134722,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134723,"byte_end":134736,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134737,"byte_end":134744,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134745,"byte_end":134752,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134753,"byte_end":134756,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134757,"byte_end":134787,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134788,"byte_end":134791,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134792,"byte_end":134869,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134870,"byte_end":134949,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":134950,"byte_end":135023,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135024,"byte_end":135100,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135101,"byte_end":135178,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135179,"byte_end":135255,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135256,"byte_end":135321,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135322,"byte_end":135325,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135326,"byte_end":135362,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135363,"byte_end":135366,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135367,"byte_end":135374,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135375,"byte_end":135419,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135420,"byte_end":135476,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135477,"byte_end":135526,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135527,"byte_end":135532,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135533,"byte_end":135540,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135541,"byte_end":135544,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135545,"byte_end":135620,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135621,"byte_end":135700,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135701,"byte_end":135775,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135776,"byte_end":135779,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135780,"byte_end":135859,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135860,"byte_end":135932,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135933,"byte_end":135936,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135937,"byte_end":135940,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135941,"byte_end":135963,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135964,"byte_end":135967,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":135968,"byte_end":136058,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136059,"byte_end":136157,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136158,"byte_end":136181,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136182,"byte_end":136185,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136186,"byte_end":136193,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136194,"byte_end":136214,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136215,"byte_end":136238,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136239,"byte_end":136273,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136274,"byte_end":136277,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136278,"byte_end":136299,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136300,"byte_end":136353,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136354,"byte_end":136357,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136358,"byte_end":136384,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136385,"byte_end":136417,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136418,"byte_end":136517,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136518,"byte_end":136611,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136612,"byte_end":136640,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136641,"byte_end":136650,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136651,"byte_end":136657,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136658,"byte_end":136661,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136662,"byte_end":136697,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136698,"byte_end":136705,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136706,"byte_end":136713,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136714,"byte_end":136717,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136718,"byte_end":136775,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136776,"byte_end":136833,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136834,"byte_end":136897,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136898,"byte_end":136947,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136948,"byte_end":136997,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":136998,"byte_end":137055,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\task\\mod.rs","byte_start":137056,"byte_end":137102,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142412,"byte_end":142418,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142321,"byte_end":142350,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142355,"byte_end":142358,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142363,"byte_end":142402,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142449,"byte_end":142455,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Node type.\n","sig":null,"attributes":[{"value":"/ Node type.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":142425,"byte_end":142439,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17277,"byte_end":17283,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15781,"byte_end":15862,"line_start":427,"line_end":427,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15863,"byte_end":15952,"line_start":428,"line_end":428,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15953,"byte_end":15963,"line_start":429,"line_end":429,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15964,"byte_end":15967,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15968,"byte_end":16017,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16018,"byte_end":16021,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16022,"byte_end":16098,"line_start":433,"line_end":433,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16099,"byte_end":16174,"line_start":434,"line_end":434,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16175,"byte_end":16253,"line_start":435,"line_end":435,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16254,"byte_end":16331,"line_start":436,"line_end":436,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16332,"byte_end":16411,"line_start":437,"line_end":437,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16412,"byte_end":16494,"line_start":438,"line_end":438,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16495,"byte_end":16530,"line_start":439,"line_end":439,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16531,"byte_end":16534,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16535,"byte_end":16614,"line_start":441,"line_end":441,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16615,"byte_end":16697,"line_start":442,"line_end":442,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16698,"byte_end":16777,"line_start":443,"line_end":443,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16778,"byte_end":16781,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16782,"byte_end":16832,"line_start":445,"line_end":445,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16833,"byte_end":16883,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16884,"byte_end":16938,"line_start":447,"line_end":447,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16939,"byte_end":16942,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16943,"byte_end":16956,"line_start":449,"line_end":449,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16957,"byte_end":16960,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":16961,"byte_end":17020,"line_start":451,"line_end":451,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17021,"byte_end":17024,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17025,"byte_end":17043,"line_start":453,"line_end":453,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17044,"byte_end":17070,"line_start":454,"line_end":454,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17071,"byte_end":17074,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17075,"byte_end":17125,"line_start":456,"line_end":456,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17126,"byte_end":17129,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17130,"byte_end":17170,"line_start":458,"line_end":458,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17171,"byte_end":17219,"line_start":459,"line_end":459,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17220,"byte_end":17243,"line_start":460,"line_end":460,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17244,"byte_end":17253,"line_start":461,"line_end":461,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17254,"byte_end":17260,"line_start":462,"line_end":462,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":17261,"byte_end":17268,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34331,"byte_end":34337,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34551,"byte_end":34557,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34699,"byte_end":34705,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604657,"byte_end":12604662,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604689,"byte_end":12604694,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47709,"byte_end":47712,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47872,"byte_end":47875,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":48504,"byte_end":48510,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51577,"byte_end":51580,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51723,"byte_end":51726,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":52395,"byte_end":52401,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55395,"byte_end":55398,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55541,"byte_end":55544,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55935,"byte_end":55941,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":65699,"byte_end":65702,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":65850,"byte_end":65853,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":66730,"byte_end":66733,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":67531,"byte_end":67537,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":68340,"byte_end":68346,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":69152,"byte_end":69158,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":69959,"byte_end":69965,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71839,"byte_end":71846,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":80329,"byte_end":80336,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84003,"byte_end":84013,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84053,"byte_end":84063,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84365,"byte_end":84377,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84417,"byte_end":84429,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84726,"byte_end":84738,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84778,"byte_end":84790,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95540,"byte_end":95549,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95723,"byte_end":95732,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95879,"byte_end":95888,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":96001,"byte_end":96010,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96354,"byte_end":96363,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96388,"byte_end":96397,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96407,"byte_end":96416,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96908,"byte_end":96917,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":97202,"byte_end":97211,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97552,"byte_end":97561,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97586,"byte_end":97595,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97605,"byte_end":97614,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97799,"byte_end":97808,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":98093,"byte_end":98102,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100410,"byte_end":100418,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100443,"byte_end":100451,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100461,"byte_end":100469,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100650,"byte_end":100658,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100942,"byte_end":100950,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101290,"byte_end":101301,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101326,"byte_end":101337,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101347,"byte_end":101358,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102047,"byte_end":102058,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102348,"byte_end":102359,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102523,"byte_end":102534,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\mutex.rs","byte_start":102867,"byte_end":102872,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\unsafe_cell.rs","byte_start":103550,"byte_end":103560,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":108759,"byte_end":108769,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":109034,"byte_end":109044,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":109570,"byte_end":109575,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114341,"byte_end":114351,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114460,"byte_end":114472,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114827,"byte_end":114843,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116108,"byte_end":116124,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116719,"byte_end":116731,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116911,"byte_end":116916,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107806,"byte_end":107809,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107898,"byte_end":107901,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":119387,"byte_end":119393,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":120981,"byte_end":120991,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":121949,"byte_end":121965,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":122097,"byte_end":122113,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":123853,"byte_end":123859,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623642,"byte_end":12623649,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12628971,"byte_end":12628988,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636419,"byte_end":12636428,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636604,"byte_end":12636613,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637261,"byte_end":12637270,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637575,"byte_end":12637584,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638507,"byte_end":12638519,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638897,"byte_end":12638909,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12640888,"byte_end":12640892,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12640937,"byte_end":12640941,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643715,"byte_end":12643721,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643758,"byte_end":12643764,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643802,"byte_end":12643810,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643847,"byte_end":12643855,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643871,"byte_end":12643877,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12649487,"byte_end":12649491,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12649883,"byte_end":12649889,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12650069,"byte_end":12650075,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12650229,"byte_end":12650237,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655100,"byte_end":12655108,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659568,"byte_end":12659576,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12660202,"byte_end":12660206,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12660985,"byte_end":12660989,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12661650,"byte_end":12661654,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662402,"byte_end":12662408,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662823,"byte_end":12662829,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662973,"byte_end":12662981,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12663116,"byte_end":12663125,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12663298,"byte_end":12663307,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12671073,"byte_end":12671078,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12681117,"byte_end":12681123,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12681605,"byte_end":12681611,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685693,"byte_end":12685701,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694259,"byte_end":12694267,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694463,"byte_end":12694471,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694487,"byte_end":12694493,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716413,"byte_end":12716419,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716551,"byte_end":12716557,"line_start":1001,"line_end":1001,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716769,"byte_end":12716775,"line_start":1011,"line_end":1011,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718025,"byte_end":12718031,"line_start":1054,"line_end":1054,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718498,"byte_end":12718504,"line_start":1071,"line_end":1071,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718720,"byte_end":12718731,"line_start":1081,"line_end":1081,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721514,"byte_end":12721525,"line_start":1168,"line_end":1168,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12722188,"byte_end":12722199,"line_start":1191,"line_end":1191,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12722972,"byte_end":12722974,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12723268,"byte_end":12723270,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12724208,"byte_end":12724212,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12724845,"byte_end":12724853,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725119,"byte_end":12725123,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725172,"byte_end":12725176,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725683,"byte_end":12725685,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12726295,"byte_end":12726297,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12726847,"byte_end":12726849,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12727188,"byte_end":12727190,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12727513,"byte_end":12727515,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12731908,"byte_end":12731910,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12732322,"byte_end":12732326,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12732511,"byte_end":12732515,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12733516,"byte_end":12733527,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12735569,"byte_end":12735571,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12741285,"byte_end":12741287,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12741564,"byte_end":12741566,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12745889,"byte_end":12745891,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746565,"byte_end":12746580,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746721,"byte_end":12746736,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747409,"byte_end":12747426,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748425,"byte_end":12748442,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753973,"byte_end":12753988,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758362,"byte_end":12758371,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758531,"byte_end":12758540,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759041,"byte_end":12759053,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759086,"byte_end":12759098,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759438,"byte_end":12759450,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760001,"byte_end":12760013,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760298,"byte_end":12760310,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760553,"byte_end":12760562,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760713,"byte_end":12760722,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769000,"byte_end":12769005,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769059,"byte_end":12769064,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769118,"byte_end":12769128,"line_start":189,"line_end":189,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769193,"byte_end":12769208,"line_start":190,"line_end":190,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769273,"byte_end":12769289,"line_start":191,"line_end":191,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769356,"byte_end":12769372,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12770053,"byte_end":12770065,"line_start":211,"line_end":211,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12770202,"byte_end":12770214,"line_start":217,"line_end":217,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771022,"byte_end":12771027,"line_start":243,"line_end":243,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782644,"byte_end":12782649,"line_start":623,"line_end":623,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782733,"byte_end":12782738,"line_start":629,"line_end":629,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782870,"byte_end":12782875,"line_start":638,"line_end":638,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783266,"byte_end":12783276,"line_start":654,"line_end":654,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786990,"byte_end":12787000,"line_start":777,"line_end":777,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787347,"byte_end":12787357,"line_start":790,"line_end":790,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787504,"byte_end":12787514,"line_start":797,"line_end":797,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787671,"byte_end":12787681,"line_start":803,"line_end":803,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787847,"byte_end":12787857,"line_start":809,"line_end":809,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788026,"byte_end":12788041,"line_start":817,"line_end":817,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788944,"byte_end":12788959,"line_start":846,"line_end":846,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789301,"byte_end":12789316,"line_start":859,"line_end":859,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789459,"byte_end":12789474,"line_start":866,"line_end":866,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789627,"byte_end":12789642,"line_start":872,"line_end":872,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789804,"byte_end":12789819,"line_start":878,"line_end":878,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789989,"byte_end":12790005,"line_start":886,"line_end":886,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791843,"byte_end":12791859,"line_start":938,"line_end":938,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791959,"byte_end":12791975,"line_start":944,"line_end":944,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792118,"byte_end":12792134,"line_start":951,"line_end":951,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792287,"byte_end":12792303,"line_start":957,"line_end":957,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792473,"byte_end":12792489,"line_start":963,"line_end":963,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797495,"byte_end":12797503,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797536,"byte_end":12797544,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798495,"byte_end":12798501,"line_start":203,"line_end":203,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12806889,"byte_end":12806895,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12808805,"byte_end":12808813,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12809325,"byte_end":12809333,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12815195,"byte_end":12815203,"line_start":676,"line_end":676,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12817066,"byte_end":12817072,"line_start":722,"line_end":722,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826564,"byte_end":12826573,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826735,"byte_end":12826744,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826813,"byte_end":12826825,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12827124,"byte_end":12827136,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828001,"byte_end":12828005,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2328},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832140,"byte_end":12832146,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2345},{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841447,"byte_end":12841453,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841903,"byte_end":12841911,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848287,"byte_end":12848295,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848753,"byte_end":12848761,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12849832,"byte_end":12849837,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853725,"byte_end":12853730,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853767,"byte_end":12853772,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853873,"byte_end":12853878,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12854255,"byte_end":12854260,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12855312,"byte_end":12855317,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12858274,"byte_end":12858279,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12862615,"byte_end":12862624,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12875997,"byte_end":12876006,"line_start":468,"line_end":468,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12876205,"byte_end":12876211,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12877660,"byte_end":12877667,"line_start":518,"line_end":518,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12879213,"byte_end":12879220,"line_start":562,"line_end":562,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12881308,"byte_end":12881315,"line_start":627,"line_end":627,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882565,"byte_end":12882572,"line_start":657,"line_end":657,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882619,"byte_end":12882631,"line_start":661,"line_end":661,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882724,"byte_end":12882736,"line_start":667,"line_end":667,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882880,"byte_end":12882892,"line_start":673,"line_end":673,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882939,"byte_end":12882954,"line_start":677,"line_end":677,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883472,"byte_end":12883487,"line_start":692,"line_end":692,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883773,"byte_end":12883788,"line_start":701,"line_end":701,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883881,"byte_end":12883887,"line_start":706,"line_end":706,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888625,"byte_end":12888634,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904980,"byte_end":12904995,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905240,"byte_end":12905260,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905514,"byte_end":12905529,"line_start":634,"line_end":634,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905637,"byte_end":12905657,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943127,"byte_end":12943147,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946624,"byte_end":12946644,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946785,"byte_end":12946805,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946991,"byte_end":12947011,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12947193,"byte_end":12947213,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948614,"byte_end":12948635,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955518,"byte_end":12955539,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955669,"byte_end":12955690,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955811,"byte_end":12955832,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12956004,"byte_end":12956025,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12956193,"byte_end":12956214,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957699,"byte_end":12957726,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12961678,"byte_end":12961705,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12961849,"byte_end":12961876,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962011,"byte_end":12962038,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962224,"byte_end":12962251,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962433,"byte_end":12962460,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963544,"byte_end":12963559,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967378,"byte_end":12967393,"line_start":138,"line_end":138,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967528,"byte_end":12967543,"line_start":146,"line_end":146,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967723,"byte_end":12967738,"line_start":155,"line_end":155,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967914,"byte_end":12967929,"line_start":164,"line_end":164,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969094,"byte_end":12969110,"line_start":26,"line_end":26,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976316,"byte_end":12976332,"line_start":237,"line_end":237,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976466,"byte_end":12976482,"line_start":245,"line_end":245,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976611,"byte_end":12976627,"line_start":251,"line_end":251,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976807,"byte_end":12976823,"line_start":260,"line_end":260,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976999,"byte_end":12977015,"line_start":269,"line_end":269,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978257,"byte_end":12978279,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982524,"byte_end":12982546,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982680,"byte_end":12982702,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982831,"byte_end":12982853,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12983033,"byte_end":12983055,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12983231,"byte_end":12983253,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911265,"byte_end":12911271,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911325,"byte_end":12911331,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911565,"byte_end":12911580,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911638,"byte_end":12911653,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911860,"byte_end":12911880,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911975,"byte_end":12911995,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912094,"byte_end":12912110,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912175,"byte_end":12912196,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912257,"byte_end":12912279,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912347,"byte_end":12912374,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912721,"byte_end":12912737,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912802,"byte_end":12912823,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912884,"byte_end":12912906,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912974,"byte_end":12913001,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913093,"byte_end":12913099,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12942095,"byte_end":12942101,"line_start":1065,"line_end":1065,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12942193,"byte_end":12942199,"line_start":1071,"line_end":1071,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12984990,"byte_end":12985001,"line_start":31,"line_end":31,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12985025,"byte_end":12985036,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12989975,"byte_end":12989986,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12998863,"byte_end":12998874,"line_start":345,"line_end":345,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12998960,"byte_end":12998971,"line_start":351,"line_end":351,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999104,"byte_end":12999115,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999140,"byte_end":12999151,"line_start":358,"line_end":358,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999247,"byte_end":12999252,"line_start":365,"line_end":365,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001737,"byte_end":13001745,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001853,"byte_end":13001861,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002066,"byte_end":13002074,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002207,"byte_end":13002215,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002331,"byte_end":13002339,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002364,"byte_end":13002372,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002624,"byte_end":13002632,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002916,"byte_end":13002924,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3230},{"krate":0,"index":3236},{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013614,"byte_end":13013622,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013839,"byte_end":13013847,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014290,"byte_end":13014298,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014605,"byte_end":13014613,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014629,"byte_end":13014637,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019877,"byte_end":13019886,"line_start":148,"line_end":148,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020066,"byte_end":13020075,"line_start":154,"line_end":154,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020268,"byte_end":13020277,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020439,"byte_end":13020448,"line_start":168,"line_end":168,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021250,"byte_end":13021257,"line_start":194,"line_end":194,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021414,"byte_end":13021427,"line_start":201,"line_end":201,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021725,"byte_end":13021736,"line_start":213,"line_end":213,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023687,"byte_end":13023695,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031221,"byte_end":13031229,"line_start":498,"line_end":498,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031413,"byte_end":13031421,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031791,"byte_end":13031797,"line_start":518,"line_end":518,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038325,"byte_end":13038331,"line_start":738,"line_end":738,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038507,"byte_end":13038510,"line_start":747,"line_end":747,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\wake_list.rs","byte_start":139657,"byte_end":139665,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\wake_list.rs","byte_start":140685,"byte_end":140693,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":141748,"byte_end":141758,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":141828,"byte_end":141838,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144463,"byte_end":144471,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144508,"byte_end":144516,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144567,"byte_end":144577,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144812,"byte_end":144822,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":147828,"byte_end":147838,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":148195,"byte_end":148205,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":148392,"byte_end":148402,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":149784,"byte_end":149792,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":151375,"byte_end":151383,"line_start":336,"line_end":336,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15167,"byte_end":15173,"line_start":371,"line_end":371,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\macros\\mod.rs","byte_start":19708,"byte_end":19715,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15226,"byte_end":15228,"line_start":379,"line_end":379,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":102}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15238,"byte_end":15241,"line_start":380,"line_end":380,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":350}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15644,"byte_end":15648,"line_start":410,"line_end":410,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1131}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620616,"byte_end":12620625,"line_start":439,"line_end":439,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":1160}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620640,"byte_end":12620644,"line_start":441,"line_end":441,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1361}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\mod.rs","byte_start":12668497,"byte_end":12668502,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1954}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12620820,"byte_end":12620827,"line_start":449,"line_end":449,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2252}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mod.rs","byte_start":12621566,"byte_end":12621571,"line_start":472,"line_end":472,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":3259}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\lib.rs","byte_start":15693,"byte_end":15697,"line_start":416,"line_end":416,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":879}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34331,"byte_end":34337,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34551,"byte_end":34557,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\poll_fn.rs","byte_start":34699,"byte_end":34705,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604657,"byte_end":12604662,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\future\\ready.rs","byte_start":12604689,"byte_end":12604694,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":45250,"byte_end":45259,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":165},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47709,"byte_end":47712,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":47872,"byte_end":47875,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":43552},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_buf_read.rs","byte_start":48504,"byte_end":48510,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51577,"byte_end":51580,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":165}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":51723,"byte_end":51726,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":43552},"to":{"krate":0,"index":165}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_read.rs","byte_start":52395,"byte_end":52401,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":165}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55395,"byte_end":55398,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55541,"byte_end":55544,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":43552},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_seek.rs","byte_start":55935,"byte_end":55941,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":65699,"byte_end":65702,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":65850,"byte_end":65853,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":43552},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":66730,"byte_end":66733,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":67531,"byte_end":67537,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":68340,"byte_end":68346,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":69152,"byte_end":69158,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\async_write.rs","byte_start":69959,"byte_end":69965,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":9773},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":71839,"byte_end":71846,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\io\\read_buf.rs","byte_start":80329,"byte_end":80336,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":304},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":83333,"byte_end":83350,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":432},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84003,"byte_end":84013,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":9990},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84053,"byte_end":84063,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":9990},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84365,"byte_end":84377,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10014},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84417,"byte_end":84429,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10014},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84726,"byte_end":84738,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10017},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\net\\addr.rs","byte_start":84778,"byte_end":84790,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":10017},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95540,"byte_end":95549,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95723,"byte_end":95732,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":95879,"byte_end":95888,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_ptr.rs","byte_start":96001,"byte_end":96010,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96354,"byte_end":96363,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96388,"byte_end":96397,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96407,"byte_end":96416,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":96908,"byte_end":96917,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u16.rs","byte_start":97202,"byte_end":97211,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97552,"byte_end":97561,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97586,"byte_end":97595,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97605,"byte_end":97614,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":97799,"byte_end":97808,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u32.rs","byte_start":98093,"byte_end":98102,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100410,"byte_end":100418,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100443,"byte_end":100451,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100461,"byte_end":100469,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100650,"byte_end":100658,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_u8.rs","byte_start":100942,"byte_end":100950,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101290,"byte_end":101301,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101326,"byte_end":101337,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":101347,"byte_end":101358,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102047,"byte_end":102058,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102348,"byte_end":102359,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\atomic_usize.rs","byte_start":102523,"byte_end":102534,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\mutex.rs","byte_start":102867,"byte_end":102872,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\loom\\std\\unsafe_cell.rs","byte_start":103550,"byte_end":103560,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":108759,"byte_end":108769,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":109034,"byte_end":109044,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1075},"to":{"krate":0,"index":838}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":109570,"byte_end":109575,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114341,"byte_end":114351,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114460,"byte_end":114472,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1079},"to":{"krate":0,"index":845}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":114827,"byte_end":114843,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116108,"byte_end":116124,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":838}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116719,"byte_end":116731,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\thread.rs","byte_start":116911,"byte_end":116916,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107325,"byte_end":107329,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":845}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107332,"byte_end":107336,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":845}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107806,"byte_end":107809,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":845}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\park\\mod.rs","byte_start":107898,"byte_end":107901,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":5966},"to":{"krate":0,"index":845}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":119387,"byte_end":119393,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":120981,"byte_end":120991,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":121949,"byte_end":121965,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":122097,"byte_end":122113,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\coop.rs","byte_start":123853,"byte_end":123859,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12623642,"byte_end":12623649,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\barrier.rs","byte_start":12628971,"byte_end":12628988,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636419,"byte_end":12636428,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3378},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12636604,"byte_end":12636613,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3378},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637261,"byte_end":12637270,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12637575,"byte_end":12637584,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3385},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638507,"byte_end":12638519,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3397},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12638897,"byte_end":12638909,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3397},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12640888,"byte_end":12640892,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12640937,"byte_end":12640941,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643715,"byte_end":12643721,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643758,"byte_end":12643764,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643802,"byte_end":12643810,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643847,"byte_end":12643855,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12643871,"byte_end":12643877,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12649487,"byte_end":12649491,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12649883,"byte_end":12649889,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12650069,"byte_end":12650075,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12650229,"byte_end":12650237,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12655100,"byte_end":12655108,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12659568,"byte_end":12659576,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12660202,"byte_end":12660206,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12660985,"byte_end":12660989,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12661650,"byte_end":12661654,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662402,"byte_end":12662408,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1258},"to":{"krate":0,"index":940}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662823,"byte_end":12662829,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12662973,"byte_end":12662981,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12663116,"byte_end":12663125,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\broadcast.rs","byte_start":12663298,"byte_end":12663307,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12671073,"byte_end":12671078,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12681117,"byte_end":12681123,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\block.rs","byte_start":12681605,"byte_end":12681611,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12685693,"byte_end":12685701,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694259,"byte_end":12694267,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694463,"byte_end":12694471,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12694487,"byte_end":12694493,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716413,"byte_end":12716419,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1490},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716551,"byte_end":12716557,"line_start":1001,"line_end":1001,"column_start":24,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1490},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12716769,"byte_end":12716775,"line_start":1011,"line_end":1011,"column_start":9,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718025,"byte_end":12718031,"line_start":1054,"line_end":1054,"column_start":18,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718498,"byte_end":12718504,"line_start":1071,"line_end":1071,"column_start":24,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12718720,"byte_end":12718731,"line_start":1081,"line_end":1081,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12721514,"byte_end":12721525,"line_start":1168,"line_end":1168,"column_start":18,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\bounded.rs","byte_start":12722188,"byte_end":12722199,"line_start":1191,"line_end":1191,"column_start":24,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1497},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12722972,"byte_end":12722974,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12723268,"byte_end":12723270,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1668},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12724208,"byte_end":12724212,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12724845,"byte_end":12724853,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1694},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725119,"byte_end":12725123,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725172,"byte_end":12725176,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12725683,"byte_end":12725685,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12726295,"byte_end":12726297,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12726847,"byte_end":12726849,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12727188,"byte_end":12727190,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12727513,"byte_end":12727515,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12731908,"byte_end":12731910,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1668},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12732322,"byte_end":12732326,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12732511,"byte_end":12732515,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\chan.rs","byte_start":12733516,"byte_end":12733527,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":545},"to":{"krate":0,"index":1676}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12735569,"byte_end":12735571,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12741285,"byte_end":12741287,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12741564,"byte_end":12741566,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\list.rs","byte_start":12745889,"byte_end":12745891,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1830},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746565,"byte_end":12746580,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1892},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12746721,"byte_end":12746736,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1892},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12747409,"byte_end":12747426,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12748425,"byte_end":12748442,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\unbounded.rs","byte_start":12753973,"byte_end":12753988,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758362,"byte_end":12758371,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3413},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12758531,"byte_end":12758540,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3413},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759041,"byte_end":12759053,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3420},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759086,"byte_end":12759098,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3420},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12759438,"byte_end":12759450,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3420},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760001,"byte_end":12760013,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760298,"byte_end":12760310,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3442},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760553,"byte_end":12760562,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3458},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mpsc\\error.rs","byte_start":12760713,"byte_end":12760722,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769000,"byte_end":12769005,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769059,"byte_end":12769064,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769118,"byte_end":12769128,"line_start":189,"line_end":189,"column_start":25,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769193,"byte_end":12769208,"line_start":190,"line_end":190,"column_start":25,"column_end":40},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769273,"byte_end":12769289,"line_start":191,"line_end":191,"column_start":29,"column_end":45},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12769356,"byte_end":12769372,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12770053,"byte_end":12770065,"line_start":211,"line_end":211,"column_start":23,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3463},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12770202,"byte_end":12770214,"line_start":217,"line_end":217,"column_start":16,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3463},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12771022,"byte_end":12771027,"line_start":243,"line_end":243,"column_start":17,"column_end":22},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782644,"byte_end":12782649,"line_start":623,"line_end":623,"column_start":21,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782733,"byte_end":12782738,"line_start":629,"line_end":629,"column_start":21,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12782870,"byte_end":12782875,"line_start":638,"line_end":638,"column_start":37,"column_end":42},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12783266,"byte_end":12783276,"line_start":654,"line_end":654,"column_start":21,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12786990,"byte_end":12787000,"line_start":777,"line_end":777,"column_start":26,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787347,"byte_end":12787357,"line_start":790,"line_end":790,"column_start":27,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787504,"byte_end":12787514,"line_start":797,"line_end":797,"column_start":30,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787671,"byte_end":12787681,"line_start":803,"line_end":803,"column_start":45,"column_end":55},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12787847,"byte_end":12787857,"line_start":809,"line_end":809,"column_start":49,"column_end":59},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788026,"byte_end":12788041,"line_start":817,"line_end":817,"column_start":17,"column_end":32},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12788944,"byte_end":12788959,"line_start":846,"line_end":846,"column_start":26,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789301,"byte_end":12789316,"line_start":859,"line_end":859,"column_start":27,"column_end":42},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789459,"byte_end":12789474,"line_start":866,"line_end":866,"column_start":30,"column_end":45},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789627,"byte_end":12789642,"line_start":872,"line_end":872,"column_start":45,"column_end":60},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789804,"byte_end":12789819,"line_start":878,"line_end":878,"column_start":49,"column_end":64},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12789989,"byte_end":12790005,"line_start":886,"line_end":886,"column_start":21,"column_end":37},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791843,"byte_end":12791859,"line_start":938,"line_end":938,"column_start":30,"column_end":46},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12791959,"byte_end":12791975,"line_start":944,"line_end":944,"column_start":31,"column_end":47},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792118,"byte_end":12792134,"line_start":951,"line_end":951,"column_start":34,"column_end":50},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792287,"byte_end":12792303,"line_start":957,"line_end":957,"column_start":49,"column_end":65},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\mutex.rs","byte_start":12792473,"byte_end":12792489,"line_start":963,"line_end":963,"column_start":53,"column_end":69},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797495,"byte_end":12797503,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12797536,"byte_end":12797544,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12798495,"byte_end":12798501,"line_start":203,"line_end":203,"column_start":6,"column_end":12},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12806889,"byte_end":12806895,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12808805,"byte_end":12808813,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12809325,"byte_end":12809333,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12815195,"byte_end":12815203,"line_start":676,"line_end":676,"column_start":15,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\notify.rs","byte_start":12817066,"byte_end":12817072,"line_start":722,"line_end":722,"column_start":35,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3483},"to":{"krate":0,"index":940}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826564,"byte_end":12826573,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3520},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826735,"byte_end":12826744,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3520},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12826813,"byte_end":12826825,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3532},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12827124,"byte_end":12827136,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3532},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12828001,"byte_end":12828005,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12832140,"byte_end":12832146,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841447,"byte_end":12841453,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3508},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12841903,"byte_end":12841911,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848287,"byte_end":12848295,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12848753,"byte_end":12848761,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12849832,"byte_end":12849837,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853725,"byte_end":12853730,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853767,"byte_end":12853772,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12853873,"byte_end":12853878,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12854255,"byte_end":12854260,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12855312,"byte_end":12855317,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\oneshot.rs","byte_start":12858274,"byte_end":12858279,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12862615,"byte_end":12862624,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12875997,"byte_end":12876006,"line_start":468,"line_end":468,"column_start":21,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2459},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12876205,"byte_end":12876211,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12877660,"byte_end":12877667,"line_start":518,"line_end":518,"column_start":17,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2465},"to":{"krate":2,"index":12715}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12879213,"byte_end":12879220,"line_start":562,"line_end":562,"column_start":10,"column_end":17},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12881308,"byte_end":12881315,"line_start":627,"line_end":627,"column_start":15,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2465},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882565,"byte_end":12882572,"line_start":657,"line_end":657,"column_start":22,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2465},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882619,"byte_end":12882631,"line_start":661,"line_end":661,"column_start":6,"column_end":18},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882724,"byte_end":12882736,"line_start":667,"line_end":667,"column_start":23,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882880,"byte_end":12882892,"line_start":673,"line_end":673,"column_start":28,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3561},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12882939,"byte_end":12882954,"line_start":677,"line_end":677,"column_start":6,"column_end":21},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883472,"byte_end":12883487,"line_start":692,"line_end":692,"column_start":23,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3551},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883773,"byte_end":12883788,"line_start":701,"line_end":701,"column_start":28,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3551},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\batch_semaphore.rs","byte_start":12883881,"byte_end":12883887,"line_start":706,"line_end":706,"column_start":35,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2471},"to":{"krate":0,"index":940}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12888625,"byte_end":12888634,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12904980,"byte_end":12904995,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905240,"byte_end":12905260,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905514,"byte_end":12905529,"line_start":634,"line_end":634,"column_start":19,"column_end":34},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\semaphore.rs","byte_start":12905637,"byte_end":12905657,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12943127,"byte_end":12943147,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946624,"byte_end":12946644,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946785,"byte_end":12946805,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12946991,"byte_end":12947011,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":12947193,"byte_end":12947213,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12948614,"byte_end":12948635,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955518,"byte_end":12955539,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955669,"byte_end":12955690,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12955811,"byte_end":12955832,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12956004,"byte_end":12956025,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":12956193,"byte_end":12956214,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12957699,"byte_end":12957726,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12961678,"byte_end":12961705,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12961849,"byte_end":12961876,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962011,"byte_end":12962038,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962224,"byte_end":12962251,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":12962433,"byte_end":12962460,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12963544,"byte_end":12963559,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967378,"byte_end":12967393,"line_start":138,"line_end":138,"column_start":32,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967528,"byte_end":12967543,"line_start":146,"line_end":146,"column_start":36,"column_end":51},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967723,"byte_end":12967738,"line_start":155,"line_end":155,"column_start":38,"column_end":53},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\read_guard.rs","byte_start":12967914,"byte_end":12967929,"line_start":164,"line_end":164,"column_start":30,"column_end":45},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12969094,"byte_end":12969110,"line_start":26,"line_end":26,"column_start":21,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976316,"byte_end":12976332,"line_start":237,"line_end":237,"column_start":32,"column_end":48},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976466,"byte_end":12976482,"line_start":245,"line_end":245,"column_start":35,"column_end":51},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976611,"byte_end":12976627,"line_start":251,"line_end":251,"column_start":36,"column_end":52},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976807,"byte_end":12976823,"line_start":260,"line_end":260,"column_start":38,"column_end":54},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard.rs","byte_start":12976999,"byte_end":12977015,"line_start":269,"line_end":269,"column_start":30,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12978257,"byte_end":12978279,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982524,"byte_end":12982546,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982680,"byte_end":12982702,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12982831,"byte_end":12982853,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12983033,"byte_end":12983055,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":12983231,"byte_end":12983253,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911265,"byte_end":12911271,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3582},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911325,"byte_end":12911331,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3582},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911565,"byte_end":12911580,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911638,"byte_end":12911653,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2809},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911860,"byte_end":12911880,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12911975,"byte_end":12911995,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912094,"byte_end":12912110,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912175,"byte_end":12912196,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912257,"byte_end":12912279,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912347,"byte_end":12912374,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912721,"byte_end":12912737,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912802,"byte_end":12912823,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912884,"byte_end":12912906,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12912974,"byte_end":12913001,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12913093,"byte_end":12913099,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12942095,"byte_end":12942101,"line_start":1065,"line_end":1065,"column_start":21,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3582},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\rwlock.rs","byte_start":12942193,"byte_end":12942199,"line_start":1071,"line_end":1071,"column_start":29,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3582},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12984990,"byte_end":12985001,"line_start":31,"line_end":31,"column_start":24,"column_end":35},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":8372}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12985025,"byte_end":12985036,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":8371}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12989975,"byte_end":12989986,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12998863,"byte_end":12998874,"line_start":345,"line_end":345,"column_start":18,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12998960,"byte_end":12998971,"line_start":351,"line_end":351,"column_start":21,"column_end":32},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999104,"byte_end":12999115,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999140,"byte_end":12999151,"line_start":358,"line_end":358,"column_start":22,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3098},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\task\\atomic_waker.rs","byte_start":12999247,"byte_end":12999252,"line_start":365,"line_end":365,"column_start":19,"column_end":24},"kind":{"Impl":{"id":281}},"from":{"krate":2,"index":12981},"to":{"krate":0,"index":3130}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001737,"byte_end":13001745,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13001853,"byte_end":13001861,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002066,"byte_end":13002074,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002207,"byte_end":13002215,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002331,"byte_end":13002339,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002364,"byte_end":13002372,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002624,"byte_end":13002632,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13002916,"byte_end":13002924,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013614,"byte_end":13013622,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13013839,"byte_end":13013847,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014290,"byte_end":13014298,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3590},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014605,"byte_end":13014613,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3590},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\once_cell.rs","byte_start":13014629,"byte_end":13014637,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13019877,"byte_end":13019886,"line_start":148,"line_end":148,"column_start":42,"column_end":51},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3638},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020066,"byte_end":13020075,"line_start":154,"line_end":154,"column_start":47,"column_end":56},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3638},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020268,"byte_end":13020277,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3645},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13020439,"byte_end":13020448,"line_start":168,"line_end":168,"column_start":32,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3645},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021250,"byte_end":13021257,"line_start":194,"line_end":194,"column_start":10,"column_end":17},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021414,"byte_end":13021427,"line_start":201,"line_end":201,"column_start":10,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13021725,"byte_end":13021736,"line_start":213,"line_end":213,"column_start":10,"column_end":21},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13023687,"byte_end":13023695,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031221,"byte_end":13031229,"line_start":498,"line_end":498,"column_start":19,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031413,"byte_end":13031421,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13031791,"byte_end":13031797,"line_start":518,"line_end":518,"column_start":9,"column_end":15},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038325,"byte_end":13038331,"line_start":738,"line_end":738,"column_start":18,"column_end":24},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\sync\\watch.rs","byte_start":13038507,"byte_end":13038510,"line_start":747,"line_end":747,"column_start":24,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\wake_list.rs","byte_start":139657,"byte_end":139665,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\wake_list.rs","byte_start":140685,"byte_end":140693,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":141748,"byte_end":141758,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":141828,"byte_end":141838,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144463,"byte_end":144471,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":946},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144508,"byte_end":144516,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":946},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144567,"byte_end":144577,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":144812,"byte_end":144822,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":147828,"byte_end":147838,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":148195,"byte_end":148205,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":148392,"byte_end":148402,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":149784,"byte_end":149792,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tweek\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.16.1\\src\\util\\linked_list.rs","byte_start":151375,"byte_end":151383,"line_start":336,"line_end":336,"column_start":24,"column_end":32},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":946},"to":{"krate":2,"index":9401}}]}